                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.0 #9615 (MINGW32)
                              4 ;--------------------------------------------------------
                              5 	.module CFG8266
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _FinishUpdate
                             13 	.globl _WaitForRXData
                             14 	.globl _ultostr
                             15 	.globl _TxByte
                             16 	.globl _IsValidInput
                             17 	.globl _MyRead
                             18 	.globl _DosCall
                             19 	.globl __size
                             20 	.globl __seek
                             21 	.globl __tell
                             22 	.globl _Close
                             23 	.globl _Open
                             24 	.globl _KeyboardHit
                             25 	.globl _PrintChar
                             26 	.globl _InputString
                             27 	.globl _InputChar
                             28 	.globl _Print
                             29 	.globl _strlen
                             30 	.globl _atol
                             31 	.globl _printf
                             32 	.globl _ucNagleOn
                             33 	.globl _ucNagleOff
                             34 	.globl _ucIsFw
                             35 	.globl _ucLocalUpdate
                             36 	.globl _lPort
                             37 	.globl _uiPort
                             38 	.globl _ucPort
                             39 	.globl _ucFile
                             40 	.globl _ucServer
                             41 	.globl _ucScan
                             42 	.globl _TickCount
                             43 	.globl _strUsage
                             44 	.globl _responseOTASPIFF
                             45 	.globl _responseOTAFW
                             46 	.globl _responseWRBlock
                             47 	.globl _responseRSCERTUpdate
                             48 	.globl _responseRSFWUpdate
                             49 	.globl _apconfigurationResponse
                             50 	.globl _scanresResponse
                             51 	.globl _nagleoffResponse
                             52 	.globl _nagleonResponse
                             53 	.globl _scanResponse
                             54 	.globl _responseOK
                             55 	.globl _certificateDone
                             56 	.globl _endUpdate
                             57 	.globl _responseReady
                             58 ;--------------------------------------------------------
                             59 ; special function registers
                             60 ;--------------------------------------------------------
                     0006    61 _myPort6	=	0x0006
                     0007    62 _myPort7	=	0x0007
                             63 ;--------------------------------------------------------
                             64 ; ram data
                             65 ;--------------------------------------------------------
                             66 	.area _DATA
                     FC9E    67 _TickCount	=	0xfc9e
   0000                      68 _ucScan::
   0000                      69 	.ds 1
   0001                      70 _ucServer::
   0001                      71 	.ds 256
   0101                      72 _ucFile::
   0101                      73 	.ds 256
   0201                      74 _ucPort::
   0201                      75 	.ds 6
   0207                      76 _uiPort::
   0207                      77 	.ds 2
   0209                      78 _lPort::
   0209                      79 	.ds 4
   020D                      80 _ucLocalUpdate::
   020D                      81 	.ds 1
   020E                      82 _ucIsFw::
   020E                      83 	.ds 1
   020F                      84 _ucNagleOff::
   020F                      85 	.ds 1
   0210                      86 _ucNagleOn::
   0210                      87 	.ds 1
                             88 ;--------------------------------------------------------
                             89 ; ram data
                             90 ;--------------------------------------------------------
                             91 	.area _INITIALIZED
                             92 ;--------------------------------------------------------
                             93 ; absolute external ram data
                             94 ;--------------------------------------------------------
                             95 	.area _DABS (ABS)
                             96 ;--------------------------------------------------------
                             97 ; global & static initialisations
                             98 ;--------------------------------------------------------
                             99 	.area _HOME
                            100 	.area _GSINIT
                            101 	.area _GSFINAL
                            102 	.area _GSINIT
                            103 ;--------------------------------------------------------
                            104 ; Home
                            105 ;--------------------------------------------------------
                            106 	.area _HOME
                            107 	.area _HOME
                            108 ;--------------------------------------------------------
                            109 ; code
                            110 ;--------------------------------------------------------
                            111 	.area _CODE
                            112 ;..\/fusion-c/header/io.h:155: extern	unsigned long _tell(int fH) { return B8dH.rand_record; }
                            113 ;	---------------------------------
                            114 ; Function _tell
                            115 ; ---------------------------------
   0000                     116 __tell::
   0000 CDr00r00      [17]  117 	call	___sdcc_enter_ix
   0003 01r00r00      [10]  118 	ld	bc,#__buf8_fcbs+0
   0006 DD 5E 04      [19]  119 	ld	e,4 (ix)
   0009 DD 56 05      [19]  120 	ld	d,5 (ix)
   000C 6B            [ 4]  121 	ld	l, e
   000D 62            [ 4]  122 	ld	h, d
   000E 29            [11]  123 	add	hl, hl
   000F 29            [11]  124 	add	hl, hl
   0010 29            [11]  125 	add	hl, hl
   0011 19            [11]  126 	add	hl, de
   0012 29            [11]  127 	add	hl, hl
   0013 19            [11]  128 	add	hl, de
   0014 29            [11]  129 	add	hl, hl
   0015 09            [11]  130 	add	hl,bc
   0016 11 21 00      [10]  131 	ld	de, #0x0021
   0019 19            [11]  132 	add	hl, de
   001A 4E            [ 7]  133 	ld	c,(hl)
   001B 23            [ 6]  134 	inc	hl
   001C 46            [ 7]  135 	ld	b,(hl)
   001D 23            [ 6]  136 	inc	hl
   001E 5E            [ 7]  137 	ld	e,(hl)
   001F 23            [ 6]  138 	inc	hl
   0020 56            [ 7]  139 	ld	d,(hl)
   0021 69            [ 4]  140 	ld	l,c
   0022 60            [ 4]  141 	ld	h,b
   0023 DD E1         [14]  142 	pop	ix
   0025 C9            [10]  143 	ret
                            144 ;..\/fusion-c/header/io.h:157: extern	void 	_seek(int fH, long pos, int ot)
                            145 ;	---------------------------------
                            146 ; Function _seek
                            147 ; ---------------------------------
   0026                     148 __seek::
   0026 CDr00r00      [17]  149 	call	___sdcc_enter_ix
   0029 F5            [11]  150 	push	af
   002A F5            [11]  151 	push	af
   002B F5            [11]  152 	push	af
   002C F5            [11]  153 	push	af
                            154 ;..\/fusion-c/header/io.h:159: if(ot==SEEK_CUR) B8dH.rand_record+=pos;
   002D DD 4E 04      [19]  155 	ld	c,4 (ix)
   0030 DD 46 05      [19]  156 	ld	b,5 (ix)
   0033 69            [ 4]  157 	ld	l, c
   0034 60            [ 4]  158 	ld	h, b
   0035 29            [11]  159 	add	hl, hl
   0036 29            [11]  160 	add	hl, hl
   0037 29            [11]  161 	add	hl, hl
   0038 09            [11]  162 	add	hl, bc
   0039 29            [11]  163 	add	hl, hl
   003A 09            [11]  164 	add	hl, bc
   003B 29            [11]  165 	add	hl, hl
   003C E5            [11]  166 	push	hl
   003D 21 06 00      [10]  167 	ld	hl, #6
   0040 39            [11]  168 	add	hl, sp
   0041 EB            [ 4]  169 	ex	de, hl
   0042 21 10 00      [10]  170 	ld	hl, #16
   0045 39            [11]  171 	add	hl, sp
   0046 01 04 00      [10]  172 	ld	bc, #4
   0049 ED B0         [21]  173 	ldir
   004B C1            [10]  174 	pop	bc
   004C DD 7E 0A      [19]  175 	ld	a,10 (ix)
   004F 3D            [ 4]  176 	dec	a
   0050 20 3C         [12]  177 	jr	NZ,00102$
   0052 DD 7E 0B      [19]  178 	ld	a,11 (ix)
   0055 B7            [ 4]  179 	or	a, a
   0056 20 36         [12]  180 	jr	NZ,00102$
   0058 21r21r00      [10]  181 	ld	hl,#__buf8_fcbs+0 + 0x0021
   005B 09            [11]  182 	add	hl,bc
   005C 5D            [ 4]  183 	ld	e,l
   005D 54            [ 4]  184 	ld	d,h
   005E 4E            [ 7]  185 	ld	c,(hl)
   005F 23            [ 6]  186 	inc	hl
   0060 46            [ 7]  187 	ld	b,(hl)
   0061 23            [ 6]  188 	inc	hl
   0062 23            [ 6]  189 	inc	hl
   0063 7E            [ 7]  190 	ld	a,(hl)
   0064 2B            [ 6]  191 	dec	hl
   0065 6E            [ 7]  192 	ld	l,(hl)
   0066 67            [ 4]  193 	ld	h,a
   0067 79            [ 4]  194 	ld	a,c
   0068 DD 86 FC      [19]  195 	add	a, -4 (ix)
   006B DD 77 F8      [19]  196 	ld	-8 (ix),a
   006E 78            [ 4]  197 	ld	a,b
   006F DD 8E FD      [19]  198 	adc	a, -3 (ix)
   0072 DD 77 F9      [19]  199 	ld	-7 (ix),a
   0075 7D            [ 4]  200 	ld	a,l
   0076 DD 8E FE      [19]  201 	adc	a, -2 (ix)
   0079 DD 77 FA      [19]  202 	ld	-6 (ix),a
   007C 7C            [ 4]  203 	ld	a,h
   007D DD 8E FF      [19]  204 	adc	a, -1 (ix)
   0080 DD 77 FB      [19]  205 	ld	-5 (ix),a
   0083 21 00 00      [10]  206 	ld	hl, #0x0000
   0086 39            [11]  207 	add	hl, sp
   0087 01 04 00      [10]  208 	ld	bc, #0x0004
   008A ED B0         [21]  209 	ldir
   008C 18 5D         [12]  210 	jr	00104$
   008E                     211 00102$:
                            212 ;..\/fusion-c/header/io.h:160: else B8dH.rand_record = (ot==SEEK_END ? B8dH.file_size+pos : pos );
   008E 21r00r00      [10]  213 	ld	hl,#__buf8_fcbs+0
   0091 09            [11]  214 	add	hl,bc
   0092 7D            [ 4]  215 	ld	a,l
   0093 C6 21         [ 7]  216 	add	a, #0x21
   0095 5F            [ 4]  217 	ld	e,a
   0096 7C            [ 4]  218 	ld	a,h
   0097 CE 00         [ 7]  219 	adc	a, #0x00
   0099 57            [ 4]  220 	ld	d,a
   009A DD 7E 0A      [19]  221 	ld	a,10 (ix)
   009D D6 02         [ 7]  222 	sub	a, #0x02
   009F 20 31         [12]  223 	jr	NZ,00106$
   00A1 DD 7E 0B      [19]  224 	ld	a,11 (ix)
   00A4 B7            [ 4]  225 	or	a, a
   00A5 20 2B         [12]  226 	jr	NZ,00106$
   00A7 01 10 00      [10]  227 	ld	bc, #0x0010
   00AA 09            [11]  228 	add	hl, bc
   00AB 4E            [ 7]  229 	ld	c,(hl)
   00AC 23            [ 6]  230 	inc	hl
   00AD 46            [ 7]  231 	ld	b,(hl)
   00AE 23            [ 6]  232 	inc	hl
   00AF 23            [ 6]  233 	inc	hl
   00B0 7E            [ 7]  234 	ld	a,(hl)
   00B1 2B            [ 6]  235 	dec	hl
   00B2 6E            [ 7]  236 	ld	l,(hl)
   00B3 67            [ 4]  237 	ld	h,a
   00B4 79            [ 4]  238 	ld	a,c
   00B5 DD 86 FC      [19]  239 	add	a, -4 (ix)
   00B8 DD 77 F8      [19]  240 	ld	-8 (ix),a
   00BB 78            [ 4]  241 	ld	a,b
   00BC DD 8E FD      [19]  242 	adc	a, -3 (ix)
   00BF DD 77 F9      [19]  243 	ld	-7 (ix),a
   00C2 7D            [ 4]  244 	ld	a,l
   00C3 DD 8E FE      [19]  245 	adc	a, -2 (ix)
   00C6 DD 77 FA      [19]  246 	ld	-6 (ix),a
   00C9 7C            [ 4]  247 	ld	a,h
   00CA DD 8E FF      [19]  248 	adc	a, -1 (ix)
   00CD DD 77 FB      [19]  249 	ld	-5 (ix),a
   00D0 18 10         [12]  250 	jr	00107$
   00D2                     251 00106$:
   00D2 D5            [11]  252 	push	de
   00D3 21 02 00      [10]  253 	ld	hl, #2
   00D6 39            [11]  254 	add	hl, sp
   00D7 EB            [ 4]  255 	ex	de, hl
   00D8 21 10 00      [10]  256 	ld	hl, #16
   00DB 39            [11]  257 	add	hl, sp
   00DC 01 04 00      [10]  258 	ld	bc, #4
   00DF ED B0         [21]  259 	ldir
   00E1 D1            [10]  260 	pop	de
   00E2                     261 00107$:
   00E2 21 00 00      [10]  262 	ld	hl, #0x0000
   00E5 39            [11]  263 	add	hl, sp
   00E6 01 04 00      [10]  264 	ld	bc, #0x0004
   00E9 ED B0         [21]  265 	ldir
   00EB                     266 00104$:
   00EB DD F9         [10]  267 	ld	sp, ix
   00ED DD E1         [14]  268 	pop	ix
   00EF C9            [10]  269 	ret
                            270 ;..\/fusion-c/header/io.h:163: extern	unsigned long _size(int fH) { return B8dH.file_size; }
                            271 ;	---------------------------------
                            272 ; Function _size
                            273 ; ---------------------------------
   00F0                     274 __size::
   00F0 CDr00r00      [17]  275 	call	___sdcc_enter_ix
   00F3 01r00r00      [10]  276 	ld	bc,#__buf8_fcbs+0
   00F6 DD 5E 04      [19]  277 	ld	e,4 (ix)
   00F9 DD 56 05      [19]  278 	ld	d,5 (ix)
   00FC 6B            [ 4]  279 	ld	l, e
   00FD 62            [ 4]  280 	ld	h, d
   00FE 29            [11]  281 	add	hl, hl
   00FF 29            [11]  282 	add	hl, hl
   0100 29            [11]  283 	add	hl, hl
   0101 19            [11]  284 	add	hl, de
   0102 29            [11]  285 	add	hl, hl
   0103 19            [11]  286 	add	hl, de
   0104 29            [11]  287 	add	hl, hl
   0105 09            [11]  288 	add	hl,bc
   0106 11 10 00      [10]  289 	ld	de, #0x0010
   0109 19            [11]  290 	add	hl, de
   010A 4E            [ 7]  291 	ld	c,(hl)
   010B 23            [ 6]  292 	inc	hl
   010C 46            [ 7]  293 	ld	b,(hl)
   010D 23            [ 6]  294 	inc	hl
   010E 5E            [ 7]  295 	ld	e,(hl)
   010F 23            [ 6]  296 	inc	hl
   0110 56            [ 7]  297 	ld	d,(hl)
   0111 69            [ 4]  298 	ld	l,c
   0112 60            [ 4]  299 	ld	h,b
   0113 DD E1         [14]  300 	pop	ix
   0115 C9            [10]  301 	ret
                            302 ;..\CFG8266.c:124: unsigned int MyRead (int Handle, unsigned char* Buffer, unsigned int Size)
                            303 ;	---------------------------------
                            304 ; Function MyRead
                            305 ; ---------------------------------
   0116                     306 _MyRead::
   0116 CDr00r00      [17]  307 	call	___sdcc_enter_ix
   0119 21 F2 FF      [10]  308 	ld	hl,#-14
   011C 39            [11]  309 	add	hl,sp
   011D F9            [ 6]  310 	ld	sp,hl
                            311 ;..\CFG8266.c:126: unsigned int iRet = 0;
   011E DD 36 FE 00   [19]  312 	ld	-2 (ix),#0x00
   0122 DD 36 FF 00   [19]  313 	ld	-1 (ix),#0x00
                            314 ;..\CFG8266.c:130: regs.Words.DE = (unsigned int) Buffer;
   0126 21 00 00      [10]  315 	ld	hl,#0x0000
   0129 39            [11]  316 	add	hl,sp
   012A 4D            [ 4]  317 	ld	c,l
   012B 44            [ 4]  318 	ld	b,h
   012C 21 04 00      [10]  319 	ld	hl,#0x0004
   012F 09            [11]  320 	add	hl,bc
   0130 DD 5E 06      [19]  321 	ld	e,6 (ix)
   0133 DD 56 07      [19]  322 	ld	d,7 (ix)
   0136 73            [ 7]  323 	ld	(hl),e
   0137 23            [ 6]  324 	inc	hl
   0138 72            [ 7]  325 	ld	(hl),d
                            326 ;..\CFG8266.c:131: regs.Words.HL = Size;
   0139 21 06 00      [10]  327 	ld	hl,#0x0006
   013C 09            [11]  328 	add	hl,bc
   013D DD 7E 08      [19]  329 	ld	a,8 (ix)
   0140 77            [ 7]  330 	ld	(hl),a
   0141 23            [ 6]  331 	inc	hl
   0142 DD 7E 09      [19]  332 	ld	a,9 (ix)
   0145 77            [ 7]  333 	ld	(hl),a
                            334 ;..\CFG8266.c:132: regs.Bytes.B = (unsigned char)(Handle&0xff);
   0146 21 03 00      [10]  335 	ld	hl,#0x0003
   0149 39            [11]  336 	add	hl,sp
   014A DD 4E 04      [19]  337 	ld	c,4 (ix)
   014D 71            [ 7]  338 	ld	(hl),c
                            339 ;..\CFG8266.c:133: DosCall(0x48, &regs, REGS_MAIN, REGS_MAIN);
   014E 21 00 00      [10]  340 	ld	hl,#0x0000
   0151 39            [11]  341 	add	hl,sp
   0152 4D            [ 4]  342 	ld	c,l
   0153 44            [ 4]  343 	ld	b,h
   0154 59            [ 4]  344 	ld	e, c
   0155 50            [ 4]  345 	ld	d, b
   0156 C5            [11]  346 	push	bc
   0157 21 02 02      [10]  347 	ld	hl,#0x0202
   015A E5            [11]  348 	push	hl
   015B D5            [11]  349 	push	de
   015C 3E 48         [ 7]  350 	ld	a,#0x48
   015E F5            [11]  351 	push	af
   015F 33            [ 6]  352 	inc	sp
   0160 CDr00r00      [17]  353 	call	_DosCall
   0163 F1            [10]  354 	pop	af
   0164 F1            [10]  355 	pop	af
   0165 33            [ 6]  356 	inc	sp
   0166 C1            [10]  357 	pop	bc
                            358 ;..\CFG8266.c:134: if (regs.Bytes.A == 0)
   0167 69            [ 4]  359 	ld	l, c
   0168 60            [ 4]  360 	ld	h, b
   0169 23            [ 6]  361 	inc	hl
   016A 7E            [ 7]  362 	ld	a,(hl)
   016B B7            [ 4]  363 	or	a, a
   016C 20 0F         [12]  364 	jr	NZ,00102$
                            365 ;..\CFG8266.c:137: iRet = regs.Words.HL;
   016E C5            [11]  366 	push	bc
   016F FD E1         [14]  367 	pop	iy
   0171 FD 7E 06      [19]  368 	ld	a,6 (iy)
   0174 DD 77 FE      [19]  369 	ld	-2 (ix),a
   0177 FD 7E 07      [19]  370 	ld	a,7 (iy)
   017A DD 77 FF      [19]  371 	ld	-1 (ix),a
   017D                     372 00102$:
                            373 ;..\CFG8266.c:140: return iRet;
   017D DD 6E FE      [19]  374 	ld	l,-2 (ix)
   0180 DD 66 FF      [19]  375 	ld	h,-1 (ix)
   0183 DD F9         [10]  376 	ld	sp, ix
   0185 DD E1         [14]  377 	pop	ix
   0187 C9            [10]  378 	ret
   0188                     379 _responseReady:
   0188 52                  380 	.db #0x52	; 82	'R'
   0189 65                  381 	.db #0x65	; 101	'e'
   018A 61                  382 	.db #0x61	; 97	'a'
   018B 64                  383 	.db #0x64	; 100	'd'
   018C 79                  384 	.db #0x79	; 121	'y'
   018D 0D                  385 	.db #0x0d	; 13
   018E 0A                  386 	.db #0x0a	; 10
   018F                     387 _endUpdate:
   018F 45                  388 	.db #0x45	; 69	'E'
   0190 00                  389 	.db #0x00	; 0
   0191                     390 _certificateDone:
   0191 49                  391 	.db #0x49	; 73	'I'
   0192 00                  392 	.db #0x00	; 0
   0193                     393 _responseOK:
   0193 4F                  394 	.db #0x4f	; 79	'O'
   0194 4B                  395 	.db #0x4b	; 75	'K'
   0195                     396 _scanResponse:
   0195 53                  397 	.db #0x53	; 83	'S'
   0196 00                  398 	.db #0x00	; 0
   0197                     399 _nagleonResponse:
   0197 44                  400 	.db #0x44	; 68	'D'
   0198 00                  401 	.db #0x00	; 0
   0199                     402 _nagleoffResponse:
   0199 4E                  403 	.db #0x4e	; 78	'N'
   019A 00                  404 	.db #0x00	; 0
   019B                     405 _scanresResponse:
   019B 73                  406 	.db #0x73	; 115	's'
   019C 00                  407 	.db #0x00	; 0
   019D                     408 _apconfigurationResponse:
   019D 41                  409 	.db #0x41	; 65	'A'
   019E 00                  410 	.db #0x00	; 0
   019F                     411 _responseRSFWUpdate:
   019F 5A                  412 	.db #0x5a	; 90	'Z'
   01A0 00                  413 	.db #0x00	; 0
   01A1                     414 _responseRSCERTUpdate:
   01A1 59                  415 	.db #0x59	; 89	'Y'
   01A2 00                  416 	.db #0x00	; 0
   01A3                     417 _responseWRBlock:
   01A3 7A                  418 	.db #0x7a	; 122	'z'
   01A4 00                  419 	.db #0x00	; 0
   01A5                     420 _responseOTAFW:
   01A5 55                  421 	.db #0x55	; 85	'U'
   01A6 00                  422 	.db #0x00	; 0
   01A7                     423 _responseOTASPIFF:
   01A7 75                  424 	.db #0x75	; 117	'u'
   01A8 00                  425 	.db #0x00	; 0
   01A9                     426 _strUsage:
   01A9 55 73 61 67 65 3A   427 	.ascii "Usage: CFG8266 /s to scan networks and choose one to connect"
        20 43 46 47 38 32
        36 36 20 2F 73 20
        74 6F 20 73 63 61
        6E 20 6E 65 74 77
        6F 72 6B 73 20 61
        6E 64 20 63 68 6F
        6F 73 65 20 6F 6E
        65 20 74 6F 20 63
        6F 6E 6E 65 63 74
   01E5 0A                  428 	.db 0x0a
   01E6 0A                  429 	.db 0x0a
   01E7 20 20 20 20 20 20   430 	.ascii "       CFG8266 /n to turn off Nagle Algorithm (default) or"
        20 43 46 47 38 32
        36 36 20 2F 6E 20
        74 6F 20 74 75 72
        6E 20 6F 66 66 20
        4E 61 67 6C 65 20
        41 6C 67 6F 72 69
        74 68 6D 20 28 64
        65 66 61 75 6C 74
        29 20 6F 72
   0221 20 2F 6D 20 74 6F   431 	.ascii " /m to turn it on"
        20 74 75 72 6E 20
        69 74 20 6F 6E
   0232 0A                  432 	.db 0x0a
   0233 0A                  433 	.db 0x0a
   0234 20 20 20 20 20 20   434 	.ascii "       CFG8266 CERTFILE /c to update ESP8"
        20 43 46 47 38 32
        36 36 20 43 45 52
        54 46 49 4C 45 20
        2F 63 20 74 6F 20
        75 70 64 61 74 65
        20 45 53 50 38
   025D 32 36 36 20 66 69   435 	.ascii "266 firmware locally"
        72 6D 77 61 72 65
        20 6C 6F 63 61 6C
        6C 79
   0271 0A                  436 	.db 0x0a
   0272 0A                  437 	.db 0x0a
   0273 20 20 20 20 20 20   438 	.ascii "       CFG8266 FWFILE to update ESP826"
        20 43 46 47 38 32
        36 36 20 46 57 46
        49 4C 45 20 74 6F
        20 75 70 64 61 74
        65 20 45 53 50 38
        32 36
   0299 36 20 66 69 72 6D   439 	.ascii "6 firmware locally"
        77 61 72 65 20 6C
        6F 63 61 6C 6C 79
   02AB 0A                  440 	.db 0x0a
   02AC 0A                  441 	.db 0x0a
   02AD 20 20 20 20 20 20   442 	.ascii "       CFG8266 /u SERVER PORT FILEPATH t"
        20 43 46 47 38 32
        36 36 20 2F 75 20
        53 45 52 56 45 52
        20 50 4F 52 54 20
        46 49 4C 45 50 41
        54 48 20 74
   02D5 6F 20 75 70 64 61   443 	.ascii "o update ESP8266 firmware remotely"
        74 65 20 45 53 50
        38 32 36 36 20 66
        69 72 6D 77 61 72
        65 20 72 65 6D 6F
        74 65 6C 79
   02F7 0A                  444 	.db 0x0a
   02F8 0A                  445 	.db 0x0a
   02F9 20 20 20 20 20 20   446 	.ascii "       CFG8266 /c SERVER"
        20 43 46 47 38 32
        36 36 20 2F 63 20
        53 45 52 56 45 52
   0311 20 50 4F 52 54 20   447 	.ascii " PORT FILEPATH to update TLS certificates remotely"
        46 49 4C 45 50 41
        54 48 20 74 6F 20
        75 70 64 61 74 65
        20 54 4C 53 20 63
        65 72 74 69 66 69
        63 61 74 65 73 20
        72 65 6D 6F 74 65
        6C 79
   0343 0A                  448 	.db 0x0a
   0344 45 78 2E 3A 20 20   449 	.ascii "Ex.:   CF"
        20 43 46
   034D 47 38 32 36 36 20   450 	.ascii "G8266 /u 192.168.31.1 80 /fw/fw.bin"
        2F 75 20 31 39 32
        2E 31 36 38 2E 33
        31 2E 31 20 38 30
        20 2F 66 77 2F 66
        77 2E 62 69 6E
   0370 00                  451 	.db 0x00
                            452 ;..\CFG8266.c:144: unsigned int IsValidInput (char**argv, int argc)
                            453 ;	---------------------------------
                            454 ; Function IsValidInput
                            455 ; ---------------------------------
   0371                     456 _IsValidInput::
   0371 CDr00r00      [17]  457 	call	___sdcc_enter_ix
   0374 21 F5 FF      [10]  458 	ld	hl,#-11
   0377 39            [11]  459 	add	hl,sp
   0378 F9            [ 6]  460 	ld	sp,hl
                            461 ;..\CFG8266.c:146: unsigned int ret = 1;
   0379 01 01 00      [10]  462 	ld	bc,#0x0001
                            463 ;..\CFG8266.c:147: unsigned char * Input = (unsigned char*)argv[0];
   037C DD 7E 04      [19]  464 	ld	a,4 (ix)
   037F DD 77 FE      [19]  465 	ld	-2 (ix),a
   0382 DD 7E 05      [19]  466 	ld	a,5 (ix)
   0385 DD 77 FF      [19]  467 	ld	-1 (ix),a
   0388 DD 6E FE      [19]  468 	ld	l,-2 (ix)
   038B DD 66 FF      [19]  469 	ld	h,-1 (ix)
   038E 7E            [ 7]  470 	ld	a,(hl)
   038F DD 77 FC      [19]  471 	ld	-4 (ix),a
   0392 23            [ 6]  472 	inc	hl
   0393 7E            [ 7]  473 	ld	a,(hl)
   0394 DD 77 FD      [19]  474 	ld	-3 (ix),a
                            475 ;..\CFG8266.c:149: ucScan = 0;
   0397 21r00r00      [10]  476 	ld	hl,#_ucScan + 0
   039A 36 00         [10]  477 	ld	(hl), #0x00
                            478 ;..\CFG8266.c:151: if (argc)
   039C DD 7E 07      [19]  479 	ld	a,7 (ix)
   039F DD B6 06      [19]  480 	or	a,6 (ix)
   03A2 CAr11r06      [10]  481 	jp	Z,00150$
                            482 ;..\CFG8266.c:153: if ((argc==1)||(argc==2)||(argc==4))
   03A5 DD 7E 06      [19]  483 	ld	a,6 (ix)
   03A8 3D            [ 4]  484 	dec	a
   03A9 20 0A         [12]  485 	jr	NZ,00230$
   03AB DD 7E 07      [19]  486 	ld	a,7 (ix)
   03AE B7            [ 4]  487 	or	a, a
   03AF 20 04         [12]  488 	jr	NZ,00230$
   03B1 3E 01         [ 7]  489 	ld	a,#0x01
   03B3 18 01         [12]  490 	jr	00231$
   03B5                     491 00230$:
   03B5 AF            [ 4]  492 	xor	a,a
   03B6                     493 00231$:
   03B6 57            [ 4]  494 	ld	d,a
   03B7 DD 7E 06      [19]  495 	ld	a,6 (ix)
   03BA D6 02         [ 7]  496 	sub	a, #0x02
   03BC 20 0A         [12]  497 	jr	NZ,00232$
   03BE DD 7E 07      [19]  498 	ld	a,7 (ix)
   03C1 B7            [ 4]  499 	or	a, a
   03C2 20 04         [12]  500 	jr	NZ,00232$
   03C4 3E 01         [ 7]  501 	ld	a,#0x01
   03C6 18 01         [12]  502 	jr	00233$
   03C8                     503 00232$:
   03C8 AF            [ 4]  504 	xor	a,a
   03C9                     505 00233$:
   03C9 5F            [ 4]  506 	ld	e,a
   03CA 7A            [ 4]  507 	ld	a,d
   03CB B7            [ 4]  508 	or	a,a
   03CC 20 12         [12]  509 	jr	NZ,00144$
   03CE B3            [ 4]  510 	or	a,e
   03CF 20 0F         [12]  511 	jr	NZ,00144$
   03D1 DD 7E 06      [19]  512 	ld	a,6 (ix)
   03D4 D6 04         [ 7]  513 	sub	a, #0x04
   03D6 C2r0Cr06      [10]  514 	jp	NZ,00145$
   03D9 DD 7E 07      [19]  515 	ld	a,7 (ix)
   03DC B7            [ 4]  516 	or	a, a
   03DD C2r0Cr06      [10]  517 	jp	NZ,00145$
   03E0                     518 00144$:
                            519 ;..\CFG8266.c:157: if ((Input[0]=='/')&&((Input[1]=='s')||(Input[1]=='S')))
   03E0 DD 6E FC      [19]  520 	ld	l,-4 (ix)
   03E3 DD 66 FD      [19]  521 	ld	h,-3 (ix)
   03E6 6E            [ 7]  522 	ld	l,(hl)
   03E7 E5            [11]  523 	push	hl
   03E8 DD 6E FC      [19]  524 	ld	l,-4 (ix)
   03EB DD 66 FD      [19]  525 	ld	h,-3 (ix)
   03EE 23            [ 6]  526 	inc	hl
   03EF E5            [11]  527 	push	hl
   03F0 FD E1         [14]  528 	pop	iy
   03F2 E1            [10]  529 	pop	hl
                            530 ;..\CFG8266.c:169: Input = (unsigned char*)argv[1];
   03F3 DD 7E FE      [19]  531 	ld	a,-2 (ix)
   03F6 C6 02         [ 7]  532 	add	a, #0x02
   03F8 DD 77 FA      [19]  533 	ld	-6 (ix),a
   03FB DD 7E FF      [19]  534 	ld	a,-1 (ix)
   03FE CE 00         [ 7]  535 	adc	a, #0x00
   0400 DD 77 FB      [19]  536 	ld	-5 (ix),a
                            537 ;..\CFG8266.c:157: if ((Input[0]=='/')&&((Input[1]=='s')||(Input[1]=='S')))
   0403 7D            [ 4]  538 	ld	a,l
   0404 D6 2F         [ 7]  539 	sub	a, #0x2f
   0406 20 04         [12]  540 	jr	NZ,00236$
   0408 3E 01         [ 7]  541 	ld	a,#0x01
   040A 18 01         [12]  542 	jr	00237$
   040C                     543 00236$:
   040C AF            [ 4]  544 	xor	a,a
   040D                     545 00237$:
   040D DD 77 F9      [19]  546 	ld	-7 (ix),a
                            547 ;..\CFG8266.c:155: if ((argc==1)||(argc==2))
   0410 7A            [ 4]  548 	ld	a,d
   0411 B7            [ 4]  549 	or	a,a
   0412 20 04         [12]  550 	jr	NZ,00140$
   0414 B3            [ 4]  551 	or	a,e
   0415 CArB1r04      [10]  552 	jp	Z,00141$
   0418                     553 00140$:
                            554 ;..\CFG8266.c:157: if ((Input[0]=='/')&&((Input[1]=='s')||(Input[1]=='S')))
   0418 DD 7E F9      [19]  555 	ld	a,-7 (ix)
   041B B7            [ 4]  556 	or	a, a
   041C 28 14         [12]  557 	jr	Z,00120$
   041E FD 56 00      [19]  558 	ld	d, 0 (iy)
   0421 7A            [ 4]  559 	ld	a,d
   0422 FE 73         [ 7]  560 	cp	a,#0x73
   0424 28 04         [12]  561 	jr	Z,00119$
   0426 D6 53         [ 7]  562 	sub	a, #0x53
   0428 20 08         [12]  563 	jr	NZ,00120$
   042A                     564 00119$:
                            565 ;..\CFG8266.c:158: ucScan = 1;
   042A 21r00r00      [10]  566 	ld	hl,#_ucScan + 0
   042D 36 01         [10]  567 	ld	(hl), #0x01
   042F C3r14r06      [10]  568 	jp	00151$
   0432                     569 00120$:
                            570 ;..\CFG8266.c:159: else if ((Input[0]=='/')&&((Input[1]=='n')||(Input[1]=='N')))
   0432 DD 7E F9      [19]  571 	ld	a,-7 (ix)
   0435 B7            [ 4]  572 	or	a, a
   0436 28 14         [12]  573 	jr	Z,00115$
   0438 FD 56 00      [19]  574 	ld	d, 0 (iy)
   043B 7A            [ 4]  575 	ld	a,d
   043C FE 6E         [ 7]  576 	cp	a,#0x6e
   043E 28 04         [12]  577 	jr	Z,00114$
   0440 D6 4E         [ 7]  578 	sub	a, #0x4e
   0442 20 08         [12]  579 	jr	NZ,00115$
   0444                     580 00114$:
                            581 ;..\CFG8266.c:160: ucNagleOff = 1;
   0444 21r0Fr02      [10]  582 	ld	hl,#_ucNagleOff + 0
   0447 36 01         [10]  583 	ld	(hl), #0x01
   0449 C3r14r06      [10]  584 	jp	00151$
   044C                     585 00115$:
                            586 ;..\CFG8266.c:161: else if ((Input[0]=='/')&&((Input[1]=='m')||(Input[1]=='M')))
   044C DD 7E F9      [19]  587 	ld	a,-7 (ix)
   044F B7            [ 4]  588 	or	a, a
   0450 28 14         [12]  589 	jr	Z,00110$
   0452 FD 56 00      [19]  590 	ld	d, 0 (iy)
   0455 7A            [ 4]  591 	ld	a,d
   0456 FE 6D         [ 7]  592 	cp	a,#0x6d
   0458 28 04         [12]  593 	jr	Z,00109$
   045A D6 4D         [ 7]  594 	sub	a, #0x4d
   045C 20 08         [12]  595 	jr	NZ,00110$
   045E                     596 00109$:
                            597 ;..\CFG8266.c:162: ucNagleOn = 1;
   045E 21r10r02      [10]  598 	ld	hl,#_ucNagleOn + 0
   0461 36 01         [10]  599 	ld	(hl), #0x01
   0463 C3r14r06      [10]  600 	jp	00151$
   0466                     601 00110$:
                            602 ;..\CFG8266.c:165: strcpy (ucFile,Input);
   0466 C5            [11]  603 	push	bc
   0467 D5            [11]  604 	push	de
   0468 11r01r01      [10]  605 	ld	de,#_ucFile
   046B DD 6E FC      [19]  606 	ld	l,-4 (ix)
   046E DD 66 FD      [19]  607 	ld	h,-3 (ix)
   0471 AF            [ 4]  608 	xor	a, a
   0472                     609 00247$:
   0472 BE            [ 7]  610 	cp	a, (hl)
   0473 ED A0         [16]  611 	ldi
   0475 20 FB         [12]  612 	jr	NZ, 00247$
   0477 D1            [10]  613 	pop	de
   0478 C1            [10]  614 	pop	bc
                            615 ;..\CFG8266.c:166: ucLocalUpdate = 1;
   0479 21r0Dr02      [10]  616 	ld	hl,#_ucLocalUpdate + 0
   047C 36 01         [10]  617 	ld	(hl), #0x01
                            618 ;..\CFG8266.c:167: if (argc==2)
   047E 7B            [ 4]  619 	ld	a,e
   047F B7            [ 4]  620 	or	a, a
   0480 28 27         [12]  621 	jr	Z,00107$
                            622 ;..\CFG8266.c:169: Input = (unsigned char*)argv[1];
   0482 DD 6E FA      [19]  623 	ld	l,-6 (ix)
   0485 DD 66 FB      [19]  624 	ld	h,-5 (ix)
   0488 5E            [ 7]  625 	ld	e,(hl)
   0489 23            [ 6]  626 	inc	hl
   048A 56            [ 7]  627 	ld	d,(hl)
                            628 ;..\CFG8266.c:170: if ((Input[0]=='/')&&((Input[1]=='c')||(Input[1]=='C')))
   048B 1A            [ 7]  629 	ld	a,(de)
   048C D6 2F         [ 7]  630 	sub	a, #0x2f
   048E 20 13         [12]  631 	jr	NZ,00102$
   0490 EB            [ 4]  632 	ex	de,hl
   0491 23            [ 6]  633 	inc	hl
   0492 7E            [ 7]  634 	ld	a, (hl)
   0493 FE 63         [ 7]  635 	cp	a,#0x63
   0495 28 04         [12]  636 	jr	Z,00101$
   0497 D6 43         [ 7]  637 	sub	a, #0x43
   0499 20 08         [12]  638 	jr	NZ,00102$
   049B                     639 00101$:
                            640 ;..\CFG8266.c:171: ucIsFw=0;
   049B 21r0Er02      [10]  641 	ld	hl,#_ucIsFw + 0
   049E 36 00         [10]  642 	ld	(hl), #0x00
   04A0 C3r14r06      [10]  643 	jp	00151$
   04A3                     644 00102$:
                            645 ;..\CFG8266.c:173: ret=0;
   04A3 01 00 00      [10]  646 	ld	bc,#0x0000
   04A6 C3r14r06      [10]  647 	jp	00151$
   04A9                     648 00107$:
                            649 ;..\CFG8266.c:177: ucIsFw=1;
   04A9 21r0Er02      [10]  650 	ld	hl,#_ucIsFw + 0
   04AC 36 01         [10]  651 	ld	(hl), #0x01
   04AE C3r14r06      [10]  652 	jp	00151$
   04B1                     653 00141$:
                            654 ;..\CFG8266.c:185: Input = (unsigned char*)argv[2];
   04B1 DD 7E FE      [19]  655 	ld	a,-2 (ix)
   04B4 C6 04         [ 7]  656 	add	a, #0x04
   04B6 5F            [ 4]  657 	ld	e,a
   04B7 DD 7E FF      [19]  658 	ld	a,-1 (ix)
   04BA CE 00         [ 7]  659 	adc	a, #0x00
   04BC 57            [ 4]  660 	ld	d,a
                            661 ;..\CFG8266.c:191: Input = (unsigned char*)argv[3];
   04BD DD 7E FE      [19]  662 	ld	a,-2 (ix)
   04C0 C6 06         [ 7]  663 	add	a, #0x06
   04C2 DD 77 FC      [19]  664 	ld	-4 (ix),a
   04C5 DD 7E FF      [19]  665 	ld	a,-1 (ix)
   04C8 CE 00         [ 7]  666 	adc	a, #0x00
   04CA DD 77 FD      [19]  667 	ld	-3 (ix),a
                            668 ;..\CFG8266.c:182: if ((Input[0]=='/')&&((Input[1]=='u')||(Input[1]=='U')))
   04CD DD 7E F9      [19]  669 	ld	a,-7 (ix)
   04D0 B7            [ 4]  670 	or	a, a
   04D1 CAr6Br05      [10]  671 	jp	Z,00136$
   04D4 FD 6E 00      [19]  672 	ld	l, 0 (iy)
   04D7 7D            [ 4]  673 	ld	a,l
   04D8 FE 75         [ 7]  674 	cp	a,#0x75
   04DA 28 05         [12]  675 	jr	Z,00135$
   04DC D6 55         [ 7]  676 	sub	a, #0x55
   04DE C2r6Br05      [10]  677 	jp	NZ,00136$
   04E1                     678 00135$:
                            679 ;..\CFG8266.c:184: ucIsFw = 1;
   04E1 FD 21r0Er02   [14]  680 	ld	iy,#_ucIsFw
   04E5 FD 36 00 01   [19]  681 	ld	0 (iy),#0x01
                            682 ;..\CFG8266.c:185: Input = (unsigned char*)argv[2];
   04E9 EB            [ 4]  683 	ex	de,hl
   04EA 5E            [ 7]  684 	ld	e,(hl)
   04EB 23            [ 6]  685 	inc	hl
   04EC 56            [ 7]  686 	ld	d,(hl)
                            687 ;..\CFG8266.c:186: if (strlen (Input)<7)
   04ED C5            [11]  688 	push	bc
   04EE D5            [11]  689 	push	de
   04EF CDr00r00      [17]  690 	call	_strlen
   04F2 F1            [10]  691 	pop	af
   04F3 C1            [10]  692 	pop	bc
   04F4 7D            [ 4]  693 	ld	a,l
   04F5 D6 07         [ 7]  694 	sub	a, #0x07
   04F7 7C            [ 4]  695 	ld	a,h
   04F8 DE 00         [ 7]  696 	sbc	a, #0x00
   04FA 30 69         [12]  697 	jr	NC,00125$
                            698 ;..\CFG8266.c:188: strcpy(ucPort,Input);
   04FC 21r01r02      [10]  699 	ld	hl,#_ucPort
   04FF C5            [11]  700 	push	bc
   0500 EB            [ 4]  701 	ex	de, hl
   0501 AF            [ 4]  702 	xor	a, a
   0502                     703 00256$:
   0502 BE            [ 7]  704 	cp	a, (hl)
   0503 ED A0         [16]  705 	ldi
   0505 20 FB         [12]  706 	jr	NZ, 00256$
   0507 C1            [10]  707 	pop	bc
                            708 ;..\CFG8266.c:189: Input = (unsigned char*)argv[1];
   0508 DD 6E FA      [19]  709 	ld	l,-6 (ix)
   050B DD 66 FB      [19]  710 	ld	h,-5 (ix)
   050E 5E            [ 7]  711 	ld	e,(hl)
   050F 23            [ 6]  712 	inc	hl
   0510 56            [ 7]  713 	ld	d,(hl)
                            714 ;..\CFG8266.c:190: strcpy(ucServer,Input);
   0511 21r01r00      [10]  715 	ld	hl,#_ucServer+0
   0514 C5            [11]  716 	push	bc
   0515 EB            [ 4]  717 	ex	de, hl
   0516 AF            [ 4]  718 	xor	a, a
   0517                     719 00257$:
   0517 BE            [ 7]  720 	cp	a, (hl)
   0518 ED A0         [16]  721 	ldi
   051A 20 FB         [12]  722 	jr	NZ, 00257$
   051C C1            [10]  723 	pop	bc
                            724 ;..\CFG8266.c:191: Input = (unsigned char*)argv[3];
   051D DD 6E FC      [19]  725 	ld	l,-4 (ix)
   0520 DD 66 FD      [19]  726 	ld	h,-3 (ix)
   0523 5E            [ 7]  727 	ld	e,(hl)
   0524 23            [ 6]  728 	inc	hl
   0525 56            [ 7]  729 	ld	d,(hl)
                            730 ;..\CFG8266.c:192: strcpy(ucFile,Input);
   0526 21r01r01      [10]  731 	ld	hl,#_ucFile+0
   0529 C5            [11]  732 	push	bc
   052A EB            [ 4]  733 	ex	de, hl
   052B AF            [ 4]  734 	xor	a, a
   052C                     735 00258$:
   052C BE            [ 7]  736 	cp	a, (hl)
   052D ED A0         [16]  737 	ldi
   052F 20 FB         [12]  738 	jr	NZ, 00258$
   0531 21r01r02      [10]  739 	ld	hl,#_ucPort
   0534 E5            [11]  740 	push	hl
   0535 CDr00r00      [17]  741 	call	_atol
   0538 F1            [10]  742 	pop	af
   0539 DD 72 F8      [19]  743 	ld	-8 (ix),d
   053C DD 73 F7      [19]  744 	ld	-9 (ix),e
   053F DD 74 F6      [19]  745 	ld	-10 (ix),h
   0542 DD 75 F5      [19]  746 	ld	-11 (ix),l
   0545 11r09r02      [10]  747 	ld	de, #_lPort
   0548 21 02 00      [10]  748 	ld	hl, #2
   054B 39            [11]  749 	add	hl, sp
   054C 01 04 00      [10]  750 	ld	bc, #4
   054F ED B0         [21]  751 	ldir
   0551 C1            [10]  752 	pop	bc
                            753 ;..\CFG8266.c:194: uiPort = (lPort&0xffff);
   0552 21r09r02      [10]  754 	ld	hl,#_lPort
   0555 5E            [ 7]  755 	ld	e, (hl)
   0556 23            [ 6]  756 	inc	hl
   0557 56            [ 7]  757 	ld	d, (hl)
   0558 FD 21r07r02   [14]  758 	ld	iy,#_uiPort
   055C FD 73 00      [19]  759 	ld	0 (iy),e
   055F FD 72 01      [19]  760 	ld	1 (iy),d
   0562 C3r14r06      [10]  761 	jp	00151$
   0565                     762 00125$:
                            763 ;..\CFG8266.c:197: ret = 0;
   0565 01 00 00      [10]  764 	ld	bc,#0x0000
   0568 C3r14r06      [10]  765 	jp	00151$
   056B                     766 00136$:
                            767 ;..\CFG8266.c:199: else if ((Input[0]=='/')&&((Input[1]=='c')||(Input[1]=='C')))
   056B DD 7E F9      [19]  768 	ld	a,-7 (ix)
   056E B7            [ 4]  769 	or	a, a
   056F CAr07r06      [10]  770 	jp	Z,00131$
   0572 FD 6E 00      [19]  771 	ld	l, 0 (iy)
   0575 7D            [ 4]  772 	ld	a,l
   0576 FE 63         [ 7]  773 	cp	a,#0x63
   0578 28 05         [12]  774 	jr	Z,00130$
   057A D6 43         [ 7]  775 	sub	a, #0x43
   057C C2r07r06      [10]  776 	jp	NZ,00131$
   057F                     777 00130$:
                            778 ;..\CFG8266.c:201: ucIsFw = 0;
   057F FD 21r0Er02   [14]  779 	ld	iy,#_ucIsFw
   0583 FD 36 00 00   [19]  780 	ld	0 (iy),#0x00
                            781 ;..\CFG8266.c:202: Input = (unsigned char*)argv[2];
   0587 EB            [ 4]  782 	ex	de,hl
   0588 5E            [ 7]  783 	ld	e,(hl)
   0589 23            [ 6]  784 	inc	hl
   058A 56            [ 7]  785 	ld	d,(hl)
                            786 ;..\CFG8266.c:203: if (strlen (Input)<7)
   058B C5            [11]  787 	push	bc
   058C D5            [11]  788 	push	de
   058D CDr00r00      [17]  789 	call	_strlen
   0590 F1            [10]  790 	pop	af
   0591 C1            [10]  791 	pop	bc
   0592 7D            [ 4]  792 	ld	a,l
   0593 D6 07         [ 7]  793 	sub	a, #0x07
   0595 7C            [ 4]  794 	ld	a,h
   0596 DE 00         [ 7]  795 	sbc	a, #0x00
   0598 30 68         [12]  796 	jr	NC,00128$
                            797 ;..\CFG8266.c:205: strcpy(ucPort,Input);
   059A 21r01r02      [10]  798 	ld	hl,#_ucPort
   059D C5            [11]  799 	push	bc
   059E EB            [ 4]  800 	ex	de, hl
   059F AF            [ 4]  801 	xor	a, a
   05A0                     802 00262$:
   05A0 BE            [ 7]  803 	cp	a, (hl)
   05A1 ED A0         [16]  804 	ldi
   05A3 20 FB         [12]  805 	jr	NZ, 00262$
   05A5 C1            [10]  806 	pop	bc
                            807 ;..\CFG8266.c:206: Input = (unsigned char*)argv[1];
   05A6 DD 6E FA      [19]  808 	ld	l,-6 (ix)
   05A9 DD 66 FB      [19]  809 	ld	h,-5 (ix)
   05AC 5E            [ 7]  810 	ld	e,(hl)
   05AD 23            [ 6]  811 	inc	hl
   05AE 56            [ 7]  812 	ld	d,(hl)
                            813 ;..\CFG8266.c:207: strcpy(ucServer,Input);
   05AF 21r01r00      [10]  814 	ld	hl,#_ucServer+0
   05B2 C5            [11]  815 	push	bc
   05B3 EB            [ 4]  816 	ex	de, hl
   05B4 AF            [ 4]  817 	xor	a, a
   05B5                     818 00263$:
   05B5 BE            [ 7]  819 	cp	a, (hl)
   05B6 ED A0         [16]  820 	ldi
   05B8 20 FB         [12]  821 	jr	NZ, 00263$
   05BA C1            [10]  822 	pop	bc
                            823 ;..\CFG8266.c:208: Input = (unsigned char*)argv[3];
   05BB DD 6E FC      [19]  824 	ld	l,-4 (ix)
   05BE DD 66 FD      [19]  825 	ld	h,-3 (ix)
   05C1 5E            [ 7]  826 	ld	e,(hl)
   05C2 23            [ 6]  827 	inc	hl
   05C3 56            [ 7]  828 	ld	d,(hl)
                            829 ;..\CFG8266.c:209: strcpy(ucFile,Input);
   05C4 21r01r01      [10]  830 	ld	hl,#_ucFile+0
   05C7 C5            [11]  831 	push	bc
   05C8 EB            [ 4]  832 	ex	de, hl
   05C9 AF            [ 4]  833 	xor	a, a
   05CA                     834 00264$:
   05CA BE            [ 7]  835 	cp	a, (hl)
   05CB ED A0         [16]  836 	ldi
   05CD 20 FB         [12]  837 	jr	NZ, 00264$
   05CF 21r01r02      [10]  838 	ld	hl,#_ucPort
   05D2 E5            [11]  839 	push	hl
   05D3 CDr00r00      [17]  840 	call	_atol
   05D6 F1            [10]  841 	pop	af
   05D7 DD 72 F8      [19]  842 	ld	-8 (ix),d
   05DA DD 73 F7      [19]  843 	ld	-9 (ix),e
   05DD DD 74 F6      [19]  844 	ld	-10 (ix),h
   05E0 DD 75 F5      [19]  845 	ld	-11 (ix),l
   05E3 11r09r02      [10]  846 	ld	de, #_lPort
   05E6 21 02 00      [10]  847 	ld	hl, #2
   05E9 39            [11]  848 	add	hl, sp
   05EA 01 04 00      [10]  849 	ld	bc, #4
   05ED ED B0         [21]  850 	ldir
   05EF C1            [10]  851 	pop	bc
                            852 ;..\CFG8266.c:211: uiPort = (lPort&0xffff);
   05F0 21r09r02      [10]  853 	ld	hl,#_lPort
   05F3 5E            [ 7]  854 	ld	e, (hl)
   05F4 23            [ 6]  855 	inc	hl
   05F5 56            [ 7]  856 	ld	d, (hl)
   05F6 FD 21r07r02   [14]  857 	ld	iy,#_uiPort
   05FA FD 73 00      [19]  858 	ld	0 (iy),e
   05FD FD 72 01      [19]  859 	ld	1 (iy),d
   0600 18 12         [12]  860 	jr	00151$
   0602                     861 00128$:
                            862 ;..\CFG8266.c:214: ret = 0;
   0602 01 00 00      [10]  863 	ld	bc,#0x0000
   0605 18 0D         [12]  864 	jr	00151$
   0607                     865 00131$:
                            866 ;..\CFG8266.c:217: ret = 0;
   0607 01 00 00      [10]  867 	ld	bc,#0x0000
   060A 18 08         [12]  868 	jr	00151$
   060C                     869 00145$:
                            870 ;..\CFG8266.c:221: ret = 0;
   060C 01 00 00      [10]  871 	ld	bc,#0x0000
   060F 18 03         [12]  872 	jr	00151$
   0611                     873 00150$:
                            874 ;..\CFG8266.c:224: ret=0;
   0611 01 00 00      [10]  875 	ld	bc,#0x0000
   0614                     876 00151$:
                            877 ;..\CFG8266.c:226: return ret;
   0614 69            [ 4]  878 	ld	l, c
   0615 60            [ 4]  879 	ld	h, b
   0616 DD F9         [10]  880 	ld	sp, ix
   0618 DD E1         [14]  881 	pop	ix
   061A C9            [10]  882 	ret
                            883 ;..\CFG8266.c:229: void TxByte(char chTxByte)
                            884 ;	---------------------------------
                            885 ; Function TxByte
                            886 ; ---------------------------------
   061B                     887 _TxByte::
                            888 ;..\CFG8266.c:232: do
   061B                     889 00103$:
                            890 ;..\CFG8266.c:234: UartStatus = myPort7&2 ;
   061B DB 07         [11]  891 	in	a,(_myPort7)
   061D E6 02         [ 7]  892 	and	a, #0x02
   061F 20 FA         [12]  893 	jr	NZ,00103$
                            894 ;..\CFG8266.c:235: if (!UartStatus)
                            895 ;..\CFG8266.c:240: myPort7 = chTxByte;
   0621 21 02 00      [10]  896 	ld	hl, #2+0
   0624 39            [11]  897 	add	hl, sp
   0625 7E            [ 7]  898 	ld	a, (hl)
   0626 D3 07         [11]  899 	out	(_myPort7),a
                            900 ;..\CFG8266.c:244: while (1);
   0628 C9            [10]  901 	ret
                            902 ;..\CFG8266.c:247: char *ultostr(unsigned long value, char *ptr, int base)
                            903 ;	---------------------------------
                            904 ; Function ultostr
                            905 ; ---------------------------------
   0629                     906 _ultostr::
   0629 CDr00r00      [17]  907 	call	___sdcc_enter_ix
   062C 21 EE FF      [10]  908 	ld	hl,#-18
   062F 39            [11]  909 	add	hl,sp
   0630 F9            [ 6]  910 	ld	sp,hl
                            911 ;..\CFG8266.c:250: unsigned long tmp = value;
   0631 DD 4E 04      [19]  912 	ld	c,4 (ix)
   0634 DD 46 05      [19]  913 	ld	b,5 (ix)
   0637 DD 5E 06      [19]  914 	ld	e,6 (ix)
   063A DD 56 07      [19]  915 	ld	d,7 (ix)
                            916 ;..\CFG8266.c:251: int count = 0;
   063D 21 00 00      [10]  917 	ld	hl,#0x0000
   0640 E3            [19]  918 	ex	(sp), hl
                            919 ;..\CFG8266.c:253: if (NULL == ptr)
   0641 DD 7E 09      [19]  920 	ld	a,9 (ix)
   0644 DD B6 08      [19]  921 	or	a,8 (ix)
   0647 20 06         [12]  922 	jr	NZ,00102$
                            923 ;..\CFG8266.c:255: return NULL;
   0649 21 00 00      [10]  924 	ld	hl,#0x0000
   064C C3rC6r07      [10]  925 	jp	00117$
   064F                     926 00102$:
                            927 ;..\CFG8266.c:258: if (tmp == 0)
   064F 7A            [ 4]  928 	ld	a,d
   0650 B3            [ 4]  929 	or	a, e
   0651 B0            [ 4]  930 	or	a, b
   0652 B1            [ 4]  931 	or	a,c
   0653 20 04         [12]  932 	jr	NZ,00122$
                            933 ;..\CFG8266.c:260: count++;
   0655 21 01 00      [10]  934 	ld	hl,#0x0001
   0658 E3            [19]  935 	ex	(sp), hl
                            936 ;..\CFG8266.c:263: while(tmp > 0)
   0659                     937 00122$:
   0659 DD 7E EE      [19]  938 	ld	a,-18 (ix)
   065C DD 77 FE      [19]  939 	ld	-2 (ix),a
   065F DD 7E EF      [19]  940 	ld	a,-17 (ix)
   0662 DD 77 FF      [19]  941 	ld	-1 (ix),a
   0665                     942 00105$:
                            943 ;..\CFG8266.c:265: tmp = tmp/base;
   0665 DD 7E 0A      [19]  944 	ld	a,10 (ix)
   0668 DD 77 FA      [19]  945 	ld	-6 (ix),a
   066B DD 7E 0B      [19]  946 	ld	a,11 (ix)
   066E DD 77 FB      [19]  947 	ld	-5 (ix),a
   0671 DD 7E 0B      [19]  948 	ld	a,11 (ix)
   0674 17            [ 4]  949 	rla
   0675 9F            [ 4]  950 	sbc	a, a
   0676 DD 77 FC      [19]  951 	ld	-4 (ix),a
   0679 DD 77 FD      [19]  952 	ld	-3 (ix),a
                            953 ;..\CFG8266.c:263: while(tmp > 0)
   067C 7A            [ 4]  954 	ld	a,d
   067D B3            [ 4]  955 	or	a, e
   067E B0            [ 4]  956 	or	a, b
   067F B1            [ 4]  957 	or	a,c
   0680 28 23         [12]  958 	jr	Z,00107$
                            959 ;..\CFG8266.c:265: tmp = tmp/base;
   0682 DD 6E FC      [19]  960 	ld	l,-4 (ix)
   0685 DD 66 FD      [19]  961 	ld	h,-3 (ix)
   0688 E5            [11]  962 	push	hl
   0689 DD 6E FA      [19]  963 	ld	l,-6 (ix)
   068C DD 66 FB      [19]  964 	ld	h,-5 (ix)
   068F E5            [11]  965 	push	hl
   0690 D5            [11]  966 	push	de
   0691 C5            [11]  967 	push	bc
   0692 CDr00r00      [17]  968 	call	__divulong
   0695 F1            [10]  969 	pop	af
   0696 F1            [10]  970 	pop	af
   0697 F1            [10]  971 	pop	af
   0698 F1            [10]  972 	pop	af
   0699 4D            [ 4]  973 	ld	c,l
   069A 44            [ 4]  974 	ld	b,h
                            975 ;..\CFG8266.c:266: count++;
   069B DD 34 FE      [23]  976 	inc	-2 (ix)
   069E 20 C5         [12]  977 	jr	NZ,00105$
   06A0 DD 34 FF      [23]  978 	inc	-1 (ix)
   06A3 18 C0         [12]  979 	jr	00105$
   06A5                     980 00107$:
                            981 ;..\CFG8266.c:269: ptr += count;
   06A5 DD 7E 08      [19]  982 	ld	a,8 (ix)
   06A8 DD 86 FE      [19]  983 	add	a, -2 (ix)
   06AB DD 77 08      [19]  984 	ld	8 (ix),a
   06AE DD 7E 09      [19]  985 	ld	a,9 (ix)
   06B1 DD 8E FF      [19]  986 	adc	a, -1 (ix)
   06B4 DD 77 09      [19]  987 	ld	9 (ix),a
                            988 ;..\CFG8266.c:271: *ptr = '\0';
   06B7 DD 4E 08      [19]  989 	ld	c,8 (ix)
   06BA DD 46 09      [19]  990 	ld	b,9 (ix)
   06BD AF            [ 4]  991 	xor	a, a
   06BE 02            [ 7]  992 	ld	(bc),a
                            993 ;..\CFG8266.c:273: do
   06BF                     994 00114$:
                            995 ;..\CFG8266.c:275: res = value - base * (t = value / base);
   06BF DD 6E FC      [19]  996 	ld	l,-4 (ix)
   06C2 DD 66 FD      [19]  997 	ld	h,-3 (ix)
   06C5 E5            [11]  998 	push	hl
   06C6 DD 6E FA      [19]  999 	ld	l,-6 (ix)
   06C9 DD 66 FB      [19] 1000 	ld	h,-5 (ix)
   06CC E5            [11] 1001 	push	hl
   06CD DD 6E 06      [19] 1002 	ld	l,6 (ix)
   06D0 DD 66 07      [19] 1003 	ld	h,7 (ix)
   06D3 E5            [11] 1004 	push	hl
   06D4 DD 6E 04      [19] 1005 	ld	l,4 (ix)
   06D7 DD 66 05      [19] 1006 	ld	h,5 (ix)
   06DA E5            [11] 1007 	push	hl
   06DB CDr00r00      [17] 1008 	call	__divulong
   06DE F1            [10] 1009 	pop	af
   06DF F1            [10] 1010 	pop	af
   06E0 F1            [10] 1011 	pop	af
   06E1 F1            [10] 1012 	pop	af
   06E2 EB            [ 4] 1013 	ex	de, hl
   06E3 DD 73 F6      [19] 1014 	ld	-10 (ix),e
   06E6 DD 72 F7      [19] 1015 	ld	-9 (ix),d
   06E9 DD 75 F8      [19] 1016 	ld	-8 (ix),l
   06EC DD 74 F9      [19] 1017 	ld	-7 (ix),h
   06EF E5            [11] 1018 	push	hl
   06F0 D5            [11] 1019 	push	de
   06F1 DD 6E FC      [19] 1020 	ld	l,-4 (ix)
   06F4 DD 66 FD      [19] 1021 	ld	h,-3 (ix)
   06F7 E5            [11] 1022 	push	hl
   06F8 DD 6E FA      [19] 1023 	ld	l,-6 (ix)
   06FB DD 66 FB      [19] 1024 	ld	h,-5 (ix)
   06FE E5            [11] 1025 	push	hl
   06FF CDr00r00      [17] 1026 	call	__mullong
   0702 F1            [10] 1027 	pop	af
   0703 F1            [10] 1028 	pop	af
   0704 F1            [10] 1029 	pop	af
   0705 F1            [10] 1030 	pop	af
   0706 DD 7E 04      [19] 1031 	ld	a,4 (ix)
   0709 95            [ 4] 1032 	sub	a, l
   070A 4F            [ 4] 1033 	ld	c,a
   070B DD 7E 05      [19] 1034 	ld	a,5 (ix)
   070E 9C            [ 4] 1035 	sbc	a, h
   070F 47            [ 4] 1036 	ld	b,a
   0710 DD 7E 06      [19] 1037 	ld	a,6 (ix)
   0713 9B            [ 4] 1038 	sbc	a, e
   0714 5F            [ 4] 1039 	ld	e,a
   0715 DD 7E 07      [19] 1040 	ld	a,7 (ix)
   0718 9A            [ 4] 1041 	sbc	a, d
   0719 57            [ 4] 1042 	ld	d,a
   071A DD 71 F0      [19] 1043 	ld	-16 (ix),c
   071D DD 70 F1      [19] 1044 	ld	-15 (ix),b
   0720 DD 73 F2      [19] 1045 	ld	-14 (ix),e
   0723 DD 72 F3      [19] 1046 	ld	-13 (ix),d
                           1047 ;..\CFG8266.c:276: if (res < 10)
   0726 DD 7E F0      [19] 1048 	ld	a,-16 (ix)
   0729 D6 0A         [ 7] 1049 	sub	a, #0x0a
   072B DD 7E F1      [19] 1050 	ld	a,-15 (ix)
   072E DE 00         [ 7] 1051 	sbc	a, #0x00
   0730 DD 7E F2      [19] 1052 	ld	a,-14 (ix)
   0733 DE 00         [ 7] 1053 	sbc	a, #0x00
   0735 DD 7E F3      [19] 1054 	ld	a,-13 (ix)
   0738 DE 00         [ 7] 1055 	sbc	a, #0x00
   073A 3E 00         [ 7] 1056 	ld	a,#0x00
   073C 17            [ 4] 1057 	rla
   073D DD 77 FE      [19] 1058 	ld	-2 (ix),a
                           1059 ;..\CFG8266.c:278: * -- ptr = '0' + res;
   0740 DD 7E 08      [19] 1060 	ld	a,8 (ix)
   0743 C6 FF         [ 7] 1061 	add	a,#0xff
   0745 DD 77 F4      [19] 1062 	ld	-12 (ix),a
   0748 DD 7E 09      [19] 1063 	ld	a,9 (ix)
   074B CE FF         [ 7] 1064 	adc	a,#0xff
   074D DD 77 F5      [19] 1065 	ld	-11 (ix),a
   0750 DD 4E F0      [19] 1066 	ld	c,-16 (ix)
                           1067 ;..\CFG8266.c:276: if (res < 10)
   0753 DD 7E FE      [19] 1068 	ld	a,-2 (ix)
   0756 B7            [ 4] 1069 	or	a, a
   0757 28 18         [12] 1070 	jr	Z,00112$
                           1071 ;..\CFG8266.c:278: * -- ptr = '0' + res;
   0759 DD 7E F4      [19] 1072 	ld	a,-12 (ix)
   075C DD 77 08      [19] 1073 	ld	8 (ix),a
   075F DD 7E F5      [19] 1074 	ld	a,-11 (ix)
   0762 DD 77 09      [19] 1075 	ld	9 (ix),a
   0765 DD 5E 08      [19] 1076 	ld	e,8 (ix)
   0768 DD 56 09      [19] 1077 	ld	d,9 (ix)
   076B 79            [ 4] 1078 	ld	a,c
   076C C6 30         [ 7] 1079 	add	a, #0x30
   076E 12            [ 7] 1080 	ld	(de),a
   076F 18 32         [12] 1081 	jr	00115$
   0771                    1082 00112$:
                           1083 ;..\CFG8266.c:280: else if ((res >= 10) && (res < 16))
   0771 DD 7E FE      [19] 1084 	ld	a,-2 (ix)
   0774 B7            [ 4] 1085 	or	a, a
   0775 20 2C         [12] 1086 	jr	NZ,00115$
   0777 DD 7E F0      [19] 1087 	ld	a,-16 (ix)
   077A D6 10         [ 7] 1088 	sub	a, #0x10
   077C DD 7E F1      [19] 1089 	ld	a,-15 (ix)
   077F DE 00         [ 7] 1090 	sbc	a, #0x00
   0781 DD 7E F2      [19] 1091 	ld	a,-14 (ix)
   0784 DE 00         [ 7] 1092 	sbc	a, #0x00
   0786 DD 7E F3      [19] 1093 	ld	a,-13 (ix)
   0789 DE 00         [ 7] 1094 	sbc	a, #0x00
   078B 30 16         [12] 1095 	jr	NC,00115$
                           1096 ;..\CFG8266.c:282: * --ptr = 'A' - 10 + res;
   078D DD 7E F4      [19] 1097 	ld	a,-12 (ix)
   0790 DD 77 08      [19] 1098 	ld	8 (ix),a
   0793 DD 7E F5      [19] 1099 	ld	a,-11 (ix)
   0796 DD 77 09      [19] 1100 	ld	9 (ix),a
   0799 DD 5E 08      [19] 1101 	ld	e,8 (ix)
   079C DD 56 09      [19] 1102 	ld	d,9 (ix)
   079F 79            [ 4] 1103 	ld	a,c
   07A0 C6 37         [ 7] 1104 	add	a, #0x37
   07A2 12            [ 7] 1105 	ld	(de),a
   07A3                    1106 00115$:
                           1107 ;..\CFG8266.c:284: } while ((value = t) != 0);
   07A3 21 16 00      [10] 1108 	ld	hl, #22
   07A6 39            [11] 1109 	add	hl, sp
   07A7 EB            [ 4] 1110 	ex	de, hl
   07A8 21 08 00      [10] 1111 	ld	hl, #8
   07AB 39            [11] 1112 	add	hl, sp
   07AC 01 04 00      [10] 1113 	ld	bc, #4
   07AF ED B0         [21] 1114 	ldir
   07B1 DD 7E F9      [19] 1115 	ld	a,-7 (ix)
   07B4 DD B6 F8      [19] 1116 	or	a, -8 (ix)
   07B7 DD B6 F7      [19] 1117 	or	a, -9 (ix)
   07BA DD B6 F6      [19] 1118 	or	a,-10 (ix)
   07BD C2rBFr06      [10] 1119 	jp	NZ,00114$
                           1120 ;..\CFG8266.c:286: return(ptr);
   07C0 DD 6E 08      [19] 1121 	ld	l,8 (ix)
   07C3 DD 66 09      [19] 1122 	ld	h,9 (ix)
   07C6                    1123 00117$:
   07C6 DD F9         [10] 1124 	ld	sp, ix
   07C8 DD E1         [14] 1125 	pop	ix
   07CA C9            [10] 1126 	ret
                           1127 ;..\CFG8266.c:289: bool WaitForRXData(unsigned char *uchData, unsigned int uiDataSize, unsigned int uiTimeout, bool bVerbose)
                           1128 ;	---------------------------------
                           1129 ; Function WaitForRXData
                           1130 ; ---------------------------------
   07CB                    1131 _WaitForRXData::
   07CB CDr00r00      [17] 1132 	call	___sdcc_enter_ix
   07CE 21 F1 FF      [10] 1133 	ld	hl,#-15
   07D1 39            [11] 1134 	add	hl,sp
   07D2 F9            [ 6] 1135 	ld	sp,hl
                           1136 ;..\CFG8266.c:291: bool bReturn = false;
   07D3 DD 36 FB 00   [19] 1137 	ld	-5 (ix),#0x00
                           1138 ;..\CFG8266.c:296: unsigned char advance[4] = {'-','\\','|','/'};
   07D7 21 02 00      [10] 1139 	ld	hl,#0x0002
   07DA 39            [11] 1140 	add	hl,sp
   07DB DD 75 FE      [19] 1141 	ld	-2 (ix),l
   07DE DD 74 FF      [19] 1142 	ld	-1 (ix),h
   07E1 DD 6E FE      [19] 1143 	ld	l,-2 (ix)
   07E4 DD 66 FF      [19] 1144 	ld	h,-1 (ix)
   07E7 36 2D         [10] 1145 	ld	(hl),#0x2d
   07E9 DD 6E FE      [19] 1146 	ld	l,-2 (ix)
   07EC DD 66 FF      [19] 1147 	ld	h,-1 (ix)
   07EF 23            [ 6] 1148 	inc	hl
   07F0 36 5C         [10] 1149 	ld	(hl),#0x5c
   07F2 DD 6E FE      [19] 1150 	ld	l,-2 (ix)
   07F5 DD 66 FF      [19] 1151 	ld	h,-1 (ix)
   07F8 23            [ 6] 1152 	inc	hl
   07F9 23            [ 6] 1153 	inc	hl
   07FA 36 7C         [10] 1154 	ld	(hl),#0x7c
   07FC DD 6E FE      [19] 1155 	ld	l,-2 (ix)
   07FF DD 66 FF      [19] 1156 	ld	h,-1 (ix)
   0802 23            [ 6] 1157 	inc	hl
   0803 23            [ 6] 1158 	inc	hl
   0804 23            [ 6] 1159 	inc	hl
   0805 36 2F         [10] 1160 	ld	(hl),#0x2f
                           1161 ;..\CFG8266.c:300: TickCount = 0;
   0807 21 00 00      [10] 1162 	ld	hl,#0x0000
   080A 22 9E FC      [16] 1163 	ld	(_TickCount),hl
                           1164 ;..\CFG8266.c:301: Timeout = TickCount + uiTimeout; //Wait up to 5 minutes
   080D FD 2A 9E FC   [20] 1165 	ld	iy,(_TickCount)
   0811 DD 5E 08      [19] 1166 	ld	e,8 (ix)
   0814 DD 56 09      [19] 1167 	ld	d,9 (ix)
   0817 FD 19         [15] 1168 	add	iy, de
   0819 FD E5         [15] 1169 	push	iy
   081B D1            [10] 1170 	pop	de
                           1171 ;..\CFG8266.c:302: if (Timeout<TickCount) //Leaping?
   081C 21 9E FC      [10] 1172 	ld	hl,#_TickCount
   081F 7B            [ 4] 1173 	ld	a,e
   0820 96            [ 7] 1174 	sub	a, (hl)
   0821 7A            [ 4] 1175 	ld	a,d
   0822 23            [ 6] 1176 	inc	hl
   0823 9E            [ 7] 1177 	sbc	a, (hl)
   0824 30 06         [12] 1178 	jr	NC,00102$
                           1179 ;..\CFG8266.c:303: Leaping = 1;
   0826 DD 36 F9 01   [19] 1180 	ld	-7 (ix),#0x01
   082A 18 04         [12] 1181 	jr	00103$
   082C                    1182 00102$:
                           1183 ;..\CFG8266.c:305: Leaping = 0;
   082C DD 36 F9 00   [19] 1184 	ld	-7 (ix),#0x00
   0830                    1185 00103$:
                           1186 ;..\CFG8266.c:306: ResponseSt=0;
   0830 DD 36 F7 00   [19] 1187 	ld	-9 (ix),#0x00
   0834 DD 36 F8 00   [19] 1188 	ld	-8 (ix),#0x00
                           1189 ;..\CFG8266.c:307: if (uiTimeout>900)
   0838 3E 84         [ 7] 1190 	ld	a,#0x84
   083A DD BE 08      [19] 1191 	cp	a, 8 (ix)
   083D 3E 03         [ 7] 1192 	ld	a,#0x03
   083F DD 9E 09      [19] 1193 	sbc	a, 9 (ix)
   0842 3E 00         [ 7] 1194 	ld	a,#0x00
   0844 17            [ 4] 1195 	rla
   0845 DD 77 FD      [19] 1196 	ld	-3 (ix), a
   0848 B7            [ 4] 1197 	or	a, a
   0849 28 0A         [12] 1198 	jr	Z,00144$
                           1199 ;..\CFG8266.c:308: PrintChar('W');
   084B D5            [11] 1200 	push	de
   084C 3E 57         [ 7] 1201 	ld	a,#0x57
   084E F5            [11] 1202 	push	af
   084F 33            [ 6] 1203 	inc	sp
   0850 CDr00r00      [17] 1204 	call	_PrintChar
   0853 33            [ 6] 1205 	inc	sp
   0854 D1            [10] 1206 	pop	de
                           1207 ;..\CFG8266.c:309: do
   0855                    1208 00144$:
   0855 DD 7E 06      [19] 1209 	ld	a,6 (ix)
   0858 D6 02         [ 7] 1210 	sub	a, #0x02
   085A 20 0A         [12] 1211 	jr	NZ,00186$
   085C DD 7E 07      [19] 1212 	ld	a,7 (ix)
   085F B7            [ 4] 1213 	or	a, a
   0860 20 04         [12] 1214 	jr	NZ,00186$
   0862 3E 01         [ 7] 1215 	ld	a,#0x01
   0864 18 01         [12] 1216 	jr	00187$
   0866                    1217 00186$:
   0866 AF            [ 4] 1218 	xor	a,a
   0867                    1219 00187$:
   0867 DD 77 FC      [19] 1220 	ld	-4 (ix),a
   086A 21 00 00      [10] 1221 	ld	hl,#0x0000
   086D E3            [19] 1222 	ex	(sp), hl
   086E                    1223 00129$:
                           1224 ;..\CFG8266.c:311: if (uiTimeout>900)
   086E DD 7E FD      [19] 1225 	ld	a,-3 (ix)
   0871 B7            [ 4] 1226 	or	a, a
   0872 28 2A         [12] 1227 	jr	Z,00107$
                           1228 ;..\CFG8266.c:314: PrintChar(8); //backspace
   0874 D5            [11] 1229 	push	de
   0875 3E 08         [ 7] 1230 	ld	a,#0x08
   0877 F5            [11] 1231 	push	af
   0878 33            [ 6] 1232 	inc	sp
   0879 CDr00r00      [17] 1233 	call	_PrintChar
   087C 33            [ 6] 1234 	inc	sp
   087D D1            [10] 1235 	pop	de
                           1236 ;..\CFG8266.c:315: PrintChar(advance[i%4]); // next char
   087E DD 7E F1      [19] 1237 	ld	a,-15 (ix)
   0881 E6 03         [ 7] 1238 	and	a, #0x03
   0883 4F            [ 4] 1239 	ld	c,a
   0884 06 00         [ 7] 1240 	ld	b,#0x00
   0886 DD 6E FE      [19] 1241 	ld	l,-2 (ix)
   0889 DD 66 FF      [19] 1242 	ld	h,-1 (ix)
   088C 09            [11] 1243 	add	hl,bc
   088D 46            [ 7] 1244 	ld	b,(hl)
   088E D5            [11] 1245 	push	de
   088F C5            [11] 1246 	push	bc
   0890 33            [ 6] 1247 	inc	sp
   0891 CDr00r00      [17] 1248 	call	_PrintChar
   0894 33            [ 6] 1249 	inc	sp
   0895 D1            [10] 1250 	pop	de
                           1251 ;..\CFG8266.c:316: ++i;
   0896 DD 34 F1      [23] 1252 	inc	-15 (ix)
   0899 20 03         [12] 1253 	jr	NZ,00188$
   089B DD 34 F2      [23] 1254 	inc	-14 (ix)
   089E                    1255 00188$:
   089E                    1256 00107$:
                           1257 ;..\CFG8266.c:318: if(UartRXData())
   089E DB 07         [11] 1258 	in	a,(_myPort7)
   08A0 0F            [ 4] 1259 	rrca
   08A1 30 75         [12] 1260 	jr	NC,00119$
                           1261 ;..\CFG8266.c:320: rx_data = GetUARTData();
   08A3 DB 06         [11] 1262 	in	a,(_myPort6)
   08A5 DD 77 FA      [19] 1263 	ld	-6 (ix),a
                           1264 ;..\CFG8266.c:321: if (rx_data == uchData[ResponseSt])
   08A8 DD 7E 04      [19] 1265 	ld	a,4 (ix)
   08AB DD 86 F7      [19] 1266 	add	a, -9 (ix)
   08AE 6F            [ 4] 1267 	ld	l,a
   08AF DD 7E 05      [19] 1268 	ld	a,5 (ix)
   08B2 DD 8E F8      [19] 1269 	adc	a, -8 (ix)
   08B5 67            [ 4] 1270 	ld	h,a
   08B6 DD 7E FA      [19] 1271 	ld	a,-6 (ix)
   08B9 96            [ 7] 1272 	sub	a,(hl)
   08BA 20 1E         [12] 1273 	jr	NZ,00116$
                           1274 ;..\CFG8266.c:323: ++ResponseSt;
   08BC DD 34 F7      [23] 1275 	inc	-9 (ix)
   08BF 20 03         [12] 1276 	jr	NZ,00192$
   08C1 DD 34 F8      [23] 1277 	inc	-8 (ix)
   08C4                    1278 00192$:
                           1279 ;..\CFG8266.c:324: if (ResponseSt == uiDataSize)
   08C4 DD 7E F7      [19] 1280 	ld	a,-9 (ix)
   08C7 DD 96 06      [19] 1281 	sub	a, 6 (ix)
   08CA 20 4C         [12] 1282 	jr	NZ,00119$
   08CC DD 7E F8      [19] 1283 	ld	a,-8 (ix)
   08CF DD 96 07      [19] 1284 	sub	a, 7 (ix)
   08D2 20 44         [12] 1285 	jr	NZ,00119$
                           1286 ;..\CFG8266.c:326: bReturn = true;
   08D4 DD 36 FB 01   [19] 1287 	ld	-5 (ix),#0x01
                           1288 ;..\CFG8266.c:327: break;
   08D8 18 70         [12] 1289 	jr	00131$
   08DA                    1290 00116$:
                           1291 ;..\CFG8266.c:332: if ((uiDataSize==2)&&(ResponseSt==1))
   08DA DD 7E FC      [19] 1292 	ld	a,-4 (ix)
   08DD B7            [ 4] 1293 	or	a, a
   08DE 28 30         [12] 1294 	jr	Z,00113$
   08E0 DD 7E F7      [19] 1295 	ld	a,-9 (ix)
   08E3 3D            [ 4] 1296 	dec	a
   08E4 20 2A         [12] 1297 	jr	NZ,00113$
   08E6 DD 7E F8      [19] 1298 	ld	a,-8 (ix)
   08E9 B7            [ 4] 1299 	or	a, a
   08EA 20 24         [12] 1300 	jr	NZ,00113$
                           1301 ;..\CFG8266.c:334: if (bVerbose)
   08EC DD 7E 0A      [19] 1302 	ld	a,10 (ix)
   08EF B7            [ 4] 1303 	or	a, a
   08F0 28 1A         [12] 1304 	jr	Z,00111$
                           1305 ;..\CFG8266.c:335: printf ("Error %u on command %c...\r\n",rx_data,uchData[0]);
   08F2 DD 6E 04      [19] 1306 	ld	l,4 (ix)
   08F5 DD 66 05      [19] 1307 	ld	h,5 (ix)
   08F8 5E            [ 7] 1308 	ld	e,(hl)
   08F9 16 00         [ 7] 1309 	ld	d,#0x00
   08FB DD 4E FA      [19] 1310 	ld	c,-6 (ix)
   08FE 06 00         [ 7] 1311 	ld	b,#0x00
   0900 D5            [11] 1312 	push	de
   0901 C5            [11] 1313 	push	bc
   0902 21r52r09      [10] 1314 	ld	hl,#___str_1
   0905 E5            [11] 1315 	push	hl
   0906 CDr00r00      [17] 1316 	call	_printf
   0909 F1            [10] 1317 	pop	af
   090A F1            [10] 1318 	pop	af
   090B F1            [10] 1319 	pop	af
   090C                    1320 00111$:
                           1321 ;..\CFG8266.c:336: return false;
   090C 2E 00         [ 7] 1322 	ld	l,#0x00
   090E 18 3D         [12] 1323 	jr	00132$
   0910                    1324 00113$:
                           1325 ;..\CFG8266.c:338: ResponseSt = 0;
   0910 DD 36 F7 00   [19] 1326 	ld	-9 (ix),#0x00
   0914 DD 36 F8 00   [19] 1327 	ld	-8 (ix),#0x00
   0918                    1328 00119$:
                           1329 ;..\CFG8266.c:342: if (Leaping)
   0918 DD 7E F9      [19] 1330 	ld	a,-7 (ix)
   091B B7            [ 4] 1331 	or	a, a
   091C 28 1D         [12] 1332 	jr	Z,00127$
                           1333 ;..\CFG8266.c:344: if (TickCount&0x8000==0)
   091E 01 00 00      [10] 1334 	ld	bc,#0x0000
   0921 FD 21 9E FC   [14] 1335 	ld	iy,#_TickCount
   0925 78            [ 4] 1336 	ld	a,b
   0926 B1            [ 4] 1337 	or	a,c
   0927 CAr6Er08      [10] 1338 	jp	Z,00129$
                           1339 ;..\CFG8266.c:346: Leaping = 0;
   092A DD 36 F9 00   [19] 1340 	ld	-7 (ix),#0x00
                           1341 ;..\CFG8266.c:347: if (TickCount>Timeout)
   092E 7B            [ 4] 1342 	ld	a,e
   092F FD 96 00      [19] 1343 	sub	a, 0 (iy)
   0932 7A            [ 4] 1344 	ld	a,d
   0933 FD 9E 01      [19] 1345 	sbc	a, 1 (iy)
   0936 38 12         [12] 1346 	jr	C,00131$
                           1347 ;..\CFG8266.c:348: break;
   0938 C3r6Er08      [10] 1348 	jp	00129$
   093B                    1349 00127$:
                           1350 ;..\CFG8266.c:352: if (TickCount>Timeout)
   093B 7B            [ 4] 1351 	ld	a,e
   093C FD 21 9E FC   [14] 1352 	ld	iy,#_TickCount
   0940 FD 96 00      [19] 1353 	sub	a, 0 (iy)
   0943 7A            [ 4] 1354 	ld	a,d
   0944 FD 9E 01      [19] 1355 	sbc	a, 1 (iy)
   0947 D2r6Er08      [10] 1356 	jp	NC,00129$
                           1357 ;..\CFG8266.c:355: while (1);
   094A                    1358 00131$:
                           1359 ;..\CFG8266.c:357: return bReturn;
   094A DD 6E FB      [19] 1360 	ld	l,-5 (ix)
   094D                    1361 00132$:
   094D DD F9         [10] 1362 	ld	sp, ix
   094F DD E1         [14] 1363 	pop	ix
   0951 C9            [10] 1364 	ret
   0952                    1365 ___str_1:
   0952 45 72 72 6F 72 20  1366 	.ascii "Error %u on command %c..."
        25 75 20 6F 6E 20
        63 6F 6D 6D 61 6E
        64 20 25 63 2E 2E
        2E
   096B 0D                 1367 	.db 0x0d
   096C 0A                 1368 	.db 0x0a
   096D 00                 1369 	.db 0x00
                           1370 ;..\CFG8266.c:360: void FinishUpdate (bool bSendReset)
                           1371 ;	---------------------------------
                           1372 ; Function FinishUpdate
                           1373 ; ---------------------------------
   096E                    1374 _FinishUpdate::
   096E CDr00r00      [17] 1375 	call	___sdcc_enter_ix
   0971 F5            [11] 1376 	push	af
   0972 F5            [11] 1377 	push	af
   0973 F5            [11] 1378 	push	af
   0974 3B            [ 6] 1379 	dec	sp
                           1380 ;..\CFG8266.c:362: unsigned int iRetries = 3;
   0975 DD 36 FE 03   [19] 1381 	ld	-2 (ix),#0x03
   0979 DD 36 FF 00   [19] 1382 	ld	-1 (ix),#0x00
                           1383 ;..\CFG8266.c:366: bool bReset = bSendReset;
   097D DD 7E 04      [19] 1384 	ld	a,4 (ix)
   0980 DD 77 F9      [19] 1385 	ld	-7 (ix),a
                           1386 ;..\CFG8266.c:368: Print("Finishing flash, this will take some time, WAIT!\n");
   0983 21rCCr0A      [10] 1387 	ld	hl,#___str_2
   0986 E5            [11] 1388 	push	hl
   0987 CDr00r00      [17] 1389 	call	_Print
   098A F1            [10] 1390 	pop	af
                           1391 ;..\CFG8266.c:370: do
   098B DD 36 FA 02   [19] 1392 	ld	-6 (ix),#0x02
   098F                    1393 00135$:
                           1394 ;..\CFG8266.c:372: bRet = true;
   098F 2E 01         [ 7] 1395 	ld	l,#0x01
                           1396 ;..\CFG8266.c:373: --ucRetries;
   0991 DD 35 FA      [23] 1397 	dec	-6 (ix)
                           1398 ;..\CFG8266.c:374: if (bReset)
   0994 DD 7E F9      [19] 1399 	ld	a,-7 (ix)
   0997 B7            [ 4] 1400 	or	a, a
   0998 28 0C         [12] 1401 	jr	Z,00152$
                           1402 ;..\CFG8266.c:375: TxByte('R'); //Request Reset
   099A E5            [11] 1403 	push	hl
   099B 3E 52         [ 7] 1404 	ld	a,#0x52
   099D F5            [11] 1405 	push	af
   099E 33            [ 6] 1406 	inc	sp
   099F CDr1Br06      [17] 1407 	call	_TxByte
   09A2 33            [ 6] 1408 	inc	sp
   09A3 E1            [10] 1409 	pop	hl
   09A4 18 46         [12] 1410 	jr	00110$
                           1411 ;..\CFG8266.c:378: do
   09A6                    1412 00152$:
   09A6 DD 4E FE      [19] 1413 	ld	c,-2 (ix)
   09A9 DD 46 FF      [19] 1414 	ld	b,-1 (ix)
                           1415 ;..\CFG8266.c:380: for (uchHalt=60;uchHalt>0;--uchHalt)
   09AC                    1416 00150$:
   09AC 1E 3C         [ 7] 1417 	ld	e,#0x3c
   09AE                    1418 00138$:
                           1419 ;..\CFG8266.c:381: Halt();
   09AE 76            [ 4] 1420 	halt;	
                           1421 ;..\CFG8266.c:380: for (uchHalt=60;uchHalt>0;--uchHalt)
   09AF 1D            [ 4] 1422 	dec	e
   09B0 7B            [ 4] 1423 	ld	a,e
   09B1 B7            [ 4] 1424 	or	a, a
   09B2 20 FA         [12] 1425 	jr	NZ,00138$
                           1426 ;..\CFG8266.c:382: TxByte('E'); //End Update
   09B4 C5            [11] 1427 	push	bc
   09B5 3E 45         [ 7] 1428 	ld	a,#0x45
   09B7 F5            [11] 1429 	push	af
   09B8 33            [ 6] 1430 	inc	sp
   09B9 CDr1Br06      [17] 1431 	call	_TxByte
   09BC 33            [ 6] 1432 	inc	sp
   09BD 3E 01         [ 7] 1433 	ld	a,#0x01
   09BF F5            [11] 1434 	push	af
   09C0 33            [ 6] 1435 	inc	sp
   09C1 21 84 03      [10] 1436 	ld	hl,#0x0384
   09C4 E5            [11] 1437 	push	hl
   09C5 21 02 00      [10] 1438 	ld	hl,#0x0002
   09C8 E5            [11] 1439 	push	hl
   09C9 21r8Fr01      [10] 1440 	ld	hl,#_endUpdate
   09CC E5            [11] 1441 	push	hl
   09CD CDrCBr07      [17] 1442 	call	_WaitForRXData
   09D0 F1            [10] 1443 	pop	af
   09D1 F1            [10] 1444 	pop	af
   09D2 F1            [10] 1445 	pop	af
   09D3 33            [ 6] 1446 	inc	sp
   09D4 C1            [10] 1447 	pop	bc
                           1448 ;..\CFG8266.c:384: iRetries--;
   09D5 0B            [ 6] 1449 	dec	bc
                           1450 ;..\CFG8266.c:386: while ((!bRet)&&(iRetries));
   09D6 7D            [ 4] 1451 	ld	a,l
   09D7 B7            [ 4] 1452 	or	a, a
   09D8 20 04         [12] 1453 	jr	NZ,00168$
   09DA 78            [ 4] 1454 	ld	a,b
   09DB B1            [ 4] 1455 	or	a,c
   09DC 20 CE         [12] 1456 	jr	NZ,00150$
   09DE                    1457 00168$:
   09DE DD 71 FE      [19] 1458 	ld	-2 (ix),c
   09E1 DD 70 FF      [19] 1459 	ld	-1 (ix),b
                           1460 ;..\CFG8266.c:387: if (bRet)
   09E4 7D            [ 4] 1461 	ld	a,l
   09E5 B7            [ 4] 1462 	or	a, a
   09E6 28 04         [12] 1463 	jr	Z,00110$
                           1464 ;..\CFG8266.c:389: bReset=true;
   09E8 DD 36 F9 01   [19] 1465 	ld	-7 (ix),#0x01
   09EC                    1466 00110$:
                           1467 ;..\CFG8266.c:393: if (!bRet)
   09EC 7D            [ 4] 1468 	ld	a,l
   09ED B7            [ 4] 1469 	or	a, a
   09EE 20 0B         [12] 1470 	jr	NZ,00133$
                           1471 ;..\CFG8266.c:394: Print("Timeout waiting to end update...\n");
   09F0 21rFEr0A      [10] 1472 	ld	hl,#___str_3
   09F3 E5            [11] 1473 	push	hl
   09F4 CDr00r00      [17] 1474 	call	_Print
   09F7 F1            [10] 1475 	pop	af
   09F8 C3rC0r0A      [10] 1476 	jp	00136$
   09FB                    1477 00133$:
                           1478 ;..\CFG8266.c:397: if (ucRetries)
   09FB DD 7E FA      [19] 1479 	ld	a,-6 (ix)
   09FE B7            [ 4] 1480 	or	a, a
   09FF 28 18         [12] 1481 	jr	Z,00115$
                           1482 ;..\CFG8266.c:399: if (ucIsFw)
   0A01 3Ar0Er02      [13] 1483 	ld	a,(#_ucIsFw + 0)
   0A04 B7            [ 4] 1484 	or	a, a
   0A05 28 0A         [12] 1485 	jr	Z,00112$
                           1486 ;..\CFG8266.c:400: Print("\nFirmware Update done, ESP is restarting, WAIT...\n");
   0A07 21r20r0B      [10] 1487 	ld	hl,#___str_4
   0A0A E5            [11] 1488 	push	hl
   0A0B CDr00r00      [17] 1489 	call	_Print
   0A0E F1            [10] 1490 	pop	af
   0A0F 18 08         [12] 1491 	jr	00115$
   0A11                    1492 00112$:
                           1493 ;..\CFG8266.c:402: Print("\nCertificates Update done, ESP is restarting, WAIT...\n");
   0A11 21r53r0B      [10] 1494 	ld	hl,#___str_5
   0A14 E5            [11] 1495 	push	hl
   0A15 CDr00r00      [17] 1496 	call	_Print
   0A18 F1            [10] 1497 	pop	af
   0A19                    1498 00115$:
                           1499 ;..\CFG8266.c:405: if (WaitForRXData(responseReady,7,2700,false)) //Wait up to 45 seconds
   0A19 AF            [ 4] 1500 	xor	a, a
   0A1A F5            [11] 1501 	push	af
   0A1B 33            [ 6] 1502 	inc	sp
   0A1C 21 8C 0A      [10] 1503 	ld	hl,#0x0a8c
   0A1F E5            [11] 1504 	push	hl
   0A20 21 07 00      [10] 1505 	ld	hl,#0x0007
   0A23 E5            [11] 1506 	push	hl
   0A24 21r88r01      [10] 1507 	ld	hl,#_responseReady
   0A27 E5            [11] 1508 	push	hl
   0A28 CDrCBr07      [17] 1509 	call	_WaitForRXData
   0A2B F1            [10] 1510 	pop	af
   0A2C F1            [10] 1511 	pop	af
   0A2D F1            [10] 1512 	pop	af
   0A2E 33            [ 6] 1513 	inc	sp
   0A2F 7D            [ 4] 1514 	ld	a,l
   0A30 B7            [ 4] 1515 	or	a, a
   0A31 CArB2r0A      [10] 1516 	jp	Z,00130$
                           1517 ;..\CFG8266.c:407: if (!ucIsFw)
   0A34 3Ar0Er02      [13] 1518 	ld	a,(#_ucIsFw + 0)
   0A37 B7            [ 4] 1519 	or	a, a
   0A38 20 6E         [12] 1520 	jr	NZ,00125$
                           1521 ;..\CFG8266.c:409: Print("ESP Reset Ok, now let's request creation of index file...\n");
   0A3A 21r8Ar0B      [10] 1522 	ld	hl,#___str_6
   0A3D E5            [11] 1523 	push	hl
   0A3E CDr00r00      [17] 1524 	call	_Print
   0A41 F1            [10] 1525 	pop	af
                           1526 ;..\CFG8266.c:411: do
   0A42 DD 36 FC 0A   [19] 1527 	ld	-4 (ix),#0x0a
   0A46 DD 36 FD 00   [19] 1528 	ld	-3 (ix),#0x00
                           1529 ;..\CFG8266.c:413: for (uchHalt=60;uchHalt>0;--uchHalt)
   0A4A                    1530 00160$:
   0A4A 0E 3C         [ 7] 1531 	ld	c,#0x3c
   0A4C                    1532 00140$:
                           1533 ;..\CFG8266.c:414: Halt();
   0A4C 76            [ 4] 1534 	halt;	
                           1535 ;..\CFG8266.c:413: for (uchHalt=60;uchHalt>0;--uchHalt)
   0A4D 0D            [ 4] 1536 	dec	c
   0A4E 79            [ 4] 1537 	ld	a,c
   0A4F B7            [ 4] 1538 	or	a, a
   0A50 20 FA         [12] 1539 	jr	NZ,00140$
                           1540 ;..\CFG8266.c:415: TxByte('I'); //End Update
   0A52 3E 49         [ 7] 1541 	ld	a,#0x49
   0A54 F5            [11] 1542 	push	af
   0A55 33            [ 6] 1543 	inc	sp
   0A56 CDr1Br06      [17] 1544 	call	_TxByte
   0A59 33            [ 6] 1545 	inc	sp
                           1546 ;..\CFG8266.c:416: bRet = WaitForRXData(certificateDone,2,3600,false); //Wait up to 1 minute, certificate index creation takes time
   0A5A AF            [ 4] 1547 	xor	a, a
   0A5B F5            [11] 1548 	push	af
   0A5C 33            [ 6] 1549 	inc	sp
   0A5D 21 10 0E      [10] 1550 	ld	hl,#0x0e10
   0A60 E5            [11] 1551 	push	hl
   0A61 21 02 00      [10] 1552 	ld	hl,#0x0002
   0A64 E5            [11] 1553 	push	hl
   0A65 21r91r01      [10] 1554 	ld	hl,#_certificateDone
   0A68 E5            [11] 1555 	push	hl
   0A69 CDrCBr07      [17] 1556 	call	_WaitForRXData
   0A6C F1            [10] 1557 	pop	af
   0A6D F1            [10] 1558 	pop	af
   0A6E F1            [10] 1559 	pop	af
   0A6F 33            [ 6] 1560 	inc	sp
   0A70 DD 75 FB      [19] 1561 	ld	-5 (ix),l
                           1562 ;..\CFG8266.c:417: iRetries--;
   0A73 DD 6E FC      [19] 1563 	ld	l,-4 (ix)
   0A76 DD 66 FD      [19] 1564 	ld	h,-3 (ix)
   0A79 2B            [ 6] 1565 	dec	hl
   0A7A DD 75 FC      [19] 1566 	ld	-4 (ix),l
   0A7D DD 74 FD      [19] 1567 	ld	-3 (ix),h
                           1568 ;..\CFG8266.c:419: while ((!bRet)&&(iRetries));
   0A80 DD 7E FB      [19] 1569 	ld	a,-5 (ix)
   0A83 B7            [ 4] 1570 	or	a, a
   0A84 20 08         [12] 1571 	jr	NZ,00120$
   0A86 DD 7E FD      [19] 1572 	ld	a,-3 (ix)
   0A89 DD B6 FC      [19] 1573 	or	a,-4 (ix)
   0A8C 20 BC         [12] 1574 	jr	NZ,00160$
   0A8E                    1575 00120$:
                           1576 ;..\CFG8266.c:420: if (bRet)
   0A8E DD 7E FB      [19] 1577 	ld	a,-5 (ix)
   0A91 B7            [ 4] 1578 	or	a, a
   0A92 28 0A         [12] 1579 	jr	Z,00122$
                           1580 ;..\CFG8266.c:421: Print("Done!\n");
   0A94 21rC5r0B      [10] 1581 	ld	hl,#___str_7
   0A97 E5            [11] 1582 	push	hl
   0A98 CDr00r00      [17] 1583 	call	_Print
   0A9B F1            [10] 1584 	pop	af
   0A9C 18 29         [12] 1585 	jr	00137$
   0A9E                    1586 00122$:
                           1587 ;..\CFG8266.c:423: Print("Done, but time-out on creating certificates index file!\n");
   0A9E 21rCCr0B      [10] 1588 	ld	hl,#___str_8
   0AA1 E5            [11] 1589 	push	hl
   0AA2 CDr00r00      [17] 1590 	call	_Print
   0AA5 F1            [10] 1591 	pop	af
   0AA6 18 1F         [12] 1592 	jr	00137$
   0AA8                    1593 00125$:
                           1594 ;..\CFG8266.c:426: Print("Done!\n");
   0AA8 21rC5r0B      [10] 1595 	ld	hl,#___str_7
   0AAB E5            [11] 1596 	push	hl
   0AAC CDr00r00      [17] 1597 	call	_Print
   0AAF F1            [10] 1598 	pop	af
                           1599 ;..\CFG8266.c:427: break;
   0AB0 18 15         [12] 1600 	jr	00137$
   0AB2                    1601 00130$:
                           1602 ;..\CFG8266.c:430: if (!ucRetries)
   0AB2 DD 7E FA      [19] 1603 	ld	a,-6 (ix)
   0AB5 B7            [ 4] 1604 	or	a, a
   0AB6 20 08         [12] 1605 	jr	NZ,00136$
                           1606 ;..\CFG8266.c:431: Print("Timeout error\n");
   0AB8 21r05r0C      [10] 1607 	ld	hl,#___str_9
   0ABB E5            [11] 1608 	push	hl
   0ABC CDr00r00      [17] 1609 	call	_Print
   0ABF F1            [10] 1610 	pop	af
   0AC0                    1611 00136$:
                           1612 ;..\CFG8266.c:434: while (ucRetries);
   0AC0 DD 7E FA      [19] 1613 	ld	a,-6 (ix)
   0AC3 B7            [ 4] 1614 	or	a, a
   0AC4 C2r8Fr09      [10] 1615 	jp	NZ,00135$
   0AC7                    1616 00137$:
                           1617 ;..\CFG8266.c:436: return;
   0AC7 DD F9         [10] 1618 	ld	sp, ix
   0AC9 DD E1         [14] 1619 	pop	ix
   0ACB C9            [10] 1620 	ret
   0ACC                    1621 ___str_2:
   0ACC 46 69 6E 69 73 68  1622 	.ascii "Finishing flash, this will take some time, WAIT!"
        69 6E 67 20 66 6C
        61 73 68 2C 20 74
        68 69 73 20 77 69
        6C 6C 20 74 61 6B
        65 20 73 6F 6D 65
        20 74 69 6D 65 2C
        20 57 41 49 54 21
   0AFC 0A                 1623 	.db 0x0a
   0AFD 00                 1624 	.db 0x00
   0AFE                    1625 ___str_3:
   0AFE 54 69 6D 65 6F 75  1626 	.ascii "Timeout waiting to end update..."
        74 20 77 61 69 74
        69 6E 67 20 74 6F
        20 65 6E 64 20 75
        70 64 61 74 65 2E
        2E 2E
   0B1E 0A                 1627 	.db 0x0a
   0B1F 00                 1628 	.db 0x00
   0B20                    1629 ___str_4:
   0B20 0A                 1630 	.db 0x0a
   0B21 46 69 72 6D 77 61  1631 	.ascii "Firmware Update done, ESP is restarting, WAIT..."
        72 65 20 55 70 64
        61 74 65 20 64 6F
        6E 65 2C 20 45 53
        50 20 69 73 20 72
        65 73 74 61 72 74
        69 6E 67 2C 20 57
        41 49 54 2E 2E 2E
   0B51 0A                 1632 	.db 0x0a
   0B52 00                 1633 	.db 0x00
   0B53                    1634 ___str_5:
   0B53 0A                 1635 	.db 0x0a
   0B54 43 65 72 74 69 66  1636 	.ascii "Certificates Update done, ESP is restarting, WAIT..."
        69 63 61 74 65 73
        20 55 70 64 61 74
        65 20 64 6F 6E 65
        2C 20 45 53 50 20
        69 73 20 72 65 73
        74 61 72 74 69 6E
        67 2C 20 57 41 49
        54 2E 2E 2E
   0B88 0A                 1637 	.db 0x0a
   0B89 00                 1638 	.db 0x00
   0B8A                    1639 ___str_6:
   0B8A 45 53 50 20 52 65  1640 	.ascii "ESP Reset Ok, now let's request creation of index file..."
        73 65 74 20 4F 6B
        2C 20 6E 6F 77 20
        6C 65 74 27 73 20
        72 65 71 75 65 73
        74 20 63 72 65 61
        74 69 6F 6E 20 6F
        66 20 69 6E 64 65
        78 20 66 69 6C 65
        2E 2E 2E
   0BC3 0A                 1641 	.db 0x0a
   0BC4 00                 1642 	.db 0x00
   0BC5                    1643 ___str_7:
   0BC5 44 6F 6E 65 21     1644 	.ascii "Done!"
   0BCA 0A                 1645 	.db 0x0a
   0BCB 00                 1646 	.db 0x00
   0BCC                    1647 ___str_8:
   0BCC 44 6F 6E 65 2C 20  1648 	.ascii "Done, but time-out on creating certificates index file!"
        62 75 74 20 74 69
        6D 65 2D 6F 75 74
        20 6F 6E 20 63 72
        65 61 74 69 6E 67
        20 63 65 72 74 69
        66 69 63 61 74 65
        73 20 69 6E 64 65
        78 20 66 69 6C 65
        21
   0C03 0A                 1649 	.db 0x0a
   0C04 00                 1650 	.db 0x00
   0C05                    1651 ___str_9:
   0C05 54 69 6D 65 6F 75  1652 	.ascii "Timeout error"
        74 20 65 72 72 6F
        72
   0C12 0A                 1653 	.db 0x0a
   0C13 00                 1654 	.db 0x00
                           1655 ;..\CFG8266.c:439: int main(char** argv, int argc)
                           1656 ;	---------------------------------
                           1657 ; Function main
                           1658 ; ---------------------------------
   0C14                    1659 _main::
   0C14 CDr00r00      [17] 1660 	call	___sdcc_enter_ix
   0C17 21 11 FE      [10] 1661 	ld	hl,#-495
   0C1A 39            [11] 1662 	add	hl,sp
   0C1B F9            [ 6] 1663 	ld	sp,hl
                           1664 ;..\CFG8266.c:451: unsigned char advance[4] = {'-','\\','|','/'};
   0C1C 21 35 00      [10] 1665 	ld	hl,#0x0035
   0C1F 39            [11] 1666 	add	hl,sp
   0C20 DD 75 EE      [19] 1667 	ld	-18 (ix),l
   0C23 DD 74 EF      [19] 1668 	ld	-17 (ix),h
   0C26 DD 6E EE      [19] 1669 	ld	l,-18 (ix)
   0C29 DD 66 EF      [19] 1670 	ld	h,-17 (ix)
   0C2C 36 2D         [10] 1671 	ld	(hl),#0x2d
   0C2E DD 6E EE      [19] 1672 	ld	l,-18 (ix)
   0C31 DD 66 EF      [19] 1673 	ld	h,-17 (ix)
   0C34 23            [ 6] 1674 	inc	hl
   0C35 36 5C         [10] 1675 	ld	(hl),#0x5c
   0C37 DD 6E EE      [19] 1676 	ld	l,-18 (ix)
   0C3A DD 66 EF      [19] 1677 	ld	h,-17 (ix)
   0C3D 23            [ 6] 1678 	inc	hl
   0C3E 23            [ 6] 1679 	inc	hl
   0C3F 36 7C         [10] 1680 	ld	(hl),#0x7c
   0C41 DD 6E EE      [19] 1681 	ld	l,-18 (ix)
   0C44 DD 66 EF      [19] 1682 	ld	h,-17 (ix)
   0C47 23            [ 6] 1683 	inc	hl
   0C48 23            [ 6] 1684 	inc	hl
   0C49 23            [ 6] 1685 	inc	hl
   0C4A 36 2F         [10] 1686 	ld	(hl),#0x2f
                           1687 ;..\CFG8266.c:459: unsigned char ucFirstBlock = 1;
   0C4C FD 21 00 00   [14] 1688 	ld	iy,#0
   0C50 FD 39         [15] 1689 	add	iy,sp
   0C52 FD 36 00 01   [19] 1690 	ld	0 (iy),#0x01
                           1691 ;..\CFG8266.c:464: ucLocalUpdate = 0;
   0C56 21r0Dr02      [10] 1692 	ld	hl,#_ucLocalUpdate + 0
   0C59 36 00         [10] 1693 	ld	(hl), #0x00
                           1694 ;..\CFG8266.c:465: ucNagleOff = 0;
   0C5B 21r0Fr02      [10] 1695 	ld	hl,#_ucNagleOff + 0
   0C5E 36 00         [10] 1696 	ld	(hl), #0x00
                           1697 ;..\CFG8266.c:466: ucNagleOn = 0;
   0C60 21r10r02      [10] 1698 	ld	hl,#_ucNagleOn + 0
   0C63 36 00         [10] 1699 	ld	(hl), #0x00
                           1700 ;..\CFG8266.c:467: Print("> MSX-SM ESP8266 WIFI Module Configuration v1.00<\n(c) 2019 Oduvaldo Pavan Junior - ducasp@gmail.com\n\n");
   0C65 21r6Dr18      [10] 1701 	ld	hl,#___str_10
   0C68 E5            [11] 1702 	push	hl
   0C69 CDr00r00      [17] 1703 	call	_Print
   0C6C F1            [10] 1704 	pop	af
                           1705 ;..\CFG8266.c:469: if (IsValidInput(argv, argc))
   0C6D DD 6E 06      [19] 1706 	ld	l,6 (ix)
   0C70 DD 66 07      [19] 1707 	ld	h,7 (ix)
   0C73 E5            [11] 1708 	push	hl
   0C74 DD 6E 04      [19] 1709 	ld	l,4 (ix)
   0C77 DD 66 05      [19] 1710 	ld	h,5 (ix)
   0C7A E5            [11] 1711 	push	hl
   0C7B CDr71r03      [17] 1712 	call	_IsValidInput
   0C7E F1            [10] 1713 	pop	af
   0C7F F1            [10] 1714 	pop	af
   0C80 DD 74 F1      [19] 1715 	ld	-15 (ix),h
   0C83 DD 75 F0      [19] 1716 	ld	-16 (ix),l
   0C86 DD 7E F1      [19] 1717 	ld	a,-15 (ix)
   0C89 DD B6 F0      [19] 1718 	or	a,-16 (ix)
   0C8C CAr5Dr18      [10] 1719 	jp	Z,00263$
                           1720 ;..\CFG8266.c:471: do
   0C8F DD 36 E1 00   [19] 1721 	ld	-31 (ix),#0x00
   0C93                    1722 00103$:
                           1723 ;..\CFG8266.c:474: myPort6 = speed;
   0C93 DD 7E E1      [19] 1724 	ld	a,-31 (ix)
   0C96 D3 06         [11] 1725 	out	(_myPort6),a
                           1726 ;..\CFG8266.c:475: ClearUartData();
   0C98 3E 14         [ 7] 1727 	ld	a,#0x14
   0C9A D3 06         [11] 1728 	out	(_myPort6),a
                           1729 ;..\CFG8266.c:476: TxByte('?');
   0C9C 3E 3F         [ 7] 1730 	ld	a,#0x3f
   0C9E F5            [11] 1731 	push	af
   0C9F 33            [ 6] 1732 	inc	sp
   0CA0 CDr1Br06      [17] 1733 	call	_TxByte
   0CA3 33            [ 6] 1734 	inc	sp
                           1735 ;..\CFG8266.c:477: Halt();
   0CA4 76            [ 4] 1736 	halt;	
                           1737 ;..\CFG8266.c:479: bResponse = WaitForRXData(responseOK,2,4,false);
   0CA5 AF            [ 4] 1738 	xor	a, a
   0CA6 F5            [11] 1739 	push	af
   0CA7 33            [ 6] 1740 	inc	sp
   0CA8 21 04 00      [10] 1741 	ld	hl,#0x0004
   0CAB E5            [11] 1742 	push	hl
   0CAC 2E 02         [ 7] 1743 	ld	l, #0x02
   0CAE E5            [11] 1744 	push	hl
   0CAF 21r93r01      [10] 1745 	ld	hl,#_responseOK
   0CB2 E5            [11] 1746 	push	hl
   0CB3 CDrCBr07      [17] 1747 	call	_WaitForRXData
   0CB6 F1            [10] 1748 	pop	af
   0CB7 F1            [10] 1749 	pop	af
   0CB8 F1            [10] 1750 	pop	af
   0CB9 33            [ 6] 1751 	inc	sp
                           1752 ;..\CFG8266.c:481: if (bResponse)
   0CBA DD 75 F0      [19] 1753 	ld	-16 (ix), l
   0CBD 7D            [ 4] 1754 	ld	a, l
   0CBE B7            [ 4] 1755 	or	a, a
   0CBF 20 0A         [12] 1756 	jr	NZ,00105$
                           1757 ;..\CFG8266.c:483: ++speed;
   0CC1 DD 34 E1      [23] 1758 	inc	-31 (ix)
                           1759 ;..\CFG8266.c:485: while (speed<10);
   0CC4 DD 7E E1      [19] 1760 	ld	a,-31 (ix)
   0CC7 D6 0A         [ 7] 1761 	sub	a, #0x0a
   0CC9 38 C8         [12] 1762 	jr	C,00103$
   0CCB                    1763 00105$:
                           1764 ;..\CFG8266.c:487: if (speed<10)
   0CCB DD 7E E1      [19] 1765 	ld	a,-31 (ix)
   0CCE D6 0A         [ 7] 1766 	sub	a, #0x0a
   0CD0 D2r53r18      [10] 1767 	jp	NC,00260$
                           1768 ;..\CFG8266.c:489: printf ("Using Baud Rate #%u\r\n",speed);
   0CD3 DD 7E E1      [19] 1769 	ld	a,-31 (ix)
   0CD6 DD 77 F8      [19] 1770 	ld	-8 (ix),a
   0CD9 DD 36 F9 00   [19] 1771 	ld	-7 (ix),#0x00
   0CDD DD 6E F8      [19] 1772 	ld	l,-8 (ix)
   0CE0 DD 66 F9      [19] 1773 	ld	h,-7 (ix)
   0CE3 E5            [11] 1774 	push	hl
   0CE4 21rD3r18      [10] 1775 	ld	hl,#___str_11
   0CE7 E5            [11] 1776 	push	hl
   0CE8 CDr00r00      [17] 1777 	call	_printf
   0CEB F1            [10] 1778 	pop	af
   0CEC F1            [10] 1779 	pop	af
                           1780 ;..\CFG8266.c:490: if ((ucScan)||(ucNagleOff)||(ucNagleOn)) //Scan and choose network to connect?
   0CED 3Ar00r00      [13] 1781 	ld	a,(#_ucScan + 0)
   0CF0 B7            [ 4] 1782 	or	a, a
   0CF1 20 0D         [12] 1783 	jr	NZ,00254$
   0CF3 3Ar0Fr02      [13] 1784 	ld	a,(#_ucNagleOff + 0)
   0CF6 B7            [ 4] 1785 	or	a, a
   0CF7 20 07         [12] 1786 	jr	NZ,00254$
   0CF9 3Ar10r02      [13] 1787 	ld	a,(#_ucNagleOn + 0)
   0CFC B7            [ 4] 1788 	or	a, a
   0CFD CArFCr10      [10] 1789 	jp	Z,00255$
   0D00                    1790 00254$:
                           1791 ;..\CFG8266.c:492: if (ucScan)
   0D00 3Ar00r00      [13] 1792 	ld	a,(#_ucScan + 0)
   0D03 B7            [ 4] 1793 	or	a, a
   0D04 28 0A         [12] 1794 	jr	Z,00112$
                           1795 ;..\CFG8266.c:493: TxByte('S'); //Request SCAN
   0D06 3E 53         [ 7] 1796 	ld	a,#0x53
   0D08 F5            [11] 1797 	push	af
   0D09 33            [ 6] 1798 	inc	sp
   0D0A CDr1Br06      [17] 1799 	call	_TxByte
   0D0D 33            [ 6] 1800 	inc	sp
   0D0E 18 1E         [12] 1801 	jr	00113$
   0D10                    1802 00112$:
                           1803 ;..\CFG8266.c:494: else if (ucNagleOff)
   0D10 3Ar0Fr02      [13] 1804 	ld	a,(#_ucNagleOff + 0)
   0D13 B7            [ 4] 1805 	or	a, a
   0D14 28 0A         [12] 1806 	jr	Z,00109$
                           1807 ;..\CFG8266.c:495: TxByte('N'); //Request nagle off for future connections
   0D16 3E 4E         [ 7] 1808 	ld	a,#0x4e
   0D18 F5            [11] 1809 	push	af
   0D19 33            [ 6] 1810 	inc	sp
   0D1A CDr1Br06      [17] 1811 	call	_TxByte
   0D1D 33            [ 6] 1812 	inc	sp
   0D1E 18 0E         [12] 1813 	jr	00113$
   0D20                    1814 00109$:
                           1815 ;..\CFG8266.c:496: else if (ucNagleOn)
   0D20 3Ar10r02      [13] 1816 	ld	a,(#_ucNagleOn + 0)
   0D23 B7            [ 4] 1817 	or	a, a
   0D24 28 08         [12] 1818 	jr	Z,00113$
                           1819 ;..\CFG8266.c:497: TxByte('D'); //Request nagle on for future connections
   0D26 3E 44         [ 7] 1820 	ld	a,#0x44
   0D28 F5            [11] 1821 	push	af
   0D29 33            [ 6] 1822 	inc	sp
   0D2A CDr1Br06      [17] 1823 	call	_TxByte
   0D2D 33            [ 6] 1824 	inc	sp
   0D2E                    1825 00113$:
                           1826 ;..\CFG8266.c:499: if (ucScan)
   0D2E 3Ar00r00      [13] 1827 	ld	a,(#_ucScan + 0)
   0D31 B7            [ 4] 1828 	or	a, a
   0D32 28 1B         [12] 1829 	jr	Z,00120$
                           1830 ;..\CFG8266.c:500: bResponse = WaitForRXData(scanResponse,2,4,true);
   0D34 3E 01         [ 7] 1831 	ld	a,#0x01
   0D36 F5            [11] 1832 	push	af
   0D37 33            [ 6] 1833 	inc	sp
   0D38 21 04 00      [10] 1834 	ld	hl,#0x0004
   0D3B E5            [11] 1835 	push	hl
   0D3C 2E 02         [ 7] 1836 	ld	l, #0x02
   0D3E E5            [11] 1837 	push	hl
   0D3F 21r95r01      [10] 1838 	ld	hl,#_scanResponse
   0D42 E5            [11] 1839 	push	hl
   0D43 CDrCBr07      [17] 1840 	call	_WaitForRXData
   0D46 F1            [10] 1841 	pop	af
   0D47 F1            [10] 1842 	pop	af
   0D48 F1            [10] 1843 	pop	af
   0D49 33            [ 6] 1844 	inc	sp
   0D4A DD 75 F0      [19] 1845 	ld	-16 (ix),l
   0D4D 18 40         [12] 1846 	jr	00121$
   0D4F                    1847 00120$:
                           1848 ;..\CFG8266.c:501: else if (ucNagleOff)
   0D4F 3Ar0Fr02      [13] 1849 	ld	a,(#_ucNagleOff + 0)
   0D52 B7            [ 4] 1850 	or	a, a
   0D53 28 1B         [12] 1851 	jr	Z,00117$
                           1852 ;..\CFG8266.c:502: bResponse = WaitForRXData(nagleoffResponse,2,4,true);
   0D55 3E 01         [ 7] 1853 	ld	a,#0x01
   0D57 F5            [11] 1854 	push	af
   0D58 33            [ 6] 1855 	inc	sp
   0D59 21 04 00      [10] 1856 	ld	hl,#0x0004
   0D5C E5            [11] 1857 	push	hl
   0D5D 2E 02         [ 7] 1858 	ld	l, #0x02
   0D5F E5            [11] 1859 	push	hl
   0D60 21r99r01      [10] 1860 	ld	hl,#_nagleoffResponse
   0D63 E5            [11] 1861 	push	hl
   0D64 CDrCBr07      [17] 1862 	call	_WaitForRXData
   0D67 F1            [10] 1863 	pop	af
   0D68 F1            [10] 1864 	pop	af
   0D69 F1            [10] 1865 	pop	af
   0D6A 33            [ 6] 1866 	inc	sp
   0D6B DD 75 F0      [19] 1867 	ld	-16 (ix),l
   0D6E 18 1F         [12] 1868 	jr	00121$
   0D70                    1869 00117$:
                           1870 ;..\CFG8266.c:503: else if (ucNagleOn)
   0D70 3Ar10r02      [13] 1871 	ld	a,(#_ucNagleOn + 0)
   0D73 B7            [ 4] 1872 	or	a, a
   0D74 28 19         [12] 1873 	jr	Z,00121$
                           1874 ;..\CFG8266.c:504: bResponse = WaitForRXData(nagleonResponse,2,4,true);
   0D76 3E 01         [ 7] 1875 	ld	a,#0x01
   0D78 F5            [11] 1876 	push	af
   0D79 33            [ 6] 1877 	inc	sp
   0D7A 21 04 00      [10] 1878 	ld	hl,#0x0004
   0D7D E5            [11] 1879 	push	hl
   0D7E 2E 02         [ 7] 1880 	ld	l, #0x02
   0D80 E5            [11] 1881 	push	hl
   0D81 21r97r01      [10] 1882 	ld	hl,#_nagleonResponse
   0D84 E5            [11] 1883 	push	hl
   0D85 CDrCBr07      [17] 1884 	call	_WaitForRXData
   0D88 F1            [10] 1885 	pop	af
   0D89 F1            [10] 1886 	pop	af
   0D8A F1            [10] 1887 	pop	af
   0D8B 33            [ 6] 1888 	inc	sp
   0D8C DD 75 F0      [19] 1889 	ld	-16 (ix),l
   0D8F                    1890 00121$:
                           1891 ;..\CFG8266.c:507: if ((bResponse)&&(ucScan))
   0D8F DD 7E F0      [19] 1892 	ld	a,-16 (ix)
   0D92 B7            [ 4] 1893 	or	a, a
   0D93 CArBDr10      [10] 1894 	jp	Z,00187$
   0D96 FD 21r00r00   [14] 1895 	ld	iy,#_ucScan
   0D9A FD 7E 00      [19] 1896 	ld	a,0 (iy)
   0D9D B7            [ 4] 1897 	or	a, a
   0D9E CArBDr10      [10] 1898 	jp	Z,00187$
                           1899 ;..\CFG8266.c:510: do
   0DA1 0E 0A         [ 7] 1900 	ld	c,#0x0a
   0DA3                    1901 00124$:
                           1902 ;..\CFG8266.c:512: --ucRetries;
   0DA3 0D            [ 4] 1903 	dec	c
                           1904 ;..\CFG8266.c:513: for (ucHalt = 60;ucHalt>0;--ucHalt)
   0DA4 06 3C         [ 7] 1905 	ld	b,#0x3c
   0DA6                    1906 00265$:
                           1907 ;..\CFG8266.c:514: Halt();
   0DA6 76            [ 4] 1908 	halt;	
                           1909 ;..\CFG8266.c:513: for (ucHalt = 60;ucHalt>0;--ucHalt)
   0DA7 58            [ 4] 1910 	ld	e,b
   0DA8 1D            [ 4] 1911 	dec	e
   0DA9 7B            [ 4] 1912 	ld	a,e
   0DAA 47            [ 4] 1913 	ld	b,a
   0DAB B7            [ 4] 1914 	or	a, a
   0DAC 20 F8         [12] 1915 	jr	NZ,00265$
                           1916 ;..\CFG8266.c:515: TxByte('s'); //Request SCAN result
   0DAE C5            [11] 1917 	push	bc
   0DAF 3E 73         [ 7] 1918 	ld	a,#0x73
   0DB1 F5            [11] 1919 	push	af
   0DB2 33            [ 6] 1920 	inc	sp
   0DB3 CDr1Br06      [17] 1921 	call	_TxByte
   0DB6 33            [ 6] 1922 	inc	sp
   0DB7 AF            [ 4] 1923 	xor	a, a
   0DB8 F5            [11] 1924 	push	af
   0DB9 33            [ 6] 1925 	inc	sp
   0DBA 21 0A 00      [10] 1926 	ld	hl,#0x000a
   0DBD E5            [11] 1927 	push	hl
   0DBE 2E 02         [ 7] 1928 	ld	l, #0x02
   0DC0 E5            [11] 1929 	push	hl
   0DC1 21r9Br01      [10] 1930 	ld	hl,#_scanresResponse
   0DC4 E5            [11] 1931 	push	hl
   0DC5 CDrCBr07      [17] 1932 	call	_WaitForRXData
   0DC8 F1            [10] 1933 	pop	af
   0DC9 F1            [10] 1934 	pop	af
   0DCA F1            [10] 1935 	pop	af
   0DCB 33            [ 6] 1936 	inc	sp
   0DCC C1            [10] 1937 	pop	bc
                           1938 ;..\CFG8266.c:518: while ((ucRetries)&&(!bResponse));
   0DCD 79            [ 4] 1939 	ld	a,c
   0DCE B7            [ 4] 1940 	or	a, a
   0DCF 28 04         [12] 1941 	jr	Z,00126$
   0DD1 7D            [ 4] 1942 	ld	a,l
   0DD2 B7            [ 4] 1943 	or	a, a
   0DD3 28 CE         [12] 1944 	jr	Z,00124$
   0DD5                    1945 00126$:
                           1946 ;..\CFG8266.c:520: if (bResponse)
   0DD5 7D            [ 4] 1947 	ld	a,l
   0DD6 B7            [ 4] 1948 	or	a, a
   0DD7 CArB2r10      [10] 1949 	jp	Z,00176$
                           1950 ;..\CFG8266.c:523: while(!UartRXData());
   0DDA                    1951 00127$:
   0DDA DB 07         [11] 1952 	in	a,(_myPort7)
   0DDC D6 01         [ 7] 1953 	sub	a,#0x01
   0DDE 3E 00         [ 7] 1954 	ld	a,#0x00
   0DE0 17            [ 4] 1955 	rla
   0DE1 CB 47         [ 8] 1956 	bit	0,a
   0DE3 20 F5         [12] 1957 	jr	NZ,00127$
                           1958 ;..\CFG8266.c:524: ucAPs = GetUARTData();
   0DE5 DB 06         [11] 1959 	in	a,(_myPort6)
   0DE7 DD 77 E0      [19] 1960 	ld	-32 (ix),a
                           1961 ;..\CFG8266.c:525: if (ucAPs>10)
   0DEA 3E 0A         [ 7] 1962 	ld	a,#0x0a
   0DEC DD 96 E0      [19] 1963 	sub	a, -32 (ix)
   0DEF 30 04         [12] 1964 	jr	NC,00131$
                           1965 ;..\CFG8266.c:526: ucAPs=10;
   0DF1 DD 36 E0 0A   [19] 1966 	ld	-32 (ix),#0x0a
   0DF5                    1967 00131$:
                           1968 ;..\CFG8266.c:528: Print ("\n");
   0DF5 21rE9r18      [10] 1969 	ld	hl,#___str_12
   0DF8 E5            [11] 1970 	push	hl
   0DF9 CDr00r00      [17] 1971 	call	_Print
   0DFC F1            [10] 1972 	pop	af
                           1973 ;..\CFG8266.c:529: do
   0DFD 21 39 00      [10] 1974 	ld	hl,#0x0039
   0E00 39            [11] 1975 	add	hl,sp
   0E01 DD 75 F8      [19] 1976 	ld	-8 (ix),l
   0E04 DD 74 F9      [19] 1977 	ld	-7 (ix),h
   0E07 DD 36 E3 00   [19] 1978 	ld	-29 (ix),#0x00
   0E0B DD 36 EC 00   [19] 1979 	ld	-20 (ix),#0x00
   0E0F DD 36 ED 00   [19] 1980 	ld	-19 (ix),#0x00
   0E13 DD 36 EA 00   [19] 1981 	ld	-22 (ix),#0x00
   0E17 DD 36 EB 00   [19] 1982 	ld	-21 (ix),#0x00
                           1983 ;..\CFG8266.c:534: while(!UartRXData());
   0E1B                    1984 00298$:
   0E1B DD 7E F8      [19] 1985 	ld	a,-8 (ix)
   0E1E DD 86 EC      [19] 1986 	add	a, -20 (ix)
   0E21 DD 77 E8      [19] 1987 	ld	-24 (ix),a
   0E24 DD 7E F9      [19] 1988 	ld	a,-7 (ix)
   0E27 DD 8E ED      [19] 1989 	adc	a, -19 (ix)
   0E2A DD 77 E9      [19] 1990 	ld	-23 (ix),a
   0E2D DD 36 DF 00   [19] 1991 	ld	-33 (ix),#0x00
   0E31                    1992 00132$:
   0E31 DB 07         [11] 1993 	in	a,(_myPort7)
   0E33 D6 01         [ 7] 1994 	sub	a,#0x01
   0E35 3E 00         [ 7] 1995 	ld	a,#0x00
   0E37 17            [ 4] 1996 	rla
   0E38 CB 47         [ 8] 1997 	bit	0,a
   0E3A 20 F5         [12] 1998 	jr	NZ,00132$
                           1999 ;..\CFG8266.c:535: rx_data=GetUARTData();
   0E3C DB 06         [11] 2000 	in	a,(_myPort6)
   0E3E DD 77 E7      [19] 2001 	ld	-25 (ix),a
                           2002 ;..\CFG8266.c:536: stAP[tx_data].APName[ucIndex++]=rx_data;
   0E41 DD 7E DF      [19] 2003 	ld	a,-33 (ix)
   0E44 DD 77 E6      [19] 2004 	ld	-26 (ix),a
   0E47 DD 34 DF      [23] 2005 	inc	-33 (ix)
   0E4A DD 7E E8      [19] 2006 	ld	a,-24 (ix)
   0E4D DD 86 E6      [19] 2007 	add	a, -26 (ix)
   0E50 DD 77 E4      [19] 2008 	ld	-28 (ix),a
   0E53 DD 7E E9      [19] 2009 	ld	a,-23 (ix)
   0E56 CE 00         [ 7] 2010 	adc	a, #0x00
   0E58 DD 77 E5      [19] 2011 	ld	-27 (ix),a
   0E5B DD 6E E4      [19] 2012 	ld	l,-28 (ix)
   0E5E DD 66 E5      [19] 2013 	ld	h,-27 (ix)
   0E61 DD 7E E7      [19] 2014 	ld	a,-25 (ix)
   0E64 77            [ 7] 2015 	ld	(hl),a
                           2016 ;..\CFG8266.c:538: while(rx_data!=0);
   0E65 DD 7E E7      [19] 2017 	ld	a,-25 (ix)
   0E68 B7            [ 4] 2018 	or	a, a
   0E69 20 C6         [12] 2019 	jr	NZ,00132$
                           2020 ;..\CFG8266.c:539: while(!UartRXData());
   0E6B                    2021 00138$:
   0E6B DB 07         [11] 2022 	in	a,(_myPort7)
   0E6D D6 01         [ 7] 2023 	sub	a,#0x01
   0E6F 3E 00         [ 7] 2024 	ld	a,#0x00
   0E71 17            [ 4] 2025 	rla
   0E72 CB 47         [ 8] 2026 	bit	0,a
   0E74 20 F5         [12] 2027 	jr	NZ,00138$
                           2028 ;..\CFG8266.c:540: rx_data=GetUARTData();
   0E76 DB 06         [11] 2029 	in	a,(_myPort6)
   0E78 4F            [ 4] 2030 	ld	c,a
                           2031 ;..\CFG8266.c:541: stAP[tx_data].isEncrypted = (rx_data == 'E') ? 1 : 0;
   0E79 DD 7E F8      [19] 2032 	ld	a,-8 (ix)
   0E7C DD 86 EA      [19] 2033 	add	a, -22 (ix)
   0E7F 5F            [ 4] 2034 	ld	e,a
   0E80 DD 7E F9      [19] 2035 	ld	a,-7 (ix)
   0E83 DD 8E EB      [19] 2036 	adc	a, -21 (ix)
   0E86 57            [ 4] 2037 	ld	d,a
   0E87 21 21 00      [10] 2038 	ld	hl,#0x0021
   0E8A 19            [11] 2039 	add	hl,de
   0E8B DD 75 E4      [19] 2040 	ld	-28 (ix),l
   0E8E DD 74 E5      [19] 2041 	ld	-27 (ix),h
   0E91 79            [ 4] 2042 	ld	a,c
   0E92 D6 45         [ 7] 2043 	sub	a, #0x45
   0E94 20 04         [12] 2044 	jr	NZ,00276$
   0E96 0E 01         [ 7] 2045 	ld	c,#0x01
   0E98 18 02         [12] 2046 	jr	00277$
   0E9A                    2047 00276$:
   0E9A 0E 00         [ 7] 2048 	ld	c,#0x00
   0E9C                    2049 00277$:
   0E9C DD 6E E4      [19] 2050 	ld	l,-28 (ix)
   0E9F DD 66 E5      [19] 2051 	ld	h,-27 (ix)
   0EA2 71            [ 7] 2052 	ld	(hl),c
                           2053 ;..\CFG8266.c:542: ++tx_data;
   0EA3 DD 7E EC      [19] 2054 	ld	a,-20 (ix)
   0EA6 C6 22         [ 7] 2055 	add	a, #0x22
   0EA8 DD 77 EC      [19] 2056 	ld	-20 (ix),a
   0EAB DD 7E ED      [19] 2057 	ld	a,-19 (ix)
   0EAE CE 00         [ 7] 2058 	adc	a, #0x00
   0EB0 DD 77 ED      [19] 2059 	ld	-19 (ix),a
   0EB3 DD 7E EA      [19] 2060 	ld	a,-22 (ix)
   0EB6 C6 22         [ 7] 2061 	add	a, #0x22
   0EB8 DD 77 EA      [19] 2062 	ld	-22 (ix),a
   0EBB DD 7E EB      [19] 2063 	ld	a,-21 (ix)
   0EBE CE 00         [ 7] 2064 	adc	a, #0x00
   0EC0 DD 77 EB      [19] 2065 	ld	-21 (ix),a
   0EC3 DD 34 E3      [23] 2066 	inc	-29 (ix)
                           2067 ;..\CFG8266.c:544: while (tx_data!=ucAPs);
   0EC6 DD 7E E3      [19] 2068 	ld	a,-29 (ix)
   0EC9 DD 96 E0      [19] 2069 	sub	a, -32 (ix)
   0ECC C2r1Br0E      [10] 2070 	jp	NZ,00298$
                           2071 ;..\CFG8266.c:545: ClearUartData();
   0ECF 3E 14         [ 7] 2072 	ld	a,#0x14
   0ED1 D3 06         [11] 2073 	out	(_myPort6),a
                           2074 ;..\CFG8266.c:546: Print("Choose AP:\n\n");
   0ED3 21rEBr18      [10] 2075 	ld	hl,#___str_13
   0ED6 E5            [11] 2076 	push	hl
   0ED7 CDr00r00      [17] 2077 	call	_Print
   0EDA F1            [10] 2078 	pop	af
                           2079 ;..\CFG8266.c:547: for (ucIndex=0;ucIndex<ucAPs;ucIndex++)
   0EDB DD 36 DF 00   [19] 2080 	ld	-33 (ix),#0x00
   0EDF DD 36 E4 00   [19] 2081 	ld	-28 (ix),#0x00
   0EE3 DD 36 E5 00   [19] 2082 	ld	-27 (ix),#0x00
   0EE7                    2083 00268$:
   0EE7 DD 7E DF      [19] 2084 	ld	a,-33 (ix)
   0EEA DD 96 E0      [19] 2085 	sub	a, -32 (ix)
   0EED 30 51         [12] 2086 	jr	NC,00147$
                           2087 ;..\CFG8266.c:549: printf("%u - %s",ucIndex,stAP[ucIndex].APName);
   0EEF DD 7E F8      [19] 2088 	ld	a,-8 (ix)
   0EF2 DD 86 E4      [19] 2089 	add	a, -28 (ix)
   0EF5 4F            [ 4] 2090 	ld	c,a
   0EF6 DD 7E F9      [19] 2091 	ld	a,-7 (ix)
   0EF9 DD 8E E5      [19] 2092 	adc	a, -27 (ix)
   0EFC 47            [ 4] 2093 	ld	b,a
   0EFD 69            [ 4] 2094 	ld	l, c
   0EFE 60            [ 4] 2095 	ld	h, b
   0EFF DD 5E DF      [19] 2096 	ld	e,-33 (ix)
   0F02 16 00         [ 7] 2097 	ld	d,#0x00
   0F04 C5            [11] 2098 	push	bc
   0F05 E5            [11] 2099 	push	hl
   0F06 D5            [11] 2100 	push	de
   0F07 21rF8r18      [10] 2101 	ld	hl,#___str_14
   0F0A E5            [11] 2102 	push	hl
   0F0B CDr00r00      [17] 2103 	call	_printf
   0F0E F1            [10] 2104 	pop	af
   0F0F F1            [10] 2105 	pop	af
   0F10 F1            [10] 2106 	pop	af
   0F11 FD E1         [14] 2107 	pop	iy
   0F13 FD 7E 21      [19] 2108 	ld	a,33 (iy)
   0F16 B7            [ 4] 2109 	or	a, a
   0F17 28 0A         [12] 2110 	jr	Z,00145$
                           2111 ;..\CFG8266.c:551: printf(" (PWD)\r\n");
   0F19 21r00r19      [10] 2112 	ld	hl,#___str_15
   0F1C E5            [11] 2113 	push	hl
   0F1D CDr00r00      [17] 2114 	call	_printf
   0F20 F1            [10] 2115 	pop	af
   0F21 18 08         [12] 2116 	jr	00269$
   0F23                    2117 00145$:
                           2118 ;..\CFG8266.c:553: printf(" (OPEN)\r\n");
   0F23 21r09r19      [10] 2119 	ld	hl,#___str_16
   0F26 E5            [11] 2120 	push	hl
   0F27 CDr00r00      [17] 2121 	call	_printf
   0F2A F1            [10] 2122 	pop	af
   0F2B                    2123 00269$:
                           2124 ;..\CFG8266.c:547: for (ucIndex=0;ucIndex<ucAPs;ucIndex++)
   0F2B DD 7E E4      [19] 2125 	ld	a,-28 (ix)
   0F2E C6 22         [ 7] 2126 	add	a, #0x22
   0F30 DD 77 E4      [19] 2127 	ld	-28 (ix),a
   0F33 DD 7E E5      [19] 2128 	ld	a,-27 (ix)
   0F36 CE 00         [ 7] 2129 	adc	a, #0x00
   0F38 DD 77 E5      [19] 2130 	ld	-27 (ix),a
   0F3B DD 34 DF      [23] 2131 	inc	-33 (ix)
   0F3E 18 A7         [12] 2132 	jr	00268$
   0F40                    2133 00147$:
                           2134 ;..\CFG8266.c:555: Print("\nWhich one to connect? (ESC exit)");
   0F40 21r13r19      [10] 2135 	ld	hl,#___str_17
   0F43 E5            [11] 2136 	push	hl
   0F44 CDr00r00      [17] 2137 	call	_Print
   0F47 F1            [10] 2138 	pop	af
                           2139 ;..\CFG8266.c:556: tx_data = 0;
   0F48 2E 00         [ 7] 2140 	ld	l,#0x00
                           2141 ;..\CFG8266.c:557: do
   0F4A                    2142 00153$:
                           2143 ;..\CFG8266.c:559: if (KeyboardHit())
   0F4A E5            [11] 2144 	push	hl
   0F4B CDr00r00      [17] 2145 	call	_KeyboardHit
   0F4E 7D            [ 4] 2146 	ld	a,l
   0F4F E1            [10] 2147 	pop	hl
   0F50 B7            [ 4] 2148 	or	a, a
   0F51 28 03         [12] 2149 	jr	Z,00149$
                           2150 ;..\CFG8266.c:561: tx_data = InputChar ();
   0F53 CDr00r00      [17] 2151 	call	_InputChar
   0F56                    2152 00149$:
                           2153 ;..\CFG8266.c:563: if (tx_data==0x1b)
   0F56 7D            [ 4] 2154 	ld	a,l
   0F57 D6 1B         [ 7] 2155 	sub	a, #0x1b
   0F59 20 04         [12] 2156 	jr	NZ,00581$
   0F5B 3E 01         [ 7] 2157 	ld	a,#0x01
   0F5D 18 01         [12] 2158 	jr	00582$
   0F5F                    2159 00581$:
   0F5F AF            [ 4] 2160 	xor	a,a
   0F60                    2161 00582$:
   0F60 4F            [ 4] 2162 	ld	c,a
   0F61 B7            [ 4] 2163 	or	a, a
   0F62 20 0A         [12] 2164 	jr	NZ,00155$
                           2165 ;..\CFG8266.c:566: while ((tx_data<'0')||(tx_data>'9'));
   0F64 7D            [ 4] 2166 	ld	a,l
   0F65 D6 30         [ 7] 2167 	sub	a, #0x30
   0F67 38 E1         [12] 2168 	jr	C,00153$
   0F69 3E 39         [ 7] 2169 	ld	a,#0x39
   0F6B 95            [ 4] 2170 	sub	a, l
   0F6C 38 DC         [12] 2171 	jr	C,00153$
   0F6E                    2172 00155$:
                           2173 ;..\CFG8266.c:567: if (tx_data!=0x1b)
   0F6E 79            [ 4] 2174 	ld	a,c
   0F6F B7            [ 4] 2175 	or	a, a
   0F70 C2rA7r10      [10] 2176 	jp	NZ,00173$
                           2177 ;..\CFG8266.c:569: ucIndex = tx_data-'0';
   0F73 7D            [ 4] 2178 	ld	a,l
   0F74 C6 D0         [ 7] 2179 	add	a,#0xd0
                           2180 ;..\CFG8266.c:570: if (stAP[ucIndex].isEncrypted)
   0F76 4F            [ 4] 2181 	ld	c,a
   0F77 06 00         [ 7] 2182 	ld	b,#0x00
   0F79 69            [ 4] 2183 	ld	l, c
   0F7A 60            [ 4] 2184 	ld	h, b
   0F7B 29            [11] 2185 	add	hl, hl
   0F7C 29            [11] 2186 	add	hl, hl
   0F7D 29            [11] 2187 	add	hl, hl
   0F7E 29            [11] 2188 	add	hl, hl
   0F7F 09            [11] 2189 	add	hl, bc
   0F80 29            [11] 2190 	add	hl, hl
   0F81 DD 75 E4      [19] 2191 	ld	-28 (ix),l
   0F84 DD 74 E5      [19] 2192 	ld	-27 (ix),h
   0F87 DD 7E F8      [19] 2193 	ld	a,-8 (ix)
   0F8A DD 86 E4      [19] 2194 	add	a, -28 (ix)
   0F8D 4F            [ 4] 2195 	ld	c,a
   0F8E DD 7E F9      [19] 2196 	ld	a,-7 (ix)
   0F91 DD 8E E5      [19] 2197 	adc	a, -27 (ix)
   0F94 47            [ 4] 2198 	ld	b,a
   0F95 21 21 00      [10] 2199 	ld	hl,#0x0021
   0F98 09            [11] 2200 	add	hl,bc
   0F99 EB            [ 4] 2201 	ex	de,hl
   0F9A 1A            [ 7] 2202 	ld	a,(de)
   0F9B B7            [ 4] 2203 	or	a, a
   0F9C 28 28         [12] 2204 	jr	Z,00157$
                           2205 ;..\CFG8266.c:573: Print("\nPassword? ");
   0F9E C5            [11] 2206 	push	bc
   0F9F D5            [11] 2207 	push	de
   0FA0 21r35r19      [10] 2208 	ld	hl,#___str_18
   0FA3 E5            [11] 2209 	push	hl
   0FA4 CDr00r00      [17] 2210 	call	_Print
   0FA7 F1            [10] 2211 	pop	af
   0FA8 D1            [10] 2212 	pop	de
   0FA9 C1            [10] 2213 	pop	bc
                           2214 ;..\CFG8266.c:574: InputString(ucPWD,64);
   0FAA FD 21 8D 01   [14] 2215 	ld	iy,#0x018d
   0FAE FD 39         [15] 2216 	add	iy,sp
   0FB0 C5            [11] 2217 	push	bc
   0FB1 D5            [11] 2218 	push	de
   0FB2 21 40 00      [10] 2219 	ld	hl,#0x0040
   0FB5 E5            [11] 2220 	push	hl
   0FB6 FD E5         [15] 2221 	push	iy
   0FB8 CDr00r00      [17] 2222 	call	_InputString
   0FBB F1            [10] 2223 	pop	af
   0FBC 21rE9r18      [10] 2224 	ld	hl, #___str_12
   0FBF E3            [19] 2225 	ex	(sp),hl
   0FC0 CDr00r00      [17] 2226 	call	_Print
   0FC3 F1            [10] 2227 	pop	af
   0FC4 D1            [10] 2228 	pop	de
   0FC5 C1            [10] 2229 	pop	bc
   0FC6                    2230 00157$:
                           2231 ;..\CFG8266.c:577: uiCMDLen = strlen(stAP[ucIndex].APName) + 1;
   0FC6 C5            [11] 2232 	push	bc
   0FC7 CDr00r00      [17] 2233 	call	_strlen
   0FCA F1            [10] 2234 	pop	af
   0FCB 23            [ 6] 2235 	inc	hl
   0FCC 45            [ 4] 2236 	ld	b,l
   0FCD 4C            [ 4] 2237 	ld	c,h
                           2238 ;..\CFG8266.c:578: if (stAP[ucIndex].isEncrypted)
   0FCE 1A            [ 7] 2239 	ld	a,(de)
   0FCF B7            [ 4] 2240 	or	a, a
   0FD0 28 11         [12] 2241 	jr	Z,00159$
                           2242 ;..\CFG8266.c:579: uiCMDLen += strlen(ucPWD);
   0FD2 21 8D 01      [10] 2243 	ld	hl,#0x018d
   0FD5 39            [11] 2244 	add	hl,sp
   0FD6 C5            [11] 2245 	push	bc
   0FD7 E5            [11] 2246 	push	hl
   0FD8 CDr00r00      [17] 2247 	call	_strlen
   0FDB F1            [10] 2248 	pop	af
   0FDC C1            [10] 2249 	pop	bc
   0FDD 78            [ 4] 2250 	ld	a,b
   0FDE 85            [ 4] 2251 	add	a, l
   0FDF 47            [ 4] 2252 	ld	b,a
   0FE0 79            [ 4] 2253 	ld	a,c
   0FE1 8C            [ 4] 2254 	adc	a, h
   0FE2 4F            [ 4] 2255 	ld	c,a
   0FE3                    2256 00159$:
                           2257 ;..\CFG8266.c:580: TxByte('A'); //Request connect AP
   0FE3 C5            [11] 2258 	push	bc
   0FE4 3E 41         [ 7] 2259 	ld	a,#0x41
   0FE6 F5            [11] 2260 	push	af
   0FE7 33            [ 6] 2261 	inc	sp
   0FE8 CDr1Br06      [17] 2262 	call	_TxByte
   0FEB 33            [ 6] 2263 	inc	sp
   0FEC C1            [10] 2264 	pop	bc
                           2265 ;..\CFG8266.c:581: TxByte((unsigned char)((uiCMDLen&0xff00)>>8));
   0FED 51            [ 4] 2266 	ld	d,c
   0FEE 1E 00         [ 7] 2267 	ld	e,#0x00
   0FF0 C5            [11] 2268 	push	bc
   0FF1 D5            [11] 2269 	push	de
   0FF2 33            [ 6] 2270 	inc	sp
   0FF3 CDr1Br06      [17] 2271 	call	_TxByte
   0FF6 33            [ 6] 2272 	inc	sp
   0FF7 C1            [10] 2273 	pop	bc
                           2274 ;..\CFG8266.c:582: TxByte((unsigned char)(uiCMDLen&0xff));
   0FF8 50            [ 4] 2275 	ld	d,b
   0FF9 1E 00         [ 7] 2276 	ld	e,#0x00
   0FFB C5            [11] 2277 	push	bc
   0FFC D5            [11] 2278 	push	de
   0FFD 33            [ 6] 2279 	inc	sp
   0FFE CDr1Br06      [17] 2280 	call	_TxByte
   1001 33            [ 6] 2281 	inc	sp
   1002 C1            [10] 2282 	pop	bc
                           2283 ;..\CFG8266.c:584: do
   1003 DD 7E F8      [19] 2284 	ld	a,-8 (ix)
   1006 DD 86 E4      [19] 2285 	add	a, -28 (ix)
   1009 DD 77 E4      [19] 2286 	ld	-28 (ix),a
   100C DD 7E F9      [19] 2287 	ld	a,-7 (ix)
   100F DD 8E E5      [19] 2288 	adc	a, -27 (ix)
   1012 DD 77 E5      [19] 2289 	ld	-27 (ix),a
   1015 DD 36 E2 00   [19] 2290 	ld	-30 (ix),#0x00
   1019                    2291 00161$:
                           2292 ;..\CFG8266.c:586: tx_data = stAP[ucIndex].APName[rx_data];
   1019 DD 7E E4      [19] 2293 	ld	a,-28 (ix)
   101C DD 86 E2      [19] 2294 	add	a, -30 (ix)
   101F 5F            [ 4] 2295 	ld	e,a
   1020 DD 7E E5      [19] 2296 	ld	a,-27 (ix)
   1023 CE 00         [ 7] 2297 	adc	a, #0x00
   1025 57            [ 4] 2298 	ld	d,a
   1026 1A            [ 7] 2299 	ld	a,(de)
   1027 57            [ 4] 2300 	ld	d,a
                           2301 ;..\CFG8266.c:587: TxByte(tx_data);
   1028 C5            [11] 2302 	push	bc
   1029 D5            [11] 2303 	push	de
   102A D5            [11] 2304 	push	de
   102B 33            [ 6] 2305 	inc	sp
   102C CDr1Br06      [17] 2306 	call	_TxByte
   102F 33            [ 6] 2307 	inc	sp
   1030 D1            [10] 2308 	pop	de
   1031 C1            [10] 2309 	pop	bc
                           2310 ;..\CFG8266.c:588: --uiCMDLen;
   1032 68            [ 4] 2311 	ld	l, b
   1033 61            [ 4] 2312 	ld	h, c
   1034 2B            [ 6] 2313 	dec	hl
   1035 45            [ 4] 2314 	ld	b,l
   1036 4C            [ 4] 2315 	ld	c,h
                           2316 ;..\CFG8266.c:589: ++rx_data;
   1037 DD 34 E2      [23] 2317 	inc	-30 (ix)
                           2318 ;..\CFG8266.c:591: while((uiCMDLen)&&(tx_data!=0));
   103A 79            [ 4] 2319 	ld	a,c
   103B B0            [ 4] 2320 	or	a,b
   103C 28 04         [12] 2321 	jr	Z,00163$
   103E 7A            [ 4] 2322 	ld	a,d
   103F B7            [ 4] 2323 	or	a, a
   1040 20 D7         [12] 2324 	jr	NZ,00161$
   1042                    2325 00163$:
                           2326 ;..\CFG8266.c:592: if(uiCMDLen)
   1042 79            [ 4] 2327 	ld	a,c
   1043 B0            [ 4] 2328 	or	a,b
   1044 28 30         [12] 2329 	jr	Z,00168$
                           2330 ;..\CFG8266.c:595: do
   1046 21 8D 01      [10] 2331 	ld	hl,#0x018d
   1049 39            [11] 2332 	add	hl,sp
   104A DD 75 E4      [19] 2333 	ld	-28 (ix),l
   104D DD 74 E5      [19] 2334 	ld	-27 (ix),h
   1050 79            [ 4] 2335 	ld	a, c
   1051 48            [ 4] 2336 	ld	c,b
   1052 47            [ 4] 2337 	ld	b,a
   1053 DD 36 E2 00   [19] 2338 	ld	-30 (ix),#0x00
   1057                    2339 00164$:
                           2340 ;..\CFG8266.c:597: tx_data = ucPWD[rx_data];
   1057 DD 7E E4      [19] 2341 	ld	a,-28 (ix)
   105A DD 86 E2      [19] 2342 	add	a, -30 (ix)
   105D 5F            [ 4] 2343 	ld	e,a
   105E DD 7E E5      [19] 2344 	ld	a,-27 (ix)
   1061 CE 00         [ 7] 2345 	adc	a, #0x00
   1063 57            [ 4] 2346 	ld	d,a
   1064 1A            [ 7] 2347 	ld	a,(de)
   1065 57            [ 4] 2348 	ld	d,a
                           2349 ;..\CFG8266.c:598: TxByte(tx_data);
   1066 C5            [11] 2350 	push	bc
   1067 D5            [11] 2351 	push	de
   1068 33            [ 6] 2352 	inc	sp
   1069 CDr1Br06      [17] 2353 	call	_TxByte
   106C 33            [ 6] 2354 	inc	sp
   106D C1            [10] 2355 	pop	bc
                           2356 ;..\CFG8266.c:599: --uiCMDLen;
   106E 0B            [ 6] 2357 	dec	bc
                           2358 ;..\CFG8266.c:600: ++rx_data;
   106F DD 34 E2      [23] 2359 	inc	-30 (ix)
                           2360 ;..\CFG8266.c:602: while(uiCMDLen);
   1072 78            [ 4] 2361 	ld	a,b
   1073 B1            [ 4] 2362 	or	a,c
   1074 20 E1         [12] 2363 	jr	NZ,00164$
   1076                    2364 00168$:
                           2365 ;..\CFG8266.c:606: bResponse = WaitForRXData(apconfigurationResponse,2,300,true); //Wait up to 5s
   1076 3E 01         [ 7] 2366 	ld	a,#0x01
   1078 F5            [11] 2367 	push	af
   1079 33            [ 6] 2368 	inc	sp
   107A 21 2C 01      [10] 2369 	ld	hl,#0x012c
   107D E5            [11] 2370 	push	hl
   107E 21 02 00      [10] 2371 	ld	hl,#0x0002
   1081 E5            [11] 2372 	push	hl
   1082 21r9Dr01      [10] 2373 	ld	hl,#_apconfigurationResponse
   1085 E5            [11] 2374 	push	hl
   1086 CDrCBr07      [17] 2375 	call	_WaitForRXData
   1089 F1            [10] 2376 	pop	af
   108A F1            [10] 2377 	pop	af
   108B F1            [10] 2378 	pop	af
   108C 33            [ 6] 2379 	inc	sp
                           2380 ;..\CFG8266.c:607: if (bResponse)
   108D 7D            [ 4] 2381 	ld	a,l
   108E B7            [ 4] 2382 	or	a, a
   108F 28 0B         [12] 2383 	jr	Z,00170$
                           2384 ;..\CFG8266.c:608: Print ("Success, AP configured to be used.\n");
   1091 21r41r19      [10] 2385 	ld	hl,#___str_19
   1094 E5            [11] 2386 	push	hl
   1095 CDr00r00      [17] 2387 	call	_Print
   1098 F1            [10] 2388 	pop	af
   1099 C3r65r18      [10] 2389 	jp	00264$
   109C                    2390 00170$:
                           2391 ;..\CFG8266.c:610: Print ("Error, AP not configured!\n");
   109C 21r65r19      [10] 2392 	ld	hl,#___str_20
   109F E5            [11] 2393 	push	hl
   10A0 CDr00r00      [17] 2394 	call	_Print
   10A3 F1            [10] 2395 	pop	af
   10A4 C3r65r18      [10] 2396 	jp	00264$
   10A7                    2397 00173$:
                           2398 ;..\CFG8266.c:613: Print("User canceled by ESC key...\n");
   10A7 21r80r19      [10] 2399 	ld	hl,#___str_21
   10AA E5            [11] 2400 	push	hl
   10AB CDr00r00      [17] 2401 	call	_Print
   10AE F1            [10] 2402 	pop	af
   10AF C3r65r18      [10] 2403 	jp	00264$
   10B2                    2404 00176$:
                           2405 ;..\CFG8266.c:616: Print ("Scan results: no answer...\n");
   10B2 21r9Dr19      [10] 2406 	ld	hl,#___str_22
   10B5 E5            [11] 2407 	push	hl
   10B6 CDr00r00      [17] 2408 	call	_Print
   10B9 F1            [10] 2409 	pop	af
   10BA C3r65r18      [10] 2410 	jp	00264$
   10BD                    2411 00187$:
                           2412 ;..\CFG8266.c:620: if (ucScan)
   10BD 3Ar00r00      [13] 2413 	ld	a,(#_ucScan + 0)
   10C0 B7            [ 4] 2414 	or	a, a
   10C1 28 0B         [12] 2415 	jr	Z,00184$
                           2416 ;..\CFG8266.c:621: Print ("Scan request: no answer...\n");
   10C3 21rB9r19      [10] 2417 	ld	hl,#___str_23
   10C6 E5            [11] 2418 	push	hl
   10C7 CDr00r00      [17] 2419 	call	_Print
   10CA F1            [10] 2420 	pop	af
   10CB C3r65r18      [10] 2421 	jp	00264$
   10CE                    2422 00184$:
                           2423 ;..\CFG8266.c:622: else if (((ucNagleOff)||(ucNagleOn))&&(bResponse))
   10CE 3Ar0Fr02      [13] 2424 	ld	a,(#_ucNagleOff + 0)
   10D1 B7            [ 4] 2425 	or	a, a
   10D2 20 06         [12] 2426 	jr	NZ,00182$
   10D4 3Ar10r02      [13] 2427 	ld	a,(#_ucNagleOn + 0)
   10D7 B7            [ 4] 2428 	or	a, a
   10D8 28 14         [12] 2429 	jr	Z,00179$
   10DA                    2430 00182$:
   10DA DD 7E F0      [19] 2431 	ld	a,-16 (ix)
   10DD B7            [ 4] 2432 	or	a, a
   10DE 28 0E         [12] 2433 	jr	Z,00179$
                           2434 ;..\CFG8266.c:624: Print ("Nagle set as requested...\n");
   10E0 21rD5r19      [10] 2435 	ld	hl,#___str_24
   10E3 E5            [11] 2436 	push	hl
   10E4 CDr00r00      [17] 2437 	call	_Print
   10E7 F1            [10] 2438 	pop	af
                           2439 ;..\CFG8266.c:625: return 0;
   10E8 21 00 00      [10] 2440 	ld	hl,#0x0000
   10EB C3r68r18      [10] 2441 	jp	00272$
   10EE                    2442 00179$:
                           2443 ;..\CFG8266.c:629: Print ("Nagle not set as requested, error!\n");
   10EE 21rF0r19      [10] 2444 	ld	hl,#___str_25
   10F1 E5            [11] 2445 	push	hl
   10F2 CDr00r00      [17] 2446 	call	_Print
   10F5 F1            [10] 2447 	pop	af
                           2448 ;..\CFG8266.c:630: return 0;
   10F6 21 00 00      [10] 2449 	ld	hl,#0x0000
   10F9 C3r68r18      [10] 2450 	jp	00272$
   10FC                    2451 00255$:
                           2452 ;..\CFG8266.c:634: else if (ucLocalUpdate)
   10FC 3Ar0Dr02      [13] 2453 	ld	a,(#_ucLocalUpdate + 0)
   10FF B7            [ 4] 2454 	or	a, a
   1100 CAr13r17      [10] 2455 	jp	Z,00252$
                           2456 ;..\CFG8266.c:637: iFile = Open (ucFile,O_RDONLY);
   1103 21 00 00      [10] 2457 	ld	hl,#0x0000
   1106 E5            [11] 2458 	push	hl
   1107 21r01r01      [10] 2459 	ld	hl,#_ucFile
   110A E5            [11] 2460 	push	hl
   110B CDr00r00      [17] 2461 	call	_Open
   110E F1            [10] 2462 	pop	af
   110F F1            [10] 2463 	pop	af
   1110 DD 75 E4      [19] 2464 	ld	-28 (ix),l
   1113 DD 74 E5      [19] 2465 	ld	-27 (ix),h
                           2466 ;..\CFG8266.c:639: if (iFile!=-1)
   1116 DD 7E E4      [19] 2467 	ld	a,-28 (ix)
   1119 3C            [ 4] 2468 	inc	a
   111A 20 07         [12] 2469 	jr	NZ,00583$
   111C DD 7E E5      [19] 2470 	ld	a,-27 (ix)
   111F 3C            [ 4] 2471 	inc	a
   1120 CAr00r17      [10] 2472 	jp	Z,00225$
   1123                    2473 00583$:
                           2474 ;..\CFG8266.c:646: regs.Words.HL = 0; //set pointer as 0
   1123 21 25 00      [10] 2475 	ld	hl,#0x0025
   1126 39            [11] 2476 	add	hl,sp
   1127 4D            [ 4] 2477 	ld	c,l
   1128 44            [ 4] 2478 	ld	b,h
   1129 21 06 00      [10] 2479 	ld	hl,#0x0006
   112C 09            [11] 2480 	add	hl,bc
   112D AF            [ 4] 2481 	xor	a, a
   112E 77            [ 7] 2482 	ld	(hl), a
   112F 23            [ 6] 2483 	inc	hl
   1130 77            [ 7] 2484 	ld	(hl), a
                           2485 ;..\CFG8266.c:647: regs.Words.DE = 0; //so it will return the position
   1131 21 04 00      [10] 2486 	ld	hl,#0x0004
   1134 09            [11] 2487 	add	hl,bc
   1135 AF            [ 4] 2488 	xor	a, a
   1136 77            [ 7] 2489 	ld	(hl), a
   1137 23            [ 6] 2490 	inc	hl
   1138 77            [ 7] 2491 	ld	(hl), a
                           2492 ;..\CFG8266.c:648: regs.Bytes.A = 2; //relative to the end of file, i.e.:file size
   1139 21 25 00      [10] 2493 	ld	hl,#0x0025
   113C 39            [11] 2494 	add	hl,sp
   113D 4D            [ 4] 2495 	ld	c,l
   113E 44            [ 4] 2496 	ld	b,h
   113F 23            [ 6] 2497 	inc	hl
   1140 36 02         [10] 2498 	ld	(hl),#0x02
                           2499 ;..\CFG8266.c:649: regs.Bytes.B = (unsigned char)(iFile&0xff);
   1142 03            [ 6] 2500 	inc	bc
   1143 03            [ 6] 2501 	inc	bc
   1144 03            [ 6] 2502 	inc	bc
   1145 DD 7E E4      [19] 2503 	ld	a, -28 (ix)
   1148 02            [ 7] 2504 	ld	(bc),a
                           2505 ;..\CFG8266.c:650: DosCall(0x4A, &regs, REGS_ALL, REGS_ALL); // MOVE FILE HANDLER
   1149 21 25 00      [10] 2506 	ld	hl,#0x0025
   114C 39            [11] 2507 	add	hl,sp
   114D DD 75 E8      [19] 2508 	ld	-24 (ix),l
   1150 DD 74 E9      [19] 2509 	ld	-23 (ix),h
   1153 4D            [ 4] 2510 	ld	c,l
   1154 44            [ 4] 2511 	ld	b,h
   1155 21 03 03      [10] 2512 	ld	hl,#0x0303
   1158 E5            [11] 2513 	push	hl
   1159 C5            [11] 2514 	push	bc
   115A 3E 4A         [ 7] 2515 	ld	a,#0x4a
   115C F5            [11] 2516 	push	af
   115D 33            [ 6] 2517 	inc	sp
   115E CDr00r00      [17] 2518 	call	_DosCall
   1161 F1            [10] 2519 	pop	af
   1162 F1            [10] 2520 	pop	af
   1163 33            [ 6] 2521 	inc	sp
                           2522 ;..\CFG8266.c:651: if (regs.Bytes.A == 0) //moved, now get the file handler position, i.e.: size
   1164 DD 6E E8      [19] 2523 	ld	l,-24 (ix)
   1167 DD 66 E9      [19] 2524 	ld	h,-23 (ix)
   116A 23            [ 6] 2525 	inc	hl
   116B 7E            [ 7] 2526 	ld	a,(hl)
   116C DD 77 E6      [19] 2527 	ld	-26 (ix), a
   116F B7            [ 4] 2528 	or	a, a
   1170 C2r29r12      [10] 2529 	jp	NZ,00191$
                           2530 ;..\CFG8266.c:652: SentFileSize = (unsigned long)(regs.Words.HL)&0xffff | ((unsigned long)(regs.Words.DE)<<16)&0xffff0000;
   1173 DD 7E E8      [19] 2531 	ld	a,-24 (ix)
   1176 DD 77 EA      [19] 2532 	ld	-22 (ix),a
   1179 DD 7E E9      [19] 2533 	ld	a,-23 (ix)
   117C DD 77 EB      [19] 2534 	ld	-21 (ix),a
   117F DD 6E EA      [19] 2535 	ld	l,-22 (ix)
   1182 DD 66 EB      [19] 2536 	ld	h,-21 (ix)
   1185 11 06 00      [10] 2537 	ld	de, #0x0006
   1188 19            [11] 2538 	add	hl, de
   1189 7E            [ 7] 2539 	ld	a,(hl)
   118A DD 77 EA      [19] 2540 	ld	-22 (ix),a
   118D 23            [ 6] 2541 	inc	hl
   118E 7E            [ 7] 2542 	ld	a,(hl)
   118F DD 77 EB      [19] 2543 	ld	-21 (ix),a
   1192 DD 7E EA      [19] 2544 	ld	a,-22 (ix)
   1195 DD 77 F0      [19] 2545 	ld	-16 (ix),a
   1198 DD 7E EB      [19] 2546 	ld	a,-21 (ix)
   119B DD 77 F1      [19] 2547 	ld	-15 (ix),a
   119E DD 7E EB      [19] 2548 	ld	a,-21 (ix)
   11A1 17            [ 4] 2549 	rla
   11A2 9F            [ 4] 2550 	sbc	a, a
   11A3 DD 77 F2      [19] 2551 	ld	-14 (ix),a
   11A6 DD 77 F3      [19] 2552 	ld	-13 (ix),a
   11A9 DD 7E F0      [19] 2553 	ld	a,-16 (ix)
   11AC DD 77 F0      [19] 2554 	ld	-16 (ix),a
   11AF DD 7E F1      [19] 2555 	ld	a,-15 (ix)
   11B2 DD 77 F1      [19] 2556 	ld	-15 (ix),a
   11B5 DD 36 F2 00   [19] 2557 	ld	-14 (ix),#0x00
   11B9 DD 36 F3 00   [19] 2558 	ld	-13 (ix),#0x00
   11BD DD 6E E8      [19] 2559 	ld	l,-24 (ix)
   11C0 DD 66 E9      [19] 2560 	ld	h,-23 (ix)
   11C3 11 04 00      [10] 2561 	ld	de, #0x0004
   11C6 19            [11] 2562 	add	hl, de
   11C7 7E            [ 7] 2563 	ld	a,(hl)
   11C8 DD 77 E8      [19] 2564 	ld	-24 (ix),a
   11CB 23            [ 6] 2565 	inc	hl
   11CC 7E            [ 7] 2566 	ld	a,(hl)
   11CD DD 77 E9      [19] 2567 	ld	-23 (ix),a
   11D0 DD 7E E8      [19] 2568 	ld	a,-24 (ix)
   11D3 DD 77 F8      [19] 2569 	ld	-8 (ix),a
   11D6 DD 7E E9      [19] 2570 	ld	a,-23 (ix)
   11D9 DD 77 F9      [19] 2571 	ld	-7 (ix),a
   11DC DD 7E E9      [19] 2572 	ld	a,-23 (ix)
   11DF 17            [ 4] 2573 	rla
   11E0 9F            [ 4] 2574 	sbc	a, a
   11E1 DD 77 FA      [19] 2575 	ld	-6 (ix),a
   11E4 DD 77 FB      [19] 2576 	ld	-5 (ix),a
   11E7 F5            [11] 2577 	push	af
   11E8 DD 6E F8      [19] 2578 	ld	l,-8 (ix)
   11EB DD 66 F9      [19] 2579 	ld	h,-7 (ix)
   11EE DD 5E FA      [19] 2580 	ld	e,-6 (ix)
   11F1 DD 56 FB      [19] 2581 	ld	d,-5 (ix)
   11F4 F1            [10] 2582 	pop	af
   11F5 06 10         [ 7] 2583 	ld	b,#0x10
   11F7                    2584 00584$:
   11F7 29            [11] 2585 	add	hl, hl
   11F8 CB 13         [ 8] 2586 	rl	e
   11FA CB 12         [ 8] 2587 	rl	d
   11FC 10 F9         [13] 2588 	djnz	00584$
   11FE 01 00 00      [10] 2589 	ld	bc,#0x0000
   1201 79            [ 4] 2590 	ld	a,c
   1202 DD B6 F0      [19] 2591 	or	a, -16 (ix)
   1205 4F            [ 4] 2592 	ld	c,a
   1206 78            [ 4] 2593 	ld	a,b
   1207 DD B6 F1      [19] 2594 	or	a, -15 (ix)
   120A 47            [ 4] 2595 	ld	b,a
   120B 7B            [ 4] 2596 	ld	a,e
   120C DD B6 F2      [19] 2597 	or	a, -14 (ix)
   120F 5F            [ 4] 2598 	ld	e,a
   1210 7A            [ 4] 2599 	ld	a,d
   1211 DD B6 F3      [19] 2600 	or	a, -13 (ix)
   1214 57            [ 4] 2601 	ld	d,a
   1215 FD 21 21 00   [14] 2602 	ld	iy,#33
   1219 FD 39         [15] 2603 	add	iy,sp
   121B FD 71 00      [19] 2604 	ld	0 (iy),c
   121E FD 70 01      [19] 2605 	ld	1 (iy),b
   1221 FD 73 02      [19] 2606 	ld	2 (iy),e
   1224 FD 72 03      [19] 2607 	ld	3 (iy),d
   1227 18 13         [12] 2608 	jr	00192$
   1229                    2609 00191$:
                           2610 ;..\CFG8266.c:654: SentFileSize = 0;
   1229 AF            [ 4] 2611 	xor	a, a
   122A FD 21 21 00   [14] 2612 	ld	iy,#33
   122E FD 39         [15] 2613 	add	iy,sp
   1230 FD 77 00      [19] 2614 	ld	0 (iy),a
   1233 FD 77 01      [19] 2615 	ld	1 (iy),a
   1236 FD 77 02      [19] 2616 	ld	2 (iy),a
   1239 FD 77 03      [19] 2617 	ld	3 (iy),a
   123C                    2618 00192$:
                           2619 ;..\CFG8266.c:656: ultostr(SentFileSize,chFileSize,10);
   123C 21 03 00      [10] 2620 	ld	hl,#0x0003
   123F 39            [11] 2621 	add	hl,sp
   1240 4D            [ 4] 2622 	ld	c, l
   1241 44            [ 4] 2623 	ld	b, h
   1242 E5            [11] 2624 	push	hl
   1243 11 0A 00      [10] 2625 	ld	de,#0x000a
   1246 D5            [11] 2626 	push	de
   1247 C5            [11] 2627 	push	bc
   1248 FD 21 27 00   [14] 2628 	ld	iy,#39
   124C FD 39         [15] 2629 	add	iy,sp
   124E FD 6E 02      [19] 2630 	ld	l,2 (iy)
   1251 FD 66 03      [19] 2631 	ld	h,3 (iy)
   1254 E5            [11] 2632 	push	hl
   1255 FD 6E 00      [19] 2633 	ld	l,0 (iy)
   1258 FD 66 01      [19] 2634 	ld	h,1 (iy)
   125B E5            [11] 2635 	push	hl
   125C CDr29r06      [17] 2636 	call	_ultostr
   125F F1            [10] 2637 	pop	af
   1260 F1            [10] 2638 	pop	af
   1261 F1            [10] 2639 	pop	af
   1262 F1            [10] 2640 	pop	af
   1263 DD 4E E4      [19] 2641 	ld	c,-28 (ix)
   1266 DD 46 E5      [19] 2642 	ld	b,-27 (ix)
   1269 C5            [11] 2643 	push	bc
   126A CDr00r00      [17] 2644 	call	_Close
   126D F1            [10] 2645 	pop	af
   126E E1            [10] 2646 	pop	hl
                           2647 ;..\CFG8266.c:658: printf ("File: %s Size: %s \r\n",ucFile,chFileSize);
   126F 11r01r01      [10] 2648 	ld	de,#_ucFile
   1272 01r14r1A      [10] 2649 	ld	bc,#___str_26+0
   1275 E5            [11] 2650 	push	hl
   1276 D5            [11] 2651 	push	de
   1277 C5            [11] 2652 	push	bc
   1278 CDr00r00      [17] 2653 	call	_printf
   127B F1            [10] 2654 	pop	af
   127C F1            [10] 2655 	pop	af
   127D F1            [10] 2656 	pop	af
                           2657 ;..\CFG8266.c:659: if (SentFileSize)
   127E FD 21 21 00   [14] 2658 	ld	iy,#33
   1282 FD 39         [15] 2659 	add	iy,sp
   1284 FD 7E 03      [19] 2660 	ld	a,3 (iy)
   1287 FD B6 02      [19] 2661 	or	a, 2 (iy)
   128A FD B6 01      [19] 2662 	or	a, 1 (iy)
   128D FD B6 00      [19] 2663 	or	a,0 (iy)
   1290 CArEDr16      [10] 2664 	jp	Z,00222$
                           2665 ;..\CFG8266.c:661: iFile = Open (ucFile,O_RDONLY);
   1293 21 00 00      [10] 2666 	ld	hl,#0x0000
   1296 E5            [11] 2667 	push	hl
   1297 21r01r01      [10] 2668 	ld	hl,#_ucFile
   129A E5            [11] 2669 	push	hl
   129B CDr00r00      [17] 2670 	call	_Open
   129E F1            [10] 2671 	pop	af
   129F F1            [10] 2672 	pop	af
   12A0 FD 21 31 00   [14] 2673 	ld	iy,#49
   12A4 FD 39         [15] 2674 	add	iy,sp
   12A6 FD 75 00      [19] 2675 	ld	0 (iy),l
   12A9 FD 74 01      [19] 2676 	ld	1 (iy),h
                           2677 ;..\CFG8266.c:662: if (iFile!=-1)
   12AC FD 7E 00      [19] 2678 	ld	a,0 (iy)
   12AF 3C            [ 4] 2679 	inc	a
   12B0 20 07         [12] 2680 	jr	NZ,00586$
   12B2 FD 7E 01      [19] 2681 	ld	a,1 (iy)
   12B5 3C            [ 4] 2682 	inc	a
   12B6 CArDAr16      [10] 2683 	jp	Z,00219$
   12B9                    2684 00586$:
                           2685 ;..\CFG8266.c:664: FileRead = MyRead(iFile, ucServer,256); //try to read 256 bytes of data
   12B9 21 00 01      [10] 2686 	ld	hl,#0x0100
   12BC E5            [11] 2687 	push	hl
   12BD 21r01r00      [10] 2688 	ld	hl,#_ucServer
   12C0 E5            [11] 2689 	push	hl
   12C1 FD 6E 00      [19] 2690 	ld	l,0 (iy)
   12C4 FD 66 01      [19] 2691 	ld	h,1 (iy)
   12C7 E5            [11] 2692 	push	hl
   12C8 CDr16r01      [17] 2693 	call	_MyRead
   12CB F1            [10] 2694 	pop	af
   12CC F1            [10] 2695 	pop	af
   12CD F1            [10] 2696 	pop	af
   12CE FD 21 01 00   [14] 2697 	ld	iy,#1
   12D2 FD 39         [15] 2698 	add	iy,sp
   12D4 FD 75 00      [19] 2699 	ld	0 (iy),l
   12D7 FD 74 01      [19] 2700 	ld	1 (iy),h
                           2701 ;..\CFG8266.c:665: if (FileRead == 256)
   12DA FD 7E 00      [19] 2702 	ld	a,0 (iy)
   12DD B7            [ 4] 2703 	or	a, a
   12DE C2rC3r16      [10] 2704 	jp	NZ,00216$
   12E1 FD 7E 01      [19] 2705 	ld	a,1 (iy)
   12E4 3D            [ 4] 2706 	dec	a
   12E5 C2rC3r16      [10] 2707 	jp	NZ,00216$
                           2708 ;..\CFG8266.c:668: if (ucIsFw)
   12E8 3Ar0Er02      [13] 2709 	ld	a,(#_ucIsFw + 0)
   12EB B7            [ 4] 2710 	or	a, a
   12EC 28 0A         [12] 2711 	jr	Z,00194$
                           2712 ;..\CFG8266.c:669: TxByte('Z'); //Request start of RS232 update
   12EE 3E 5A         [ 7] 2713 	ld	a,#0x5a
   12F0 F5            [11] 2714 	push	af
   12F1 33            [ 6] 2715 	inc	sp
   12F2 CDr1Br06      [17] 2716 	call	_TxByte
   12F5 33            [ 6] 2717 	inc	sp
   12F6 18 08         [12] 2718 	jr	00195$
   12F8                    2719 00194$:
                           2720 ;..\CFG8266.c:671: TxByte('Y'); //Request start of RS232 cert update
   12F8 3E 59         [ 7] 2721 	ld	a,#0x59
   12FA F5            [11] 2722 	push	af
   12FB 33            [ 6] 2723 	inc	sp
   12FC CDr1Br06      [17] 2724 	call	_TxByte
   12FF 33            [ 6] 2725 	inc	sp
   1300                    2726 00195$:
                           2727 ;..\CFG8266.c:672: TxByte(0);
   1300 AF            [ 4] 2728 	xor	a, a
   1301 F5            [11] 2729 	push	af
   1302 33            [ 6] 2730 	inc	sp
   1303 CDr1Br06      [17] 2731 	call	_TxByte
   1306 33            [ 6] 2732 	inc	sp
                           2733 ;..\CFG8266.c:673: TxByte(12);
   1307 3E 0C         [ 7] 2734 	ld	a,#0x0c
   1309 F5            [11] 2735 	push	af
   130A 33            [ 6] 2736 	inc	sp
   130B CDr1Br06      [17] 2737 	call	_TxByte
   130E 33            [ 6] 2738 	inc	sp
                           2739 ;..\CFG8266.c:674: TxByte((unsigned char)(SentFileSize&0xff));
   130F 21 21 00      [10] 2740 	ld	hl, #33+0
   1312 39            [11] 2741 	add	hl, sp
   1313 46            [ 7] 2742 	ld	b, (hl)
   1314 0E 00         [ 7] 2743 	ld	c,#0x00
   1316 C5            [11] 2744 	push	bc
   1317 33            [ 6] 2745 	inc	sp
   1318 CDr1Br06      [17] 2746 	call	_TxByte
   131B 33            [ 6] 2747 	inc	sp
                           2748 ;..\CFG8266.c:675: TxByte((unsigned char)((SentFileSize&0xff00)>>8));
   131C 1E 00         [ 7] 2749 	ld	e,#0x00
   131E 21 22 00      [10] 2750 	ld	hl, #33+1
   1321 39            [11] 2751 	add	hl, sp
   1322 56            [ 7] 2752 	ld	d, (hl)
   1323 21 00 00      [10] 2753 	ld	hl,#0x0000
   1326 06 08         [ 7] 2754 	ld	b,#0x08
   1328                    2755 00589$:
   1328 CB 3C         [ 8] 2756 	srl	h
   132A CB 1D         [ 8] 2757 	rr	l
   132C CB 1A         [ 8] 2758 	rr	d
   132E CB 1B         [ 8] 2759 	rr	e
   1330 10 F6         [13] 2760 	djnz	00589$
   1332 43            [ 4] 2761 	ld	b,e
   1333 C5            [11] 2762 	push	bc
   1334 33            [ 6] 2763 	inc	sp
   1335 CDr1Br06      [17] 2764 	call	_TxByte
   1338 33            [ 6] 2765 	inc	sp
                           2766 ;..\CFG8266.c:676: TxByte((unsigned char)((SentFileSize&0xff0000)>>16));
   1339 11 00 00      [10] 2767 	ld	de,#0x0000
   133C FD 21 21 00   [14] 2768 	ld	iy,#33
   1340 FD 39         [15] 2769 	add	iy,sp
   1342 FD 6E 02      [19] 2770 	ld	l,2 (iy)
   1345 26 00         [ 7] 2771 	ld	h,#0x00
   1347 06 10         [ 7] 2772 	ld	b,#0x10
   1349                    2773 00591$:
   1349 CB 3C         [ 8] 2774 	srl	h
   134B CB 1D         [ 8] 2775 	rr	l
   134D CB 1A         [ 8] 2776 	rr	d
   134F CB 1B         [ 8] 2777 	rr	e
   1351 10 F6         [13] 2778 	djnz	00591$
   1353 43            [ 4] 2779 	ld	b,e
   1354 C5            [11] 2780 	push	bc
   1355 33            [ 6] 2781 	inc	sp
   1356 CDr1Br06      [17] 2782 	call	_TxByte
   1359 33            [ 6] 2783 	inc	sp
                           2784 ;..\CFG8266.c:677: TxByte((unsigned char)((SentFileSize&0xff000000)>>24));
   135A 11 00 00      [10] 2785 	ld	de,#0x0000
   135D 2E 00         [ 7] 2786 	ld	l,#0x00
   135F FD 21 21 00   [14] 2787 	ld	iy,#33
   1363 FD 39         [15] 2788 	add	iy,sp
   1365 FD 66 03      [19] 2789 	ld	h,3 (iy)
   1368 06 18         [ 7] 2790 	ld	b,#0x18
   136A                    2791 00593$:
   136A CB 3C         [ 8] 2792 	srl	h
   136C CB 1D         [ 8] 2793 	rr	l
   136E CB 1A         [ 8] 2794 	rr	d
   1370 CB 1B         [ 8] 2795 	rr	e
   1372 10 F6         [13] 2796 	djnz	00593$
   1374 43            [ 4] 2797 	ld	b,e
   1375 C5            [11] 2798 	push	bc
   1376 33            [ 6] 2799 	inc	sp
   1377 CDr1Br06      [17] 2800 	call	_TxByte
   137A 33            [ 6] 2801 	inc	sp
                           2802 ;..\CFG8266.c:678: TxByte((unsigned char)((SentFileSize&0xff00000000)>>32));
   137B FD 21 21 00   [14] 2803 	ld	iy,#33
   137F FD 39         [15] 2804 	add	iy,sp
   1381 FD 7E 00      [19] 2805 	ld	a,0 (iy)
   1384 DD 77 F8      [19] 2806 	ld	-8 (ix),a
   1387 FD 7E 01      [19] 2807 	ld	a,1 (iy)
   138A DD 77 F9      [19] 2808 	ld	-7 (ix),a
   138D FD 7E 02      [19] 2809 	ld	a,2 (iy)
   1390 DD 77 FA      [19] 2810 	ld	-6 (ix),a
   1393 FD 7E 03      [19] 2811 	ld	a,3 (iy)
   1396 DD 77 FB      [19] 2812 	ld	-5 (ix),a
   1399 DD 36 FC 00   [19] 2813 	ld	-4 (ix),#0x00
   139D DD 36 FD 00   [19] 2814 	ld	-3 (ix),#0x00
   13A1 DD 36 FE 00   [19] 2815 	ld	-2 (ix),#0x00
   13A5 DD 36 FF 00   [19] 2816 	ld	-1 (ix),#0x00
   13A9 DD 36 F0 00   [19] 2817 	ld	-16 (ix),#0x00
   13AD DD 36 F1 00   [19] 2818 	ld	-15 (ix),#0x00
   13B1 DD 36 F2 00   [19] 2819 	ld	-14 (ix),#0x00
   13B5 DD 36 F3 00   [19] 2820 	ld	-13 (ix),#0x00
   13B9 DD 7E FC      [19] 2821 	ld	a,-4 (ix)
   13BC DD 77 F4      [19] 2822 	ld	-12 (ix),a
   13BF DD 36 F5 00   [19] 2823 	ld	-11 (ix),#0x00
   13C3 DD 36 F6 00   [19] 2824 	ld	-10 (ix),#0x00
   13C7 DD 36 F7 00   [19] 2825 	ld	-9 (ix),#0x00
   13CB F5            [11] 2826 	push	af
   13CC F1            [10] 2827 	pop	af
   13CD 06 20         [ 7] 2828 	ld	b,#0x20
   13CF                    2829 00595$:
   13CF DD CB F7 2E   [23] 2830 	sra	-9 (ix)
   13D3 DD CB F6 1E   [23] 2831 	rr	-10 (ix)
   13D7 DD CB F5 1E   [23] 2832 	rr	-11 (ix)
   13DB DD CB F4 1E   [23] 2833 	rr	-12 (ix)
   13DF DD CB F3 1E   [23] 2834 	rr	-13 (ix)
   13E3 DD CB F2 1E   [23] 2835 	rr	-14 (ix)
   13E7 DD CB F1 1E   [23] 2836 	rr	-15 (ix)
   13EB DD CB F0 1E   [23] 2837 	rr	-16 (ix)
   13EF 10 DE         [13] 2838 	djnz	00595$
   13F1 DD 46 F0      [19] 2839 	ld	b,-16 (ix)
   13F4 C5            [11] 2840 	push	bc
   13F5 33            [ 6] 2841 	inc	sp
   13F6 CDr1Br06      [17] 2842 	call	_TxByte
   13F9 33            [ 6] 2843 	inc	sp
                           2844 ;..\CFG8266.c:679: TxByte((unsigned char)((SentFileSize&0xff0000000000)>>40));
   13FA DD 36 F0 00   [19] 2845 	ld	-16 (ix),#0x00
   13FE DD 36 F1 00   [19] 2846 	ld	-15 (ix),#0x00
   1402 DD 36 F2 00   [19] 2847 	ld	-14 (ix),#0x00
   1406 DD 36 F3 00   [19] 2848 	ld	-13 (ix),#0x00
   140A DD 36 F4 00   [19] 2849 	ld	-12 (ix),#0x00
   140E DD 7E FD      [19] 2850 	ld	a,-3 (ix)
   1411 DD 77 F5      [19] 2851 	ld	-11 (ix),a
   1414 DD 36 F6 00   [19] 2852 	ld	-10 (ix),#0x00
   1418 DD 36 F7 00   [19] 2853 	ld	-9 (ix),#0x00
   141C F5            [11] 2854 	push	af
   141D F1            [10] 2855 	pop	af
   141E 06 28         [ 7] 2856 	ld	b,#0x28
   1420                    2857 00597$:
   1420 DD CB F7 2E   [23] 2858 	sra	-9 (ix)
   1424 DD CB F6 1E   [23] 2859 	rr	-10 (ix)
   1428 DD CB F5 1E   [23] 2860 	rr	-11 (ix)
   142C DD CB F4 1E   [23] 2861 	rr	-12 (ix)
   1430 DD CB F3 1E   [23] 2862 	rr	-13 (ix)
   1434 DD CB F2 1E   [23] 2863 	rr	-14 (ix)
   1438 DD CB F1 1E   [23] 2864 	rr	-15 (ix)
   143C DD CB F0 1E   [23] 2865 	rr	-16 (ix)
   1440 10 DE         [13] 2866 	djnz	00597$
   1442 DD 46 F0      [19] 2867 	ld	b,-16 (ix)
   1445 C5            [11] 2868 	push	bc
   1446 33            [ 6] 2869 	inc	sp
   1447 CDr1Br06      [17] 2870 	call	_TxByte
   144A 33            [ 6] 2871 	inc	sp
                           2872 ;..\CFG8266.c:680: TxByte((unsigned char)((SentFileSize&0xff000000000000)>>48));
   144B DD 36 F0 00   [19] 2873 	ld	-16 (ix),#0x00
   144F DD 36 F1 00   [19] 2874 	ld	-15 (ix),#0x00
   1453 DD 36 F2 00   [19] 2875 	ld	-14 (ix),#0x00
   1457 DD 36 F3 00   [19] 2876 	ld	-13 (ix),#0x00
   145B DD 36 F4 00   [19] 2877 	ld	-12 (ix),#0x00
   145F DD 36 F5 00   [19] 2878 	ld	-11 (ix),#0x00
   1463 DD 7E FE      [19] 2879 	ld	a,-2 (ix)
   1466 DD 77 F6      [19] 2880 	ld	-10 (ix),a
   1469 DD 36 F7 00   [19] 2881 	ld	-9 (ix),#0x00
   146D F5            [11] 2882 	push	af
   146E F1            [10] 2883 	pop	af
   146F 06 30         [ 7] 2884 	ld	b,#0x30
   1471                    2885 00599$:
   1471 DD CB F7 2E   [23] 2886 	sra	-9 (ix)
   1475 DD CB F6 1E   [23] 2887 	rr	-10 (ix)
   1479 DD CB F5 1E   [23] 2888 	rr	-11 (ix)
   147D DD CB F4 1E   [23] 2889 	rr	-12 (ix)
   1481 DD CB F3 1E   [23] 2890 	rr	-13 (ix)
   1485 DD CB F2 1E   [23] 2891 	rr	-14 (ix)
   1489 DD CB F1 1E   [23] 2892 	rr	-15 (ix)
   148D DD CB F0 1E   [23] 2893 	rr	-16 (ix)
   1491 10 DE         [13] 2894 	djnz	00599$
   1493 DD 46 F0      [19] 2895 	ld	b,-16 (ix)
   1496 C5            [11] 2896 	push	bc
   1497 33            [ 6] 2897 	inc	sp
   1498 CDr1Br06      [17] 2898 	call	_TxByte
   149B 33            [ 6] 2899 	inc	sp
                           2900 ;..\CFG8266.c:681: TxByte((unsigned char)((SentFileSize&0xff00000000000000)>>56));
   149C FD 21 21 00   [14] 2901 	ld	iy,#33
   14A0 FD 39         [15] 2902 	add	iy,sp
   14A2 FD 7E 00      [19] 2903 	ld	a,0 (iy)
   14A5 DD 77 F0      [19] 2904 	ld	-16 (ix),a
   14A8 FD 7E 01      [19] 2905 	ld	a,1 (iy)
   14AB DD 77 F1      [19] 2906 	ld	-15 (ix),a
   14AE FD 7E 02      [19] 2907 	ld	a,2 (iy)
   14B1 DD 77 F2      [19] 2908 	ld	-14 (ix),a
   14B4 FD 7E 03      [19] 2909 	ld	a,3 (iy)
   14B7 DD 77 F3      [19] 2910 	ld	-13 (ix),a
   14BA DD 36 F4 00   [19] 2911 	ld	-12 (ix),#0x00
   14BE DD 36 F5 00   [19] 2912 	ld	-11 (ix),#0x00
   14C2 DD 36 F6 00   [19] 2913 	ld	-10 (ix),#0x00
   14C6 DD 36 F7 00   [19] 2914 	ld	-9 (ix),#0x00
   14CA DD 36 F0 00   [19] 2915 	ld	-16 (ix),#0x00
   14CE DD 36 F1 00   [19] 2916 	ld	-15 (ix),#0x00
   14D2 DD 36 F2 00   [19] 2917 	ld	-14 (ix),#0x00
   14D6 DD 36 F3 00   [19] 2918 	ld	-13 (ix),#0x00
   14DA DD 36 F4 00   [19] 2919 	ld	-12 (ix),#0x00
   14DE DD 36 F5 00   [19] 2920 	ld	-11 (ix),#0x00
   14E2 DD 36 F6 00   [19] 2921 	ld	-10 (ix),#0x00
   14E6 F5            [11] 2922 	push	af
   14E7 F1            [10] 2923 	pop	af
   14E8 06 38         [ 7] 2924 	ld	b,#0x38
   14EA                    2925 00601$:
   14EA DD CB F7 3E   [23] 2926 	srl	-9 (ix)
   14EE DD CB F6 1E   [23] 2927 	rr	-10 (ix)
   14F2 DD CB F5 1E   [23] 2928 	rr	-11 (ix)
   14F6 DD CB F4 1E   [23] 2929 	rr	-12 (ix)
   14FA DD CB F3 1E   [23] 2930 	rr	-13 (ix)
   14FE DD CB F2 1E   [23] 2931 	rr	-14 (ix)
   1502 DD CB F1 1E   [23] 2932 	rr	-15 (ix)
   1506 DD CB F0 1E   [23] 2933 	rr	-16 (ix)
   150A 10 DE         [13] 2934 	djnz	00601$
   150C DD 46 F0      [19] 2935 	ld	b,-16 (ix)
   150F C5            [11] 2936 	push	bc
   1510 33            [ 6] 2937 	inc	sp
   1511 CDr1Br06      [17] 2938 	call	_TxByte
   1514 33            [ 6] 2939 	inc	sp
                           2940 ;..\CFG8266.c:682: TxByte(ucServer[0]);
   1515 21r01r00      [10] 2941 	ld	hl, #_ucServer + 0
   1518 46            [ 7] 2942 	ld	b,(hl)
   1519 C5            [11] 2943 	push	bc
   151A 33            [ 6] 2944 	inc	sp
   151B CDr1Br06      [17] 2945 	call	_TxByte
   151E 33            [ 6] 2946 	inc	sp
                           2947 ;..\CFG8266.c:683: TxByte(ucServer[1]);
   151F 21r02r00      [10] 2948 	ld	hl, #_ucServer + 1
   1522 46            [ 7] 2949 	ld	b,(hl)
   1523 C5            [11] 2950 	push	bc
   1524 33            [ 6] 2951 	inc	sp
   1525 CDr1Br06      [17] 2952 	call	_TxByte
   1528 33            [ 6] 2953 	inc	sp
                           2954 ;..\CFG8266.c:684: TxByte(ucServer[2]);
   1529 21r03r00      [10] 2955 	ld	hl, #_ucServer + 2
   152C 46            [ 7] 2956 	ld	b,(hl)
   152D C5            [11] 2957 	push	bc
   152E 33            [ 6] 2958 	inc	sp
   152F CDr1Br06      [17] 2959 	call	_TxByte
   1532 33            [ 6] 2960 	inc	sp
                           2961 ;..\CFG8266.c:685: TxByte(ucServer[3]);
   1533 21r04r00      [10] 2962 	ld	hl, #_ucServer + 3
   1536 46            [ 7] 2963 	ld	b,(hl)
   1537 C5            [11] 2964 	push	bc
   1538 33            [ 6] 2965 	inc	sp
   1539 CDr1Br06      [17] 2966 	call	_TxByte
   153C 33            [ 6] 2967 	inc	sp
                           2968 ;..\CFG8266.c:687: if (ucIsFw)
   153D 3Ar0Er02      [13] 2969 	ld	a,(#_ucIsFw + 0)
   1540 B7            [ 4] 2970 	or	a, a
   1541 28 1B         [12] 2971 	jr	Z,00197$
                           2972 ;..\CFG8266.c:688: bResponse = WaitForRXData(responseRSFWUpdate,2,60,true);
   1543 3E 01         [ 7] 2973 	ld	a,#0x01
   1545 F5            [11] 2974 	push	af
   1546 33            [ 6] 2975 	inc	sp
   1547 21 3C 00      [10] 2976 	ld	hl,#0x003c
   154A E5            [11] 2977 	push	hl
   154B 2E 02         [ 7] 2978 	ld	l, #0x02
   154D E5            [11] 2979 	push	hl
   154E 21r9Fr01      [10] 2980 	ld	hl,#_responseRSFWUpdate
   1551 E5            [11] 2981 	push	hl
   1552 CDrCBr07      [17] 2982 	call	_WaitForRXData
   1555 F1            [10] 2983 	pop	af
   1556 F1            [10] 2984 	pop	af
   1557 F1            [10] 2985 	pop	af
   1558 33            [ 6] 2986 	inc	sp
   1559 DD 75 E4      [19] 2987 	ld	-28 (ix),l
   155C 18 19         [12] 2988 	jr	00198$
   155E                    2989 00197$:
                           2990 ;..\CFG8266.c:690: bResponse = WaitForRXData(responseRSCERTUpdate,2,60,true);
   155E 3E 01         [ 7] 2991 	ld	a,#0x01
   1560 F5            [11] 2992 	push	af
   1561 33            [ 6] 2993 	inc	sp
   1562 21 3C 00      [10] 2994 	ld	hl,#0x003c
   1565 E5            [11] 2995 	push	hl
   1566 2E 02         [ 7] 2996 	ld	l, #0x02
   1568 E5            [11] 2997 	push	hl
   1569 21rA1r01      [10] 2998 	ld	hl,#_responseRSCERTUpdate
   156C E5            [11] 2999 	push	hl
   156D CDrCBr07      [17] 3000 	call	_WaitForRXData
   1570 F1            [10] 3001 	pop	af
   1571 F1            [10] 3002 	pop	af
   1572 F1            [10] 3003 	pop	af
   1573 33            [ 6] 3004 	inc	sp
   1574 DD 75 E4      [19] 3005 	ld	-28 (ix),l
   1577                    3006 00198$:
                           3007 ;..\CFG8266.c:692: if (!bResponse)
   1577 DD 7E E4      [19] 3008 	ld	a,-28 (ix)
   157A B7            [ 4] 3009 	or	a, a
   157B 20 0B         [12] 3010 	jr	NZ,00213$
                           3011 ;..\CFG8266.c:693: printf("Error requesting to start firmware update.\r\n");
   157D 21r29r1A      [10] 3012 	ld	hl,#___str_27
   1580 E5            [11] 3013 	push	hl
   1581 CDr00r00      [17] 3014 	call	_printf
   1584 F1            [10] 3015 	pop	af
   1585 C3rCBr16      [10] 3016 	jp	00217$
   1588                    3017 00213$:
                           3018 ;..\CFG8266.c:696: PrintChar('U');
   1588 3E 55         [ 7] 3019 	ld	a,#0x55
   158A F5            [11] 3020 	push	af
   158B 33            [ 6] 3021 	inc	sp
   158C CDr00r00      [17] 3022 	call	_PrintChar
   158F 33            [ 6] 3023 	inc	sp
                           3024 ;..\CFG8266.c:697: do
   1590 21 33 00      [10] 3025 	ld	hl, #51
   1593 39            [11] 3026 	add	hl, sp
   1594 AF            [ 4] 3027 	xor	a, a
   1595 77            [ 7] 3028 	ld	(hl), a
   1596 23            [ 6] 3029 	inc	hl
   1597 77            [ 7] 3030 	ld	(hl), a
   1598                    3031 00207$:
                           3032 ;..\CFG8266.c:700: PrintChar(8); //backspace
   1598 3E 08         [ 7] 3033 	ld	a,#0x08
   159A F5            [11] 3034 	push	af
   159B 33            [ 6] 3035 	inc	sp
   159C CDr00r00      [17] 3036 	call	_PrintChar
   159F 33            [ 6] 3037 	inc	sp
                           3038 ;..\CFG8266.c:701: PrintChar(advance[i%4]); // next char
   15A0 21 33 00      [10] 3039 	ld	hl, #51+0
   15A3 39            [11] 3040 	add	hl, sp
   15A4 7E            [ 7] 3041 	ld	a, (hl)
   15A5 E6 03         [ 7] 3042 	and	a, #0x03
   15A7 DD 77 E8      [19] 3043 	ld	-24 (ix),a
   15AA DD 36 E9 00   [19] 3044 	ld	-23 (ix),#0x00
   15AE DD 7E EE      [19] 3045 	ld	a,-18 (ix)
   15B1 DD 86 E8      [19] 3046 	add	a, -24 (ix)
   15B4 DD 77 E8      [19] 3047 	ld	-24 (ix),a
   15B7 DD 7E EF      [19] 3048 	ld	a,-17 (ix)
   15BA DD 8E E9      [19] 3049 	adc	a, -23 (ix)
   15BD DD 77 E9      [19] 3050 	ld	-23 (ix),a
   15C0 DD 6E E8      [19] 3051 	ld	l,-24 (ix)
   15C3 DD 66 E9      [19] 3052 	ld	h,-23 (ix)
   15C6 46            [ 7] 3053 	ld	b,(hl)
   15C7 C5            [11] 3054 	push	bc
   15C8 33            [ 6] 3055 	inc	sp
   15C9 CDr00r00      [17] 3056 	call	_PrintChar
   15CC 33            [ 6] 3057 	inc	sp
                           3058 ;..\CFG8266.c:702: ++i;
   15CD FD 21 33 00   [14] 3059 	ld	iy,#51
   15D1 FD 39         [15] 3060 	add	iy,sp
   15D3 FD 34 00      [23] 3061 	inc	0 (iy)
   15D6 20 03         [12] 3062 	jr	NZ,00603$
   15D8 FD 34 01      [23] 3063 	inc	1 (iy)
   15DB                    3064 00603$:
                           3065 ;..\CFG8266.c:703: if (!ucFirstBlock)
   15DB 21 00 00      [10] 3066 	ld	hl, #0+0
   15DE 39            [11] 3067 	add	hl, sp
   15DF 7E            [ 7] 3068 	ld	a, (hl)
   15E0 B7            [ 4] 3069 	or	a, a
   15E1 20 35         [12] 3070 	jr	NZ,00202$
                           3071 ;..\CFG8266.c:705: FileRead = MyRead(iFile, ucServer,256); //try to read 256 bytes of data
   15E3 21 00 01      [10] 3072 	ld	hl,#0x0100
   15E6 E5            [11] 3073 	push	hl
   15E7 21r01r00      [10] 3074 	ld	hl,#_ucServer
   15EA E5            [11] 3075 	push	hl
   15EB 21 35 00      [10] 3076 	ld	hl, #53
   15EE 39            [11] 3077 	add	hl, sp
   15EF 4E            [ 7] 3078 	ld	c, (hl)
   15F0 23            [ 6] 3079 	inc	hl
   15F1 46            [ 7] 3080 	ld	b, (hl)
   15F2 C5            [11] 3081 	push	bc
   15F3 CDr16r01      [17] 3082 	call	_MyRead
   15F6 F1            [10] 3083 	pop	af
   15F7 F1            [10] 3084 	pop	af
   15F8 F1            [10] 3085 	pop	af
   15F9 FD 21 01 00   [14] 3086 	ld	iy,#1
   15FD FD 39         [15] 3087 	add	iy,sp
   15FF FD 75 00      [19] 3088 	ld	0 (iy),l
   1602 FD 74 01      [19] 3089 	ld	1 (iy),h
                           3090 ;..\CFG8266.c:706: if (FileRead ==0)
   1605 FD 7E 01      [19] 3091 	ld	a,1 (iy)
   1608 FD B6 00      [19] 3092 	or	a,0 (iy)
   160B 20 15         [12] 3093 	jr	NZ,00203$
                           3094 ;..\CFG8266.c:708: printf("Error reading file...\r\n");
   160D 21r56r1A      [10] 3095 	ld	hl,#___str_28
   1610 E5            [11] 3096 	push	hl
   1611 CDr00r00      [17] 3097 	call	_printf
   1614 F1            [10] 3098 	pop	af
                           3099 ;..\CFG8266.c:709: break;
   1615 C3rB4r16      [10] 3100 	jp	00209$
   1618                    3101 00202$:
                           3102 ;..\CFG8266.c:713: ucFirstBlock = 0;
   1618 FD 21 00 00   [14] 3103 	ld	iy,#0
   161C FD 39         [15] 3104 	add	iy,sp
   161E FD 36 00 00   [19] 3105 	ld	0 (iy),#0x00
   1622                    3106 00203$:
                           3107 ;..\CFG8266.c:715: TxByte('z'); //Write block
   1622 3E 7A         [ 7] 3108 	ld	a,#0x7a
   1624 F5            [11] 3109 	push	af
   1625 33            [ 6] 3110 	inc	sp
   1626 CDr1Br06      [17] 3111 	call	_TxByte
   1629 33            [ 6] 3112 	inc	sp
                           3113 ;..\CFG8266.c:716: TxByte((unsigned char)((FileRead&0xff00)>>8));
   162A 21 02 00      [10] 3114 	ld	hl, #1+1
   162D 39            [11] 3115 	add	hl, sp
   162E 46            [ 7] 3116 	ld	b, (hl)
   162F 0E 00         [ 7] 3117 	ld	c,#0x00
   1631 C5            [11] 3118 	push	bc
   1632 33            [ 6] 3119 	inc	sp
   1633 CDr1Br06      [17] 3120 	call	_TxByte
   1636 33            [ 6] 3121 	inc	sp
                           3122 ;..\CFG8266.c:717: TxByte((unsigned char)(FileRead&0xff));
   1637 21 01 00      [10] 3123 	ld	hl, #1+0
   163A 39            [11] 3124 	add	hl, sp
   163B 46            [ 7] 3125 	ld	b, (hl)
   163C 0E 00         [ 7] 3126 	ld	c,#0x00
   163E C5            [11] 3127 	push	bc
   163F 33            [ 6] 3128 	inc	sp
   1640 CDr1Br06      [17] 3129 	call	_TxByte
   1643 33            [ 6] 3130 	inc	sp
                           3131 ;..\CFG8266.c:718: for (ii=0;ii<256;ii++)
   1644 01 00 00      [10] 3132 	ld	bc,#0x0000
   1647                    3133 00270$:
                           3134 ;..\CFG8266.c:719: TxByte(ucServer[ii]);
   1647 21r01r00      [10] 3135 	ld	hl,#_ucServer
   164A 09            [11] 3136 	add	hl,bc
   164B 56            [ 7] 3137 	ld	d,(hl)
   164C C5            [11] 3138 	push	bc
   164D D5            [11] 3139 	push	de
   164E 33            [ 6] 3140 	inc	sp
   164F CDr1Br06      [17] 3141 	call	_TxByte
   1652 33            [ 6] 3142 	inc	sp
   1653 C1            [10] 3143 	pop	bc
                           3144 ;..\CFG8266.c:718: for (ii=0;ii<256;ii++)
   1654 03            [ 6] 3145 	inc	bc
   1655 78            [ 4] 3146 	ld	a,b
   1656 D6 01         [ 7] 3147 	sub	a, #0x01
   1658 38 ED         [12] 3148 	jr	C,00270$
                           3149 ;..\CFG8266.c:721: bResponse = WaitForRXData(responseWRBlock,2,600,true);
   165A 3E 01         [ 7] 3150 	ld	a,#0x01
   165C F5            [11] 3151 	push	af
   165D 33            [ 6] 3152 	inc	sp
   165E 21 58 02      [10] 3153 	ld	hl,#0x0258
   1661 E5            [11] 3154 	push	hl
   1662 21 02 00      [10] 3155 	ld	hl,#0x0002
   1665 E5            [11] 3156 	push	hl
   1666 21rA3r01      [10] 3157 	ld	hl,#_responseWRBlock
   1669 E5            [11] 3158 	push	hl
   166A CDrCBr07      [17] 3159 	call	_WaitForRXData
   166D F1            [10] 3160 	pop	af
   166E F1            [10] 3161 	pop	af
   166F F1            [10] 3162 	pop	af
   1670 33            [ 6] 3163 	inc	sp
                           3164 ;..\CFG8266.c:723: if (!bResponse)
   1671 DD 75 E4      [19] 3165 	ld	-28 (ix), l
   1674 7D            [ 4] 3166 	ld	a, l
   1675 B7            [ 4] 3167 	or	a, a
   1676 20 0A         [12] 3168 	jr	NZ,00206$
                           3169 ;..\CFG8266.c:725: printf("Error requesting to write firmware block.\r\n");
   1678 21r6Er1A      [10] 3170 	ld	hl,#___str_29
   167B E5            [11] 3171 	push	hl
   167C CDr00r00      [17] 3172 	call	_printf
   167F F1            [10] 3173 	pop	af
                           3174 ;..\CFG8266.c:726: break;
   1680 18 32         [12] 3175 	jr	00209$
   1682                    3176 00206$:
                           3177 ;..\CFG8266.c:728: SentFileSize = SentFileSize - FileRead;
   1682 21 01 00      [10] 3178 	ld	hl, #1
   1685 39            [11] 3179 	add	hl, sp
   1686 4E            [ 7] 3180 	ld	c, (hl)
   1687 23            [ 6] 3181 	inc	hl
   1688 46            [ 7] 3182 	ld	b, (hl)
   1689 11 00 00      [10] 3183 	ld	de,#0x0000
   168C 21 21 00      [10] 3184 	ld	hl,#33
   168F 39            [11] 3185 	add	hl,sp
   1690 7E            [ 7] 3186 	ld	a,(hl)
   1691 91            [ 4] 3187 	sub	a, c
   1692 77            [ 7] 3188 	ld	(hl),a
   1693 23            [ 6] 3189 	inc	hl
   1694 7E            [ 7] 3190 	ld	a,(hl)
   1695 98            [ 4] 3191 	sbc	a, b
   1696 77            [ 7] 3192 	ld	(hl),a
   1697 23            [ 6] 3193 	inc	hl
   1698 7E            [ 7] 3194 	ld	a,(hl)
   1699 9B            [ 4] 3195 	sbc	a, e
   169A 77            [ 7] 3196 	ld	(hl),a
   169B 23            [ 6] 3197 	inc	hl
   169C 7E            [ 7] 3198 	ld	a,(hl)
   169D 9A            [ 4] 3199 	sbc	a, d
   169E 77            [ 7] 3200 	ld	(hl),a
                           3201 ;..\CFG8266.c:730: while(SentFileSize);
   169F FD 21 21 00   [14] 3202 	ld	iy,#33
   16A3 FD 39         [15] 3203 	add	iy,sp
   16A5 FD 7E 03      [19] 3204 	ld	a,3 (iy)
   16A8 FD B6 02      [19] 3205 	or	a, 2 (iy)
   16AB FD B6 01      [19] 3206 	or	a, 1 (iy)
   16AE FD B6 00      [19] 3207 	or	a,0 (iy)
   16B1 C2r98r15      [10] 3208 	jp	NZ,00207$
   16B4                    3209 00209$:
                           3210 ;..\CFG8266.c:733: if (bResponse)
   16B4 DD 7E E4      [19] 3211 	ld	a,-28 (ix)
   16B7 B7            [ 4] 3212 	or	a, a
   16B8 28 11         [12] 3213 	jr	Z,00217$
                           3214 ;..\CFG8266.c:734: FinishUpdate(false);
   16BA AF            [ 4] 3215 	xor	a, a
   16BB F5            [11] 3216 	push	af
   16BC 33            [ 6] 3217 	inc	sp
   16BD CDr6Er09      [17] 3218 	call	_FinishUpdate
   16C0 33            [ 6] 3219 	inc	sp
   16C1 18 08         [12] 3220 	jr	00217$
   16C3                    3221 00216$:
                           3222 ;..\CFG8266.c:738: Print("Error reading firmware file!\n");
   16C3 21r9Ar1A      [10] 3223 	ld	hl,#___str_30
   16C6 E5            [11] 3224 	push	hl
   16C7 CDr00r00      [17] 3225 	call	_Print
   16CA F1            [10] 3226 	pop	af
   16CB                    3227 00217$:
                           3228 ;..\CFG8266.c:739: Close(iFile);
   16CB 21 31 00      [10] 3229 	ld	hl, #49
   16CE 39            [11] 3230 	add	hl, sp
   16CF 4E            [ 7] 3231 	ld	c, (hl)
   16D0 23            [ 6] 3232 	inc	hl
   16D1 46            [ 7] 3233 	ld	b, (hl)
   16D2 C5            [11] 3234 	push	bc
   16D3 CDr00r00      [17] 3235 	call	_Close
   16D6 F1            [10] 3236 	pop	af
   16D7 C3r65r18      [10] 3237 	jp	00264$
   16DA                    3238 00219$:
                           3239 ;..\CFG8266.c:743: printf("Error, couldn't open %s ...\r\n",ucFile);
   16DA 21r01r01      [10] 3240 	ld	hl,#_ucFile
   16DD E5            [11] 3241 	push	hl
   16DE 21rB8r1A      [10] 3242 	ld	hl,#___str_31
   16E1 E5            [11] 3243 	push	hl
   16E2 CDr00r00      [17] 3244 	call	_printf
   16E5 F1            [10] 3245 	pop	af
   16E6 F1            [10] 3246 	pop	af
                           3247 ;..\CFG8266.c:744: return 0;
   16E7 21 00 00      [10] 3248 	ld	hl,#0x0000
   16EA C3r68r18      [10] 3249 	jp	00272$
   16ED                    3250 00222$:
                           3251 ;..\CFG8266.c:749: printf("Error, %s is 0 bytes long...\r\n",ucFile);
   16ED 21r01r01      [10] 3252 	ld	hl,#_ucFile
   16F0 E5            [11] 3253 	push	hl
   16F1 21rD6r1A      [10] 3254 	ld	hl,#___str_32
   16F4 E5            [11] 3255 	push	hl
   16F5 CDr00r00      [17] 3256 	call	_printf
   16F8 F1            [10] 3257 	pop	af
   16F9 F1            [10] 3258 	pop	af
                           3259 ;..\CFG8266.c:750: return 0;
   16FA 21 00 00      [10] 3260 	ld	hl,#0x0000
   16FD C3r68r18      [10] 3261 	jp	00272$
   1700                    3262 00225$:
                           3263 ;..\CFG8266.c:755: printf("Error, couldn't open %s ...\r\n",ucFile);
   1700 21r01r01      [10] 3264 	ld	hl,#_ucFile
   1703 E5            [11] 3265 	push	hl
   1704 21rB8r1A      [10] 3266 	ld	hl,#___str_31
   1707 E5            [11] 3267 	push	hl
   1708 CDr00r00      [17] 3268 	call	_printf
   170B F1            [10] 3269 	pop	af
   170C F1            [10] 3270 	pop	af
                           3271 ;..\CFG8266.c:756: return 0;
   170D 21 00 00      [10] 3272 	ld	hl,#0x0000
   1710 C3r68r18      [10] 3273 	jp	00272$
   1713                    3274 00252$:
                           3275 ;..\CFG8266.c:761: if (ucIsFw)
   1713 3Ar0Er02      [13] 3276 	ld	a,(#_ucIsFw + 0)
   1716 B7            [ 4] 3277 	or	a, a
   1717 28 19         [12] 3278 	jr	Z,00228$
                           3279 ;..\CFG8266.c:762: printf ("Ok, updating FW using server: %s port: %u\r\nFile path: %s\nPlease Wait, it can take up to a few minutes!\r\n",ucServer,uiPort,ucFile);
   1719 21r01r01      [10] 3280 	ld	hl,#_ucFile
   171C E5            [11] 3281 	push	hl
   171D 2Ar07r02      [16] 3282 	ld	hl,(_uiPort)
   1720 E5            [11] 3283 	push	hl
   1721 21r01r00      [10] 3284 	ld	hl,#_ucServer
   1724 E5            [11] 3285 	push	hl
   1725 21rF5r1A      [10] 3286 	ld	hl,#___str_33
   1728 E5            [11] 3287 	push	hl
   1729 CDr00r00      [17] 3288 	call	_printf
   172C F1            [10] 3289 	pop	af
   172D F1            [10] 3290 	pop	af
   172E F1            [10] 3291 	pop	af
   172F F1            [10] 3292 	pop	af
   1730 18 17         [12] 3293 	jr	00229$
   1732                    3294 00228$:
                           3295 ;..\CFG8266.c:764: printf ("Ok, updating certificates using server: %s port: %u\r\nFile path: %s\nPlease Wait, it can take up to a few minutes!\r\n",ucServer,uiPort,ucFile);
   1732 21r01r01      [10] 3296 	ld	hl,#_ucFile
   1735 E5            [11] 3297 	push	hl
   1736 2Ar07r02      [16] 3298 	ld	hl,(_uiPort)
   1739 E5            [11] 3299 	push	hl
   173A 21r01r00      [10] 3300 	ld	hl,#_ucServer
   173D E5            [11] 3301 	push	hl
   173E 21r5Er1B      [10] 3302 	ld	hl,#___str_34
   1741 E5            [11] 3303 	push	hl
   1742 CDr00r00      [17] 3304 	call	_printf
   1745 F1            [10] 3305 	pop	af
   1746 F1            [10] 3306 	pop	af
   1747 F1            [10] 3307 	pop	af
   1748 F1            [10] 3308 	pop	af
   1749                    3309 00229$:
                           3310 ;..\CFG8266.c:765: uiCMDLen = strlen(ucServer) + 3; //3 = 0 terminator + 2 bytes port
   1749 21r01r00      [10] 3311 	ld	hl,#_ucServer
   174C E5            [11] 3312 	push	hl
   174D CDr00r00      [17] 3313 	call	_strlen
   1750 F1            [10] 3314 	pop	af
   1751 EB            [ 4] 3315 	ex	de,hl
   1752 13            [ 6] 3316 	inc	de
   1753 13            [ 6] 3317 	inc	de
   1754 13            [ 6] 3318 	inc	de
                           3319 ;..\CFG8266.c:766: uiCMDLen += strlen(ucFile);
   1755 21r01r01      [10] 3320 	ld	hl,#_ucFile
   1758 E5            [11] 3321 	push	hl
   1759 CDr00r00      [17] 3322 	call	_strlen
   175C F1            [10] 3323 	pop	af
   175D 19            [11] 3324 	add	hl,de
   175E 4D            [ 4] 3325 	ld	c,l
   175F 44            [ 4] 3326 	ld	b,h
                           3327 ;..\CFG8266.c:767: if (ucIsFw)
   1760 3Ar0Er02      [13] 3328 	ld	a,(#_ucIsFw + 0)
   1763 B7            [ 4] 3329 	or	a, a
   1764 28 0C         [12] 3330 	jr	Z,00231$
                           3331 ;..\CFG8266.c:768: TxByte('U'); //Request Update Main Firmware remotely
   1766 C5            [11] 3332 	push	bc
   1767 3E 55         [ 7] 3333 	ld	a,#0x55
   1769 F5            [11] 3334 	push	af
   176A 33            [ 6] 3335 	inc	sp
   176B CDr1Br06      [17] 3336 	call	_TxByte
   176E 33            [ 6] 3337 	inc	sp
   176F C1            [10] 3338 	pop	bc
   1770 18 0A         [12] 3339 	jr	00232$
   1772                    3340 00231$:
                           3341 ;..\CFG8266.c:770: TxByte('u'); //Request Update spiffs remotely
   1772 C5            [11] 3342 	push	bc
   1773 3E 75         [ 7] 3343 	ld	a,#0x75
   1775 F5            [11] 3344 	push	af
   1776 33            [ 6] 3345 	inc	sp
   1777 CDr1Br06      [17] 3346 	call	_TxByte
   177A 33            [ 6] 3347 	inc	sp
   177B C1            [10] 3348 	pop	bc
   177C                    3349 00232$:
                           3350 ;..\CFG8266.c:771: TxByte((unsigned char)((uiCMDLen&0xff00)>>8));
   177C 1E 00         [ 7] 3351 	ld	e,#0x00
   177E 50            [ 4] 3352 	ld	d, b
   177F C5            [11] 3353 	push	bc
   1780 D5            [11] 3354 	push	de
   1781 33            [ 6] 3355 	inc	sp
   1782 CDr1Br06      [17] 3356 	call	_TxByte
   1785 33            [ 6] 3357 	inc	sp
   1786 C1            [10] 3358 	pop	bc
                           3359 ;..\CFG8266.c:772: TxByte((unsigned char)(uiCMDLen&0xff));
   1787 51            [ 4] 3360 	ld	d,c
   1788 1E 00         [ 7] 3361 	ld	e,#0x00
   178A C5            [11] 3362 	push	bc
   178B D5            [11] 3363 	push	de
   178C 33            [ 6] 3364 	inc	sp
   178D CDr1Br06      [17] 3365 	call	_TxByte
   1790 33            [ 6] 3366 	inc	sp
   1791 C1            [10] 3367 	pop	bc
                           3368 ;..\CFG8266.c:773: TxByte((unsigned char)(uiPort&0xff));
   1792 21r07r02      [10] 3369 	ld	hl,#_uiPort + 0
   1795 56            [ 7] 3370 	ld	d, (hl)
   1796 1E 00         [ 7] 3371 	ld	e,#0x00
   1798 C5            [11] 3372 	push	bc
   1799 D5            [11] 3373 	push	de
   179A 33            [ 6] 3374 	inc	sp
   179B CDr1Br06      [17] 3375 	call	_TxByte
   179E 33            [ 6] 3376 	inc	sp
   179F C1            [10] 3377 	pop	bc
                           3378 ;..\CFG8266.c:774: TxByte((unsigned char)((uiPort&0xff00)>>8));
   17A0 1E 00         [ 7] 3379 	ld	e,#0x00
   17A2 21r08r02      [10] 3380 	ld	hl,#_uiPort + 1
   17A5 56            [ 7] 3381 	ld	d, (hl)
   17A6 C5            [11] 3382 	push	bc
   17A7 D5            [11] 3383 	push	de
   17A8 33            [ 6] 3384 	inc	sp
   17A9 CDr1Br06      [17] 3385 	call	_TxByte
   17AC 33            [ 6] 3386 	inc	sp
   17AD C1            [10] 3387 	pop	bc
                           3388 ;..\CFG8266.c:776: do
   17AE 1E 00         [ 7] 3389 	ld	e,#0x00
   17B0                    3390 00234$:
                           3391 ;..\CFG8266.c:778: tx_data = ucServer[rx_data];
   17B0 21r01r00      [10] 3392 	ld	hl,#_ucServer
   17B3 16 00         [ 7] 3393 	ld	d,#0x00
   17B5 19            [11] 3394 	add	hl, de
   17B6 56            [ 7] 3395 	ld	d,(hl)
                           3396 ;..\CFG8266.c:779: TxByte(tx_data);
   17B7 C5            [11] 3397 	push	bc
   17B8 D5            [11] 3398 	push	de
   17B9 D5            [11] 3399 	push	de
   17BA 33            [ 6] 3400 	inc	sp
   17BB CDr1Br06      [17] 3401 	call	_TxByte
   17BE 33            [ 6] 3402 	inc	sp
   17BF D1            [10] 3403 	pop	de
   17C0 C1            [10] 3404 	pop	bc
                           3405 ;..\CFG8266.c:780: --uiCMDLen;
   17C1 0B            [ 6] 3406 	dec	bc
                           3407 ;..\CFG8266.c:781: ++rx_data;
   17C2 1C            [ 4] 3408 	inc	e
                           3409 ;..\CFG8266.c:783: while((uiCMDLen)&&(tx_data!=0));
   17C3 78            [ 4] 3410 	ld	a,b
   17C4 B1            [ 4] 3411 	or	a,c
   17C5 28 04         [12] 3412 	jr	Z,00236$
   17C7 7A            [ 4] 3413 	ld	a,d
   17C8 B7            [ 4] 3414 	or	a, a
   17C9 20 E5         [12] 3415 	jr	NZ,00234$
   17CB                    3416 00236$:
                           3417 ;..\CFG8266.c:785: do
   17CB 1E 00         [ 7] 3418 	ld	e,#0x00
   17CD                    3419 00239$:
                           3420 ;..\CFG8266.c:787: tx_data = ucFile[rx_data];
   17CD 21r01r01      [10] 3421 	ld	hl,#_ucFile
   17D0 16 00         [ 7] 3422 	ld	d,#0x00
   17D2 19            [11] 3423 	add	hl, de
   17D3 56            [ 7] 3424 	ld	d,(hl)
                           3425 ;..\CFG8266.c:788: if (tx_data==0)
   17D4 7A            [ 4] 3426 	ld	a,d
   17D5 B7            [ 4] 3427 	or	a, a
   17D6 28 10         [12] 3428 	jr	Z,00241$
                           3429 ;..\CFG8266.c:790: TxByte(tx_data);
   17D8 C5            [11] 3430 	push	bc
   17D9 D5            [11] 3431 	push	de
   17DA D5            [11] 3432 	push	de
   17DB 33            [ 6] 3433 	inc	sp
   17DC CDr1Br06      [17] 3434 	call	_TxByte
   17DF 33            [ 6] 3435 	inc	sp
   17E0 D1            [10] 3436 	pop	de
   17E1 C1            [10] 3437 	pop	bc
                           3438 ;..\CFG8266.c:791: --uiCMDLen;
   17E2 0B            [ 6] 3439 	dec	bc
                           3440 ;..\CFG8266.c:792: ++rx_data;
   17E3 1C            [ 4] 3441 	inc	e
                           3442 ;..\CFG8266.c:794: while(uiCMDLen);
   17E4 78            [ 4] 3443 	ld	a,b
   17E5 B1            [ 4] 3444 	or	a,c
   17E6 20 E5         [12] 3445 	jr	NZ,00239$
   17E8                    3446 00241$:
                           3447 ;..\CFG8266.c:796: if (ucIsFw)
   17E8 3Ar0Er02      [13] 3448 	ld	a,(#_ucIsFw + 0)
   17EB B7            [ 4] 3449 	or	a, a
   17EC 28 1A         [12] 3450 	jr	Z,00243$
                           3451 ;..\CFG8266.c:797: bResponse = WaitForRXData(responseOTAFW,2,18000,true);
   17EE 3E 01         [ 7] 3452 	ld	a,#0x01
   17F0 F5            [11] 3453 	push	af
   17F1 33            [ 6] 3454 	inc	sp
   17F2 21 50 46      [10] 3455 	ld	hl,#0x4650
   17F5 E5            [11] 3456 	push	hl
   17F6 21 02 00      [10] 3457 	ld	hl,#0x0002
   17F9 E5            [11] 3458 	push	hl
   17FA 21rA5r01      [10] 3459 	ld	hl,#_responseOTAFW
   17FD E5            [11] 3460 	push	hl
   17FE CDrCBr07      [17] 3461 	call	_WaitForRXData
   1801 F1            [10] 3462 	pop	af
   1802 F1            [10] 3463 	pop	af
   1803 F1            [10] 3464 	pop	af
   1804 33            [ 6] 3465 	inc	sp
   1805 4D            [ 4] 3466 	ld	c,l
   1806 18 18         [12] 3467 	jr	00244$
   1808                    3468 00243$:
                           3469 ;..\CFG8266.c:799: bResponse = WaitForRXData(responseOTASPIFF,2,18000,true);
   1808 3E 01         [ 7] 3470 	ld	a,#0x01
   180A F5            [11] 3471 	push	af
   180B 33            [ 6] 3472 	inc	sp
   180C 21 50 46      [10] 3473 	ld	hl,#0x4650
   180F E5            [11] 3474 	push	hl
   1810 21 02 00      [10] 3475 	ld	hl,#0x0002
   1813 E5            [11] 3476 	push	hl
   1814 21rA7r01      [10] 3477 	ld	hl,#_responseOTASPIFF
   1817 E5            [11] 3478 	push	hl
   1818 CDrCBr07      [17] 3479 	call	_WaitForRXData
   181B F1            [10] 3480 	pop	af
   181C F1            [10] 3481 	pop	af
   181D F1            [10] 3482 	pop	af
   181E 33            [ 6] 3483 	inc	sp
   181F 4D            [ 4] 3484 	ld	c,l
   1820                    3485 00244$:
                           3486 ;..\CFG8266.c:801: if (bResponse)
   1820 79            [ 4] 3487 	ld	a,c
   1821 B7            [ 4] 3488 	or	a, a
   1822 28 25         [12] 3489 	jr	Z,00249$
                           3490 ;..\CFG8266.c:803: if ((!ucIsFw))
   1824 3Ar0Er02      [13] 3491 	ld	a,(#_ucIsFw + 0)
   1827 B7            [ 4] 3492 	or	a, a
   1828 20 0A         [12] 3493 	jr	NZ,00246$
                           3494 ;..\CFG8266.c:804: Print ("Success updating certificates!\n");
   182A 21rD1r1B      [10] 3495 	ld	hl,#___str_35
   182D E5            [11] 3496 	push	hl
   182E CDr00r00      [17] 3497 	call	_Print
   1831 F1            [10] 3498 	pop	af
   1832 18 08         [12] 3499 	jr	00247$
   1834                    3500 00246$:
                           3501 ;..\CFG8266.c:806: Print ("Success, firmware updated, wait a minute so it is fully flashed.\n");
   1834 21rF1r1B      [10] 3502 	ld	hl,#___str_36
   1837 E5            [11] 3503 	push	hl
   1838 CDr00r00      [17] 3504 	call	_Print
   183B F1            [10] 3505 	pop	af
   183C                    3506 00247$:
                           3507 ;..\CFG8266.c:807: FinishUpdate(true);
   183C 3E 01         [ 7] 3508 	ld	a,#0x01
   183E F5            [11] 3509 	push	af
   183F 33            [ 6] 3510 	inc	sp
   1840 CDr6Er09      [17] 3511 	call	_FinishUpdate
   1843 33            [ 6] 3512 	inc	sp
                           3513 ;..\CFG8266.c:808: return 0;
   1844 21 00 00      [10] 3514 	ld	hl,#0x0000
   1847 18 1F         [12] 3515 	jr	00272$
   1849                    3516 00249$:
                           3517 ;..\CFG8266.c:811: Print ("Failed to update from remote server...\n");
   1849 21r33r1C      [10] 3518 	ld	hl,#___str_37
   184C E5            [11] 3519 	push	hl
   184D CDr00r00      [17] 3520 	call	_Print
   1850 F1            [10] 3521 	pop	af
   1851 18 12         [12] 3522 	jr	00264$
   1853                    3523 00260$:
                           3524 ;..\CFG8266.c:929: Print("ESP device not found...\n");
   1853 21r5Br1C      [10] 3525 	ld	hl,#___str_38
   1856 E5            [11] 3526 	push	hl
   1857 CDr00r00      [17] 3527 	call	_Print
   185A F1            [10] 3528 	pop	af
   185B 18 08         [12] 3529 	jr	00264$
   185D                    3530 00263$:
                           3531 ;..\CFG8266.c:932: Print(strUsage);
   185D 21rA9r01      [10] 3532 	ld	hl,#_strUsage
   1860 E5            [11] 3533 	push	hl
   1861 CDr00r00      [17] 3534 	call	_Print
   1864 F1            [10] 3535 	pop	af
   1865                    3536 00264$:
                           3537 ;..\CFG8266.c:934: return 0;
   1865 21 00 00      [10] 3538 	ld	hl,#0x0000
   1868                    3539 00272$:
   1868 DD F9         [10] 3540 	ld	sp, ix
   186A DD E1         [14] 3541 	pop	ix
   186C C9            [10] 3542 	ret
   186D                    3543 ___str_10:
   186D 3E 20 4D 53 58 2D  3544 	.ascii "> MSX-SM ESP8266 WIFI Module Configuration v1.00<"
        53 4D 20 45 53 50
        38 32 36 36 20 57
        49 46 49 20 4D 6F
        64 75 6C 65 20 43
        6F 6E 66 69 67 75
        72 61 74 69 6F 6E
        20 76 31 2E 30 30
        3C
   189E 0A                 3545 	.db 0x0a
   189F 28 63 29 20 32 30  3546 	.ascii "(c) 2019 O"
        31 39 20 4F
   18A9 64 75 76 61 6C 64  3547 	.ascii "duvaldo Pavan Junior - ducasp@gmail.com"
        6F 20 50 61 76 61
        6E 20 4A 75 6E 69
        6F 72 20 2D 20 64
        75 63 61 73 70 40
        67 6D 61 69 6C 2E
        63 6F 6D
   18D0 0A                 3548 	.db 0x0a
   18D1 0A                 3549 	.db 0x0a
   18D2 00                 3550 	.db 0x00
   18D3                    3551 ___str_11:
   18D3 55 73 69 6E 67 20  3552 	.ascii "Using Baud Rate #%u"
        42 61 75 64 20 52
        61 74 65 20 23 25
        75
   18E6 0D                 3553 	.db 0x0d
   18E7 0A                 3554 	.db 0x0a
   18E8 00                 3555 	.db 0x00
   18E9                    3556 ___str_12:
   18E9 0A                 3557 	.db 0x0a
   18EA 00                 3558 	.db 0x00
   18EB                    3559 ___str_13:
   18EB 43 68 6F 6F 73 65  3560 	.ascii "Choose AP:"
        20 41 50 3A
   18F5 0A                 3561 	.db 0x0a
   18F6 0A                 3562 	.db 0x0a
   18F7 00                 3563 	.db 0x00
   18F8                    3564 ___str_14:
   18F8 25 75 20 2D 20 25  3565 	.ascii "%u - %s"
        73
   18FF 00                 3566 	.db 0x00
   1900                    3567 ___str_15:
   1900 20 28 50 57 44 29  3568 	.ascii " (PWD)"
   1906 0D                 3569 	.db 0x0d
   1907 0A                 3570 	.db 0x0a
   1908 00                 3571 	.db 0x00
   1909                    3572 ___str_16:
   1909 20 28 4F 50 45 4E  3573 	.ascii " (OPEN)"
        29
   1910 0D                 3574 	.db 0x0d
   1911 0A                 3575 	.db 0x0a
   1912 00                 3576 	.db 0x00
   1913                    3577 ___str_17:
   1913 0A                 3578 	.db 0x0a
   1914 57 68 69 63 68 20  3579 	.ascii "Which one to connect? (ESC exit)"
        6F 6E 65 20 74 6F
        20 63 6F 6E 6E 65
        63 74 3F 20 28 45
        53 43 20 65 78 69
        74 29
   1934 00                 3580 	.db 0x00
   1935                    3581 ___str_18:
   1935 0A                 3582 	.db 0x0a
   1936 50 61 73 73 77 6F  3583 	.ascii "Password? "
        72 64 3F 20
   1940 00                 3584 	.db 0x00
   1941                    3585 ___str_19:
   1941 53 75 63 63 65 73  3586 	.ascii "Success, AP configured to be used."
        73 2C 20 41 50 20
        63 6F 6E 66 69 67
        75 72 65 64 20 74
        6F 20 62 65 20 75
        73 65 64 2E
   1963 0A                 3587 	.db 0x0a
   1964 00                 3588 	.db 0x00
   1965                    3589 ___str_20:
   1965 45 72 72 6F 72 2C  3590 	.ascii "Error, AP not configured!"
        20 41 50 20 6E 6F
        74 20 63 6F 6E 66
        69 67 75 72 65 64
        21
   197E 0A                 3591 	.db 0x0a
   197F 00                 3592 	.db 0x00
   1980                    3593 ___str_21:
   1980 55 73 65 72 20 63  3594 	.ascii "User canceled by ESC key..."
        61 6E 63 65 6C 65
        64 20 62 79 20 45
        53 43 20 6B 65 79
        2E 2E 2E
   199B 0A                 3595 	.db 0x0a
   199C 00                 3596 	.db 0x00
   199D                    3597 ___str_22:
   199D 53 63 61 6E 20 72  3598 	.ascii "Scan results: no answer..."
        65 73 75 6C 74 73
        3A 20 6E 6F 20 61
        6E 73 77 65 72 2E
        2E 2E
   19B7 0A                 3599 	.db 0x0a
   19B8 00                 3600 	.db 0x00
   19B9                    3601 ___str_23:
   19B9 53 63 61 6E 20 72  3602 	.ascii "Scan request: no answer..."
        65 71 75 65 73 74
        3A 20 6E 6F 20 61
        6E 73 77 65 72 2E
        2E 2E
   19D3 0A                 3603 	.db 0x0a
   19D4 00                 3604 	.db 0x00
   19D5                    3605 ___str_24:
   19D5 4E 61 67 6C 65 20  3606 	.ascii "Nagle set as requested..."
        73 65 74 20 61 73
        20 72 65 71 75 65
        73 74 65 64 2E 2E
        2E
   19EE 0A                 3607 	.db 0x0a
   19EF 00                 3608 	.db 0x00
   19F0                    3609 ___str_25:
   19F0 4E 61 67 6C 65 20  3610 	.ascii "Nagle not set as requested, error!"
        6E 6F 74 20 73 65
        74 20 61 73 20 72
        65 71 75 65 73 74
        65 64 2C 20 65 72
        72 6F 72 21
   1A12 0A                 3611 	.db 0x0a
   1A13 00                 3612 	.db 0x00
   1A14                    3613 ___str_26:
   1A14 46 69 6C 65 3A 20  3614 	.ascii "File: %s Size: %s "
        25 73 20 53 69 7A
        65 3A 20 25 73 20
   1A26 0D                 3615 	.db 0x0d
   1A27 0A                 3616 	.db 0x0a
   1A28 00                 3617 	.db 0x00
   1A29                    3618 ___str_27:
   1A29 45 72 72 6F 72 20  3619 	.ascii "Error requesting to start firmware update."
        72 65 71 75 65 73
        74 69 6E 67 20 74
        6F 20 73 74 61 72
        74 20 66 69 72 6D
        77 61 72 65 20 75
        70 64 61 74 65 2E
   1A53 0D                 3620 	.db 0x0d
   1A54 0A                 3621 	.db 0x0a
   1A55 00                 3622 	.db 0x00
   1A56                    3623 ___str_28:
   1A56 45 72 72 6F 72 20  3624 	.ascii "Error reading file..."
        72 65 61 64 69 6E
        67 20 66 69 6C 65
        2E 2E 2E
   1A6B 0D                 3625 	.db 0x0d
   1A6C 0A                 3626 	.db 0x0a
   1A6D 00                 3627 	.db 0x00
   1A6E                    3628 ___str_29:
   1A6E 45 72 72 6F 72 20  3629 	.ascii "Error requesting to write firmware block."
        72 65 71 75 65 73
        74 69 6E 67 20 74
        6F 20 77 72 69 74
        65 20 66 69 72 6D
        77 61 72 65 20 62
        6C 6F 63 6B 2E
   1A97 0D                 3630 	.db 0x0d
   1A98 0A                 3631 	.db 0x0a
   1A99 00                 3632 	.db 0x00
   1A9A                    3633 ___str_30:
   1A9A 45 72 72 6F 72 20  3634 	.ascii "Error reading firmware file!"
        72 65 61 64 69 6E
        67 20 66 69 72 6D
        77 61 72 65 20 66
        69 6C 65 21
   1AB6 0A                 3635 	.db 0x0a
   1AB7 00                 3636 	.db 0x00
   1AB8                    3637 ___str_31:
   1AB8 45 72 72 6F 72 2C  3638 	.ascii "Error, couldn't open %s ..."
        20 63 6F 75 6C 64
        6E 27 74 20 6F 70
        65 6E 20 25 73 20
        2E 2E 2E
   1AD3 0D                 3639 	.db 0x0d
   1AD4 0A                 3640 	.db 0x0a
   1AD5 00                 3641 	.db 0x00
   1AD6                    3642 ___str_32:
   1AD6 45 72 72 6F 72 2C  3643 	.ascii "Error, %s is 0 bytes long..."
        20 25 73 20 69 73
        20 30 20 62 79 74
        65 73 20 6C 6F 6E
        67 2E 2E 2E
   1AF2 0D                 3644 	.db 0x0d
   1AF3 0A                 3645 	.db 0x0a
   1AF4 00                 3646 	.db 0x00
   1AF5                    3647 ___str_33:
   1AF5 4F 6B 2C 20 75 70  3648 	.ascii "Ok, updating FW using server: %s port: %u"
        64 61 74 69 6E 67
        20 46 57 20 75 73
        69 6E 67 20 73 65
        72 76 65 72 3A 20
        25 73 20 70 6F 72
        74 3A 20 25 75
   1B1E 0D                 3649 	.db 0x0d
   1B1F 0A                 3650 	.db 0x0a
   1B20 46 69 6C 65 20 70  3651 	.ascii "File path: %s"
        61 74 68 3A 20 25
        73
   1B2D 0A                 3652 	.db 0x0a
   1B2E 50 6C 65           3653 	.ascii "Ple"
   1B31 61 73 65 20 57 61  3654 	.ascii "ase Wait, it can take up to a few minutes!"
        69 74 2C 20 69 74
        20 63 61 6E 20 74
        61 6B 65 20 75 70
        20 74 6F 20 61 20
        66 65 77 20 6D 69
        6E 75 74 65 73 21
   1B5B 0D                 3655 	.db 0x0d
   1B5C 0A                 3656 	.db 0x0a
   1B5D 00                 3657 	.db 0x00
   1B5E                    3658 ___str_34:
   1B5E 4F 6B 2C 20 75 70  3659 	.ascii "Ok, updating certificates using server: %s port: %u"
        64 61 74 69 6E 67
        20 63 65 72 74 69
        66 69 63 61 74 65
        73 20 75 73 69 6E
        67 20 73 65 72 76
        65 72 3A 20 25 73
        20 70 6F 72 74 3A
        20 25 75
   1B91 0D                 3660 	.db 0x0d
   1B92 0A                 3661 	.db 0x0a
   1B93 46 69 6C 65 20 70  3662 	.ascii "File pa"
        61
   1B9A 74 68 3A 20 25 73  3663 	.ascii "th: %s"
   1BA0 0A                 3664 	.db 0x0a
   1BA1 50 6C 65 61 73 65  3665 	.ascii "Please Wait, it can take up to a few minutes!"
        20 57 61 69 74 2C
        20 69 74 20 63 61
        6E 20 74 61 6B 65
        20 75 70 20 74 6F
        20 61 20 66 65 77
        20 6D 69 6E 75 74
        65 73 21
   1BCE 0D                 3666 	.db 0x0d
   1BCF 0A                 3667 	.db 0x0a
   1BD0 00                 3668 	.db 0x00
   1BD1                    3669 ___str_35:
   1BD1 53 75 63 63 65 73  3670 	.ascii "Success updating certificates!"
        73 20 75 70 64 61
        74 69 6E 67 20 63
        65 72 74 69 66 69
        63 61 74 65 73 21
   1BEF 0A                 3671 	.db 0x0a
   1BF0 00                 3672 	.db 0x00
   1BF1                    3673 ___str_36:
   1BF1 53 75 63 63 65 73  3674 	.ascii "Success, firmware updated, wait a minute so it is fully flas"
        73 2C 20 66 69 72
        6D 77 61 72 65 20
        75 70 64 61 74 65
        64 2C 20 77 61 69
        74 20 61 20 6D 69
        6E 75 74 65 20 73
        6F 20 69 74 20 69
        73 20 66 75 6C 6C
        79 20 66 6C 61 73
   1C2D 68 65 64 2E        3675 	.ascii "hed."
   1C31 0A                 3676 	.db 0x0a
   1C32 00                 3677 	.db 0x00
   1C33                    3678 ___str_37:
   1C33 46 61 69 6C 65 64  3679 	.ascii "Failed to update from remote server..."
        20 74 6F 20 75 70
        64 61 74 65 20 66
        72 6F 6D 20 72 65
        6D 6F 74 65 20 73
        65 72 76 65 72 2E
        2E 2E
   1C59 0A                 3680 	.db 0x0a
   1C5A 00                 3681 	.db 0x00
   1C5B                    3682 ___str_38:
   1C5B 45 53 50 20 64 65  3683 	.ascii "ESP device not found..."
        76 69 63 65 20 6E
        6F 74 20 66 6F 75
        6E 64 2E 2E 2E
   1C72 0A                 3684 	.db 0x0a
   1C73 00                 3685 	.db 0x00
                           3686 	.area _CODE
                           3687 	.area _INITIALIZER
                           3688 	.area _CABS (ABS)
