                         ***** OCM-PLD v3.9.1plus *****

Brought to you by DucaSP ( https://github.com/ducasp )

Do you like what I do and want to pay me a Coffee as a thank you?
https://ko-fi.com/R6R2BRGX6
Just do it if you feel like it :)

                            - TABLE OF CONTENTS -

    - EDITOR NOTES
    - General Features
        - MSX Mouse emulation
        - VAUS or MSX Standard Paddle emulation
        - OPL3
        - Franky SN76489 / Master System SSG
        - Franky Master System VDP
        - Second PSG
        - Autofire by HrA!
        - Wi-Fi BIOS
    - SMX-HB / HB EX  / HB MINI SPECIFICS
        - Make sure that you have the right Keyboard Type Set!
        - Alternatives for keys unavailable on MSX keyboards
        - Joystick Debounce
        - Alternative access to some resources using unmodified case
        - JTAG Programming
    - MC2+ SPECIFICS
        - Multi-Core
        - OSD
        - DIP Switches
        - OSD Settings vs. SETSMART vs. Keyboard shortcuts
        - MEGA SD / SD-Card
        - Joystick ports
        - External Slots
        - Wi-Fi
        - OPL3
        - Keyboard Layout

                               - EDITOR NOTES -

To not reinvent the wheel, please make use of the current manuals for:

    - Switched I/O and Keyboard Shortcuts: switched io ports revision 11.pdf

    - DIP Switches: dip-sw user manual v3.9.1-type2.pdf and if you have an
      SMX-HB also dip-sw user manual v3.9.1-SMX-HB.txt

    - General guidelines: Zemmix_Neo_EN-US.pdf and Zemmix_Neo_PT-BR.pdf have
      quite a lot of good information about using SD, tape, cartridges, etc.
      Just ignore LEDs, DIP Switches and Connectors information

    - SD Creation: I've made a video quite some time ago, it should work nicely
      yet:
      https://youtu.be/h2RQ-0zdfQ8

    - Wi-Fi Setup: I've made a video quite some time ago, showing how to set it
      up using CFG8266, need to find some time to update it for those that use
      the Wi-Fi BIOS, but it is so intuitive that I don't think a video for it
      is needed:
      https://youtu.be/F0Wecd8xxQ8

    - ESP-01 for those that need a new one or don't have one: this is another
      old video (Wi-Fi stuff was done by me back in 2017/2018) that explains
      how to save the proper custom firmware on a vanilla ESP-01 module that
      can be bought easily and real cheap:
      https://youtu.be/uoaiEamWUUg

Notice that my YouTube videos are either in poorly spoken English (not my
native language) and a few are in Brazilian Portuguese. As far as I know they
all have subtitles in both English and Portuguese, so they should be accessible
to most people. Even though not my native language, I try to make most videos
in English to make them accessible to an wider audience.

The idea of this mini-manual is to focus on information that is not found on
the above mentioned manuals and videos. :)

                             - General Features -

                            - MSX Mouse emulation -

There are fixes for its behavior as it was moving on 2 pixels increment minimum
, current OCM-PLD picked up this fix as well (except for SMX-HB and SM-X Mini
that aren't supported by KdL).

Applies to:
            ALL DEVICES AND BUILDS EXCEPT SMX-HB Franky

How to use:
            SM-X, HB Mini and SM-X Mini needs a PS/2 splitter adapter, that
splits the PS/2 connector into two, one for keyboard and other for mouse. SX2
and MC2+ have two PS/2 connectors, one for keyboard and other for mouse, so you
just need to connect a mouse to the PS/2 port. SMX-HB unfortunately doesn't
have any PS/2 connector built-in, if you want to use this feature (or an PS/2
keyboard) you will need to solder one or two connectors using the main-board
GPIO port, please seek directions on how to do it with Victor Trucco or the
seller of your board.

            Moving the PS/2 mouse will automatically cause the Joystick Port 1
to be "disconnected" for a second and then the emulated MSX Mouse will be
"connected" to that port. Pressing buttons 1 or 2 (2 Joystick Buttons) or A, B,
C and START buttons on SEGA Mega Drive/Genesis joystick when MSX mouse is
"connected" will cause the Joystick Port 1 to be "disconnected" for a second
and then the real Joystick port 1 will be connected back. MC2+ Exclusive: any
direction, X, Y, Z and Mode buttons also switch back the Joystick port to its
regular function.

                  - VAUS or MSX Standard Paddle emulation -

This is a new feature that allows using a PS/2 mouse horizontal movement to
emulate right/left turning the knob of a paddle. VAUS Paddle is a paddle made
by TAITO and used mostly by ARKANOID and ARKANOID II games. Make sure to use
the GOOD MSX version of these games, as other versions have been hacked to use
a joystick instead of VAUS Paddle. MSX Standard Paddle is following ASCII model
for a Paddle being read as a PWM device. Since most software that makes use of
MSX Standard Paddle (patched version of Galaga, look for FRS IPS patch, and
HIDTEST / HIDLIB) use MSX BIOS functions to read PWM devices and those routines
are hardcoded considering Z80 clock is close to 3.58MHz. If you use MSX
Standard paddle with faster clock speeds, the paddle movement range will not be
correct, which is expected and occurs with real MSX Standard Paddles attached
to the Joystick Port as well.

Applies to:
            ALL DEVICES, ALL BUILDS EXCEPT SMX-HB FRANKY/SND BUILD

How to use:
            Paddle emulation is off by default. For MC2+ the only way to set it
is by setting it on the OSD menu (F12 key or START + MODE on an eight button
joystick on port 1).

            On all other devices it is possible to turn off Paddle Emulation by
sending SETSMART -8D (which is the default/power-up condition). You can turn on
VAUS Paddle emulation using SETSMART -8E and turn on MSX Standard Paddle
emulation using SETSMART -8F. Paddle Emulation setting is persistent across all
types of boots, and cleared back to the default OFF setting when device is
power cycled EXCEPT on MC2+, where OSD settings are saved in most cases and
persistent even across power cycles.

            Notice that when paddle emulation is turned on, joystick port 1
is disabled and MSX Mouse emulation is disabled as well, as the port 1 is used
to the "virtual paddle device".

                                   - OPL3 -

There are fixes allowing correct usage for software that depends on OPL3
interruptions and timers, as well for software / sound tracks that program
sounds to play on only one channel. Solution for most devices was an ingenious
hack that modifies the incoming channel programming on the fly to play on both
channels. Only on MC2+, full stereo rendering/sequencing is now available.
Current OCM-PLD picked up this fix as well (except for SMX-HB and SM-X Mini
that aren't supported by KdL).

Applies to:
            ALL DEVICES EXCEPT SMX-HB AND HB MINI, ALL BUILDS EXCEPT FRANKY

How to use:
            OPL3 emulation is off by default, except on MC2+ that it is on by
default. For MC2+ you can toggle OPL3 state using the methods mentioned later,
but on MC2+ the preferrable method is to set it on the OSD menu (F12 key or
START + MODE on an eight button joystick on port 1) as this gets saved on the
INI file of the core. OSD setting might not show the true state of OPL3 if you
use SCROLL LOCK or SETSMART. OPL3 is implemented on I/O ports 0xC0 to 0xC3 with
mirrors on I/O ports 0xC4 to 0xC7.

            On all devices it is possible to toggle OPL3 status by hitting
SCROLL LOCK on a PS/2 Keyboard, or to set it OFF using SETSMART -87 or set it
ON using SETSMART -88. Those methods are temporary and the default setting (
OFF for most devices or what is set on OSD in MC2+) will be restored on power
cycle.

        Softwares confirmed to work with OPL3 are Roboplay, VGMPLAY and most
software that detects OPL3/OPL4 without the need of an MSX AUDIO bios.

                    - Franky SN76489 / Master System SSG -

Sega Master System used a slightly modified version of SN76489 PSG by Texas
Instruments. Coleco Vision and SG1000 used SN76489 for that task as well. Now,
it is possible to play quite a lot of games from Coleco and SG1000 on MSX using
software that will modify/patch the ROMs so they work on MSX hardware. In most
cases sound is only available if you have a SN76489 chip in an expansion like
Musical Memory Mapper, Playsoniq, Franky, etc... Even the few patches that have
sound working on MSX PSG do not sound quite right, sounding a lot better when a
SN76489 is available. Having that chip also allows to play VGM sound-tracks
using that chip using VGMPLAY and other software that detects a Franky. Finally
, it can be used also to play SMS games on Franky builds.

Applies to:
            ALL DEVICES, FRANKY/SND BUILDS

How to use:
            Franky design unfortunately choses to use I/O ports 0x48 and 0x49
to access SN76489 registers and to read Sega Master System VDP line counters.
In the MSX standard I/O ports from 0x40 to 0x4F are reserved for switched I/O
devices, which Franky unfortunately doesn't implement. As such, it is a direct
I/O device occupying two I/O addresses reserved for switched I/O. For most MSX
computers that is fine, but on some (i.e.: Panasonic machines with Turbo speeds
, OCM devices like yours, Turbo-R, etc.) there are devices using switched I/O,
and there will be a conflict. Due to that I've implemented a protection that
won't allow SN76489 to access the MSX BUS when the internal Switched I/O device
is selected.

            Some software (SSMS, old versions of COL4MM, old versions of OCM
utilities) might leave a switched I/O device selected. There are a few ways to
disable switched I/O and re-enable access to the SSG:

    - Use software that automatically disables switched I/O before trying to
      detect/use a SN76489 on a Franky device. Using COL4MMM games in COM
      format (if you use the latest version of COL4MMM) or using VGMPLAY
      to play a sound track using SN76489 doesn't require any additional steps,
      in case of VGMPLAY, you can just play a SN76489 song briefly and exit and
      then use any other software you wish as it will leave switched I/O
      disabled and SN76489 will be enabled.

    - Disable the switched I/O in MSX Basic using the command OUT &H40,0

    - Reserve ports 0x48 and 0x49 for exclusive Franky use using:
      SETSMART -8C will reserve those ports exclusively for FRANKYSND
      SETSMART -8B will restore normal functionality of those ports

            If you plan to use SN76489 on Sofa Run or use SSMS, the best option
is to create a .BAT file called ENFRANKY.BAT that will run SETSMART -8C and
other .BAT called DIFRANKY.BAT that will run SETSMART -8B, so you can execute
those before/after running Franky compatible software.

IMPORTANT: notice that I/O ports 0x48 and 0x49 are used by OCM to read a few
statuses like Machine Type, and some OCM software might not report the correct
status / Machine Type when you reserve ports to be used only for Franky. This
shouldn't cause any malfunction though.

                         - Franky Master System VDP -

There is cartridge named Franky, which connects the SMS chip that contains its
VDP and PSG/SSG to the MSX. With it, it is possible to patch SMS ROMs so they
work on MSX. SMS doesn't use a BIOS and its games generally access hardware
using a range of I/O addresses to access VDP and SSG, as well to access its
controllers. Some people patch SMS games so they can run on a MSX with a Franky
, and we also have Sofa SMS that tries to automate that  task (some games work,
others doesn't). It is possible to play Alest, Alex Kidd, Wonder Boy among many
other games if you install the FRANKY version.

Applies to:
            ALL DEVICES, FRANKY BUILDS

How to use:
            IMPORTANT: SMS VDP doesn't work well with a CPU speed other than
3.58MHz, so before starting up a SMS game you must turn off CPU Turbo (ex.: DIP
SWITCH 1 set to OFF), otherwise it won't work properly!

            Franky design unfortunately choses to use I/O ports 0x48 and 0x49
to access SN76489 registers and to read Sega Master System VDP line counters.
In the MSX standard I/O ports from 0x40 to 0x4F are reserved for switched I/O
devices, which Franky unfortunately doesn't implement. As such, it is a direct
I/O device occupying two I/O addresses reserved for switched I/O. For most MSX
computers that is fine, but on some (i.e.: Panasonic machines with Turbo speeds
, OCM devices like yours, Turbo-R, etc.) there are devices using switched I/O,
and there will be a conflict. Due to that I've implemented a protection that
won't allow SN76489 to access the MSX BUS when the internal Switched I/O device
is selected.

            Some software (SSMS, old versions of COL4MM, old versions of OCM
utilities) might leave a switched I/O device selected. There are a few ways to
disable switched I/O and re-enable access to the SSG:

    - Use software that automatically disables switched I/O before trying to
      detect/use a SN76489 on a Franky device. Using COL4MMM games in COM
      format (if you use the latest version of COL4MMM) or using VGMPLAY
      to play a sound track using SN76489 doesn't require any additional steps,
      in case of VGMPLAY, you can just play a SN76489 song briefly and exit and
      then use any other software you wish as it will leave switched I/O
      disabled and SN76489 will be enabled.

    - Disable the switched I/O in MSX Basic using the command OUT &H40,0

    - Reserve ports 0x48 and 0x49 for exclusive Franky use using:
      SETSMART -8C will reserve those ports exclusively for FRANKYSND
      SETSMART -8B will restore normal functionality of those ports

            If you plan to use SN76489 on Sofa Run or use SSMS, the best option
is to create a .BAT file called ENFRANKY.BAT that will run SETSMART -8C and
other .BAT called DIFRANKY.BAT that will run SETSMART -8B, so you can execute
those before/after running Franky compatible software.

IMPORTANT: notice that I/O ports 0x48 and 0x49 are used by OCM to read a few
statuses like Machine Type, and some OCM software might not report the correct
status / Machine Type when you reserve ports to be used only for Franky. This
shouldn't cause any malfunction though.

                                - Second PSG -

A second PSG is a feature that can be used by some patches like the one that
upgrades Maze of Galious to MSX2 graphics and improved sound track, also by
VGMPLAY or any other software compatible with it. This implementation allows
PSG registers to be read back making easy to detect the second PSG. It is on
by default and it can be disabled if you wanna use the second PSG of an
external cartridge, disable the external slot through the dip switches, send
the command SETSMART -54, then enable the external slot through the dip
switches and push the RESET button. Current OCM-PLD picked up this feature as
well (except for SMX-HB and SM-X Mini that aren't supported by KdL).

Applies to:
            ALL DEVICES, ALL VERSIONS

How to use:
            No special set-up or commands are needed. Second PSG is always
working on I/O ports 0x10 to 0x13. It is automatically detected by any software
that looks for a PSG installed in that I/O address range. If you use KdL's
OCM-PLD, second PSG is disabled by default and you must send SETSMART -55
command to enable it. My firmwares have it enabled by default.

  ***** OCM-PLD v3.9 by KdL brought this feature that is not documented: *****

                             - Autofire by HrA! -

HrA! made an autofire module that adds 16 speeds of autofire. Once enabled, it
will work on the Space Bar and on buttons A and B of both Joystick ports (if
using Joymega, it will apply to START, A, B and C buttons).

Applies to:
            ALL DEVICES, ALL BUILDS

How to use:
            To toggle the module state (it starts off) you need to press
CONTROL, SHIFT and PAGE-UP (PAGE-DOWN also works instead of PAGE-UP). It will
enable or disable the Autofire module depending on its current state.

            To cycle through the 16 different levels of speed you need to press
CONTROL + PAGE-DOWN to decrease the current speed or CONTROL + PAGE-UP to
increase the current speed.

HOT TIP: it might be tedious to hit CONTROL + PAGE-UP 15 times to get to the
fastest Autofire speed. A nice way to get the fastest speed quickly is to,
after power-up or reset, you decrease the speed one time with CONTROL + PAGE-
DOWN. Since Autofire starts at the slowest speed, by decreasing the slowest
speed it cycles back and goes to the fastest speed. :)

                                - Wi-Fi BIOS -

I've worked on an UNAPI compatible BIOS module for OCM-PLD, and that BIOS also
includes an easy set-up menu that can be accessed by keeping F1 Key pressed
during boot. KdL was a huge contributor helping on the design of the menus,
testing and also helping programming some parts of it. The Wi-Fi BIOS is not
present on the default BIOS package that are part of the PLD files for 2nd GEN
devices (and MC2+ doesn't have built-in BIOS capability). The only way to use
it is by having a SD-Card (or in case of MC2+, it can be SD-Card image as well)
where the root folder has a SD-BIOS file named OCM-BIOS.DAT. That SD-BIOS can
be used as long as the file is not fragmented. If the SD-BIOS has the Wi-Fi
BIOS built-in you have to take out the loading of ESP8266.COM from your
autoexec.bat (and perhaps take out RAMHLPR.COM, WAITWIFI.COM and SNTP.COM as
well), and almost anything you would need to use CFG8266 can be done on the
Wi-Fi BIOS set-up menu, except for:
    - ESP Firmware Update
    - Certificates Update
    - Manual setting of fixed TCP-IP IP Address

Applies to:
            ALL 2nd GEN OCM DEVICES, 1st GEN OCM DEVICES USING KdL Wi-Fi Dongle

How to use:
            You will need to have you SD-Card or SD-Card image (MC2+) created
properly, following the recommendations for a SD for OCM devices, and make sure
that an OCM-BIOS.DAT file is on the root folder and is not fragmented. The best
 way to ensure this is to use KdL's OCM-SDBIOS Pack. To have that pack you need
to contact KdL, just click the OCM-SDBIOS Pack link at his page:
http://gnogni.altervista.org/index.html
            I've created an UNAPI Installation package that has proper
instructions and some SD-BIOS examples, in that case ignore instructions that
OCM-BIOS.DAT needs to be the first file, you can download it at:
https://github.com/ducasp/MSX-Development/releases/tag/SMXWiFiPack_v1.2
            Finally, there is an YouTube video talking about creating a SD-Card
using SD-Bios with KdL's OCM-SDBIOS Pack link, even though it doesn't mention
you can choose the SD-BIOS to have an Wi-Fi BIOS built-in, this is something
that you can easily figure out and all the other steps are exactly the same as
on the video:
https://youtu.be/h2RQ-0zdfQ8

            Wi-Fi setup menu is entered by keeping F1 pressed during MSX boot.
On some devices it might be easier to first boot and once booted, press F1 and
keep it pressed then hold the reset button for a few seconds (F1 still pressed)
and then release reset button, when you see the Wi-Fi BIOS menu you can release
F1. The Wi-Fi setup menu is pretty intuitive and allows you to:

    - Scan and join any available Access Point / Router
    - Toggle the usage of Nagle Algorithm (best left off)
    - Set whether Wi-Fi is always on or disabled automatically as programmed
    - Configure the Wi-Fi BIOS to update clock and date during boot (way faster
      than using SNTP.COM on AUTOEXEC.BAT)

                 ***** SMX-HB / EX / HB MINI SPECIFICS *****

            SMX-HB / EX / HB MINI have their own peculiarities:

    1 - Due to the electronic components shortage and to make it affordable, it
        uses a FPGA that has about 1/3 less capacity than the 2nd GEN OCM
        devices. As such, at this moment it is not possible to have OPL3 on it,
        as it uses quite a big amount of FPGA logic units and registers. Also
        due to that Franky version doesn't emulate MSX mouse using PS/2 mouse,
        paddles and Turbo-R MIDI Out and PCM.

    2 - As it is a board to be fitted inside a real MSX computer (Hotbit or
        Expert) case and use that computer keyboard instead of a PC-AT PS/2
        keyboard (which can still be used if you solder a PS/2 connector on its
        GPIO port and disable "internal" keyboard), most of the times keys that
        are used for shortcuts or enabling disabling devices are not available
        to the user. (HB / EX ONLY, HB MINI uses PS/2 Keyboards and needs PS/2
        splitter to use mouses, like SM-X / SM-X Mini)

    3 - Due to its Joystick port connections being overly sensitive, debouncing
        is necessary to avoid ghost joystick hits when ports are not connected,
        which might not play well with devices that use the joystick port for
        protocols with tight timing.

    4 - Being built in a computer case, not everything is easily accessible. SD
        -Card slot, DIP-Switches and Scanline generator button are not
        accessible when the case is closed unless the user opts to cut the case
        to make them accessible. (HB / EX ONLY)

    5 - JTAG access to the FPGA/Flash Memory is not possible unless you take
        off the FPGA module board. Due to that, the FPGA board won't receive
        power from the case power supply and USB Blaster is not able to provide
        enough power to it. (HB / EX ONLY)

           - Make sure that you have the right Keyboard Type Set! -

            Most users are going to use Hotbit / Expert keyboard. In that case,
make sure that DIP SWITCH position 9 is set to OFF, as this will set OCM to use
a specific keyboard map and a specific keyboard interface that is best suited
for it. Failure to do so might cause wrong keys as well as getting the keyboard
to freeze. If you want to use an external PS/2 keyboard, please seek guidance
with Victor Trucco or your board seller on how to make the connections and
configure the board for it. After those steps are taken, you will flick the DIP
SWITCH position 9 to ON. Failure to do so, like with built-in keyboard, may
cause wrong keys mapping. HB MINI USERS SHOULD HAVE DIP 9 ALWAYS SET TO ON!

          - Alternatives for keys unavailable on built-in keyboard -

            Builds specific for SMX-HB have the following alternatives to
simulate keys not existing on the built-in keyboard:

    - PAGE-UP: keep SELECT pressed and then press +
    - PAGE-DOWN: keep SELECT pressed and then press -
    - F9 to F12: keep SELECT pressed and then press F1 to F4

                            - Joystick Debounce -

            Joystick ports on SMX-HB board are really sensitive, and due to
that debouncing was implemented to avoid false / ghost hits. Debounce works as
a filter, so it will only consider that a Joystick port signal status changed
(i.e.: Up direction is pressed on a joypad) if it is stable at that status for
some time. If the time period to check for stability is too low, then it is not
really effective, and if it is too high it might cause noticeable input lag and
incompatibility with devices that use joystick port as a communication port,
like JoyNet, Serial Comm. Adapters, VAUS Paddle, etc. At this moment debounce
can't be disabled.

         - Alternative access to some resources using unmodified case -

            Hotbit/Expert case doesn't have enough openings for all resources
that end user has available with SMX-HB board. This might be less than optimal
as it is no easy task to open the case and then close it again. But, for most
cases you have good alternatives that will avoid the need to open the case.
Just make sure to set the dip switches for the settings you are going to use
most, as those alternatives will not stick after you power down, needing that
you run the software/command line again to set it back after powering down.

    - SD Card Slot: the major use to take a card out is to plug it to a reader
      in another computer to move files to it. SMX-HB has built-in Wi-Fi that
      can be easily configured (editor notes has links to videos that explains
      how to get it running, and those videos have links to a package with
      software relevant to that), and once it is running you can transfer files
      over Wi-Fi. Of course, due to the fact that we are talking about a z80
      CPU and disk controllers without DMA, transfer speeds are limited (your
      mileage may vary, usually between 17KB/s to 30KB/s depending on software,
      protocol, distance to router, z80 speed, etc.). So, make sure that before
      closing your SMX-HB case, you have most or all files you need, and then
      use the Wi-Fi feature to move new files only. OBSOFTP is a really nice
      software, and you can send OBSOFTP A:\ to have your SD-Card being shared
      over network as a FTP Server. OBSOFTP is very nice to tell you the IP
      address you should use on the other computer to connect to your MSX. Make
      sure to set the CPU speed to turbo to get faster transfer rates. :)

      NOTE: OBSOFTP accepts only one connection, and works best with passive
      connections. I have a good experience using Windows built-in line command
      FTP client. You can use DIR to list contents, CD to change to folders,
      BINARY to set transfer mode to BINARY (better do that before any GET or
      PUT command), and PUT to send files to the MSX or GET to receive files
      from the MSX. If you try using other FTP software, make sure that it is
      not set to open multiple connections, to use passive connections, not use
      SSL, do not open multiple connections to download files. Your mileage may
      vary with other FTP software as OBSOFTP is a really simple FTP server.

      ADVANCED USERS: you may get extra performance using SOFA FTP, but it is
      not as easy and intuitive to use, on the other hand, it has a feature to
      keep folders synchronized. But it requires you have a FTP server on your
      computer / network and that server must have some specific features, so
      it is not for everyone.

    - Scanline Generator: hated by some, loved by others... Well, there is a
      button that toggles it from the normally off state to 25%, then 50% then
      75% (the thicker scanlines are, the fainter image is) and back to off.
      You can change it without hitting that button by sending:

      OFF: SETSMART -50
      25%: SETSMART -51
      50%: SETSMART -52
      75%: SETSMART -53

    - DIP Switches: most settings can be overridden:

      CPU Speed: you can use SELECT + F4 emulating F12 key to cycle through
      CPU Speeds, or, you can send:
        3.58MHz: SETSMART -03
        4.10MHz: SETSMART -04
        4.48MHz: SETSMART -05
        4.90MHz: SETSMART -06
        5.39MHz: SETSMART -07
        6.10MHz: SETSMART -08
        6.96MHz: SETSMART -09
        8.06MHz: SETSMART -0A

      Video Output: you can send:
        15KHz Composite : SETSMART -17
        15KHz RGB       : SETSMART -18
        31KHz LCD/Wide  : SETSMART -19
        31KHz CRT/4:3   : SETSMART -1A

      Slots 1 and 2:
        Both External       : SETSMART -0D
        1 - SCC   2 - Ext   : SETSMART -0E
        1 - Ext   2 - SCC   : SETSMART -0F
        1 - SCC   2 - SCC   : SETSMART -10
        1 - Ext   2 - A8K   : SETSMART -11
        1 - SCC   2 - A8K   : SETSMART -12
        1 - Ext   2 - A16K  : SETSMART -13
        1 - SCC   2 - A16K  : SETSMART -14

    - JTAG Programming: recovery of an SMX-HB with a JIC file and an USB
      Blaster is no easy task. You not only have to open the case, but you also
      need to remove the FPGA daughter-board, connect it to USB Blaster and
      connect an external power supply to the FPGA daughter-board before using
      Quartus Programmer... The recommended external supply is DC 5V 2A, round
      connector, external for ground and internal for voltage.

                           ***** MC2+ SPECIFICS *****

            Now, Multicore 2+ is different to the other devices in the fact
that it is not dedicated to MSX, but, it can be used to easily replicate many
devices. As such, the Joystick ports are not following the MSX standard, it has
no DIP Switches, but has an On Screen Display (OSD) menu and many other nice
features that a separate micro-controller allows. It also doesn't have MSX
slots or Wi-Fi by default, but those can be added by connecting an expansion on
its expansion port (Expansion #02 adds three MSX Slots and Wi-Fi, also, I've
made it possible to use Wi-Fi with Expansion #03, originally meant to add Wi-Fi
/ RTC and a Raspberry PI to be used for ZX Spectrum Next). As you can expect,
some things need to be different for this device... :)

    - Multi-Core: that is not just a gimmick name, in fact, multiple "cores"
      can be used with MC2+, giving it the ability to work not only as a MSX
      using OCM-PLD made for it, as well other computers, game consoles and
      arcade machines! It has a "Menu Core" built-in as well a micro-controller
      that gives life to this functionality. Recommended versions are 1.07 or
      greater for CORE (Menu Core) and 2.0B or greater for STM (the auxiliary
      micro-controller).

    - OSD: On Screen Display or OSD is a pop-up menu that the micro-controller
      firmware brings up to the screen whenever F12 key is pressed OR MODE and
      Start are simultaneously pressed on an eight button joystick connected to
      the port 1. Since F12 key is a shortcut to the OSD menu, cycling through
      z80 Clock from regular to turbo using F12 key is not supported. You can
      use the OSD Menu entry for that to set it like the DIP Switch on other
      OCM devices, or, if you want to use an intermediate speed you can use
      SETSMART commands (check SMX-HB DIP Switches sections for those commands)
      or any software that sets the CPU Speed of an OCM device (i.e.: Sofarun).

    - DIP Switches: MC2+ uses a micro-controller that loads the FPGA with the
      "core", and feeds the "core" with virtual dip switches. Those virtual
      dip switches are set through the OSD menu, as other features also are set
      there, an an example, Scanlines. Upgrading the micro-controller firmware
      at least to version 2.0B is highly recommended, 2.00 is the bare minimum
      version to be used with OCM-PLD for MC2+.

      NOTE: if you are using an image file to simulate a SD-Card, any changes
      to the OSD menu are automatically saved to SD-Card attached to MC2+. Now,
      if you are using a SD Card Dedicated only for MSX, the micro-controller
      will keep track of your settings until device is powered off, and when
      powered back on it will return to default values. You can avoid that by,
      after changing your settings, go to the "Save Config & Reset" and
      choosing it. In that case, MSX will reset during configuration saving,
      as the SD Card can't be in use by the MSX so the micro-controller can
      save to it safely.

    - OSD Settings vs. SETSMART vs. Keyboard shortcuts: MC2+ auxiliary micro-
      controller doesn't receive information from the FPGA, only sends those
      information as "virtual dip-switches". As such, any setting made through
      SETSMART or Keyboard shortcuts might cause the OSD Menu to not show the
      current setting accurately (like a real DIP Switch doesn't physically
      change when SETSMART or Keyboard shortcut is used to change a setting
      also affected by DIP Switches). There is one exception though, that is
      the "Paddle using mouse" setting, as SETSMART commands won't change it,
      the only way to enable/disable Paddle emulation on MC2+ is using the OSD
      menu.

    - MEGA SD / SD-Card: MC2+ doesn't have OCM-PLD saved in flash memory, and
      as such, it is not possible to have MSX-BIOS along with OCM-PLD like
      other devices have. Due to that, it is mandatory to have a SD-BIOS in a
      file named OCM-BIOS.DAT placed in your SD-Card (or SD-Card image) file
      system root. Failure to do so will cause a black screen as no BIOS is
      loaded. Your SD-Card or image file needs to follow the same
      recommendations for all OCM devices (FAT16 up to 4GB, etc.) and have a
      SD-BIOS as well.
      There is a link to an YouTube video in the EDITOR NOTES section that can
      help you with that. Other than that, if you are using a SD-Card only for
      MSX, make sure to copy the .MCP file to it (and if you want it to be
      auto-loaded, rename it to CORE.MCP). If you are using an image file, your
      SD-Card can be formated using FAT16, FAT32 or FATX (but the image must be
      from a FAT16 formatted SD-Card), and the .MCP, .INI and .IMG files can be
      in any folder you wish.

    - Joystick ports: MC2+ uses SEGA standard Joystick port that accepts Master
      System 2 buttons joysticks (work as a 2 buttons MSX joystick), Mega Drive
      /Genesis 4 buttons joystick (work as a 4 buttons joystick attached to a
      Joymega), Mega Drive/Genesis 8 buttons joystick (work as an 8 buttons
      joystick attached to a Joymega) and an adaptor to MIDI output (please
      contact Victor Trucco or the board seller about it, the cable/adaptor
      used on SM-X/OCM 2nd GEN devices is for MSX Joystick port only).

      IMPORTANT, REALLY IMPORTANT: NEVER CONNECT ANY MSX DEVICE DIRECTLY TO
      MC2+ Joystick ports!!!! You can have a short-circuit and damage MC2+,
      your MSX device or both! That includes: MSX Mouses, MSX Paddles, MSX
      Joysticks/Joypads, Joymega, etc... Just connect joysticks compatible
      with SEGA Master System or SEGA Mega Drive/Genesis.

    - External Slots: those are only available if you have Expansion #02
      connected to your MC2+ expansion port. Even though it should be generally
      safe to leave the extension connected to it when using different cores,
      it is better to disconnect the extension when not using MC2+ with MSX
      cores. There are no settings needed to use the external slots and the
      Expansion #02 is automatically detected and used when connected.

    - Wi-Fi: it is available automatically if you have Expansion #02 connected
      to your MC2+ expansion port. Another alternative is to use Expansion #03
      connected to your MC2+ expansion port, but then you need to replace the
      ESP-01 module in it with a different ESP-01 module that has the proper
      firmware for SM-X/OCM/UNAPI usage. When using Expansion #03 back with ZX
      Spectrum Next core, make sure you switch back the ESP-01 with the one
      supplied with the expansion. A link to an YouTube video with instructions
      on how to program a regular ESP-01 with the custom firmware for SM-X/OCM/
      UNAPI is available on the EDITOR NOTES section. If you want to use this
      alternative, remember to enable "ZX Next Expansion" option in the OSD
      menu.

    - OPL3: currently, stereo output from OPL3 is exclusive to MC2+. Also,
      unlike other devices, OPL3 is on by default (as switching it off in OSD
      menu can be saved/permanent). You can change both whether OPL3 is enabled
      or if its output is in stereo through the OSD menu.

    - Keyboard Layout: as OSD settings are saved and restored, MC2+ OCM-PLD has
      the Keyboard Layout for all languages built-in, and the proper layout can
      be chosen through the OSD menu.


This manual is free to use and can be freely distributed. Derivative work can
be created as long as the original manual and author are mentioned/credited.
(c)2022 - 2023 Oduvaldo Pavan Junior - ducasp@gmail.com